From: Ms2ger <ms2ger@gmail.com>

diff --git a/js/xpconnect/src/XPCWrappedJSClass.cpp b/js/xpconnect/src/XPCWrappedJSClass.cpp
--- a/js/xpconnect/src/XPCWrappedJSClass.cpp
+++ b/js/xpconnect/src/XPCWrappedJSClass.cpp
@@ -44,16 +44,17 @@
 
 #include "nsXPCWrappedJSClass.h"
 
 #include "xpcprivate.h"
 #include "nsWrapperCache.h"
 #include "XPCWrapper.h"
 #include "AccessCheck.h"
 #include "nsXPCWrappedJS.h"
+#include "xpcProperty.h"
 
 #include "nsArrayEnumerator.h"
 #include "nsJSUtils.h"
 
 NS_IMPL_THREADSAFE_ISUPPORTS1(nsXPCWrappedJSClass, nsIXPCWrappedJSClass)
 
 // the value of this variable is never used - we use its address as a sentinel
 static uint32 zero_methods_descriptor;
diff --git a/js/xpconnect/src/xpcProperty.h b/js/xpconnect/src/xpcProperty.h
new file mode 100644
--- /dev/null
+++ b/js/xpconnect/src/xpcProperty.h
@@ -0,0 +1,24 @@
+#ifndef xpcProperty_h
+#define xpcProperty_h
+
+#include "nsIProperty.h"
+
+#include "nsCOMPtr.h"
+#include "nsIVariant.h"
+#include "nsStringGlue.h"
+
+class xpcProperty : public nsIProperty
+{
+public:
+    NS_DECL_ISUPPORTS
+    NS_DECL_NSIPROPERTY
+
+    xpcProperty(const PRUnichar* aName, uint32_t aNameLen, nsIVariant* aValue);
+    virtual ~xpcProperty() {}
+
+private:
+    nsString             mName;
+    nsCOMPtr<nsIVariant> mValue;
+};
+
+#endif // xpcProperty_h
diff --git a/js/xpconnect/src/xpcprivate.h b/js/xpconnect/src/xpcprivate.h
--- a/js/xpconnect/src/xpcprivate.h
+++ b/js/xpconnect/src/xpcprivate.h
@@ -461,31 +461,16 @@ enum WrapperType {
 /***************************************************************************
 ****************************************************************************
 *
 * All manner of utility classes follow...
 *
 ****************************************************************************
 ***************************************************************************/
 
-class xpcProperty : public nsIProperty
-{
-public:
-  NS_DECL_ISUPPORTS
-  NS_DECL_NSIPROPERTY
-
-  xpcProperty(const PRUnichar* aName, uint32_t aNameLen, nsIVariant* aValue);
-  virtual ~xpcProperty() {}
-
-private:
-    nsString             mName;
-    nsCOMPtr<nsIVariant> mValue;
-};
-
-/***************************************************************************/
 // data conversion
 
 class xpcObjectHelper
 {
 public:
     xpcObjectHelper(nsISupports *aObject, nsWrapperCache *aCache = nsnull)
     : mCanonical(nsnull),
       mObject(aObject),
