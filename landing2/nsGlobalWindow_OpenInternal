From: Ms2ger <ms2ger@gmail.com>

diff --git a/dom/base/nsGlobalWindow.h b/dom/base/nsGlobalWindow.h
--- a/dom/base/nsGlobalWindow.h
+++ b/dom/base/nsGlobalWindow.h
@@ -644,33 +644,29 @@ protected:
    *             three args, if present, will be aURL, aName, and aOptions.  So
    *             this param only matters if there are more than 3 arguments.
    * @param argc The number of arguments in argv.
    * @param aExtraArgument Another way to pass arguments in.  This is mutually
    *                       exclusive with the argv/argc approach.
    * @param aJSCallerContext The calling script's context. This must be nsnull
    *                         when aCalledNoScript is true.
    * @param aReturn [out] The window that was opened, if any.
-   *
-   * @note that the boolean args are const because the function shouldn't be
-   * messing with them.  That also makes it easier for the compiler to sort out
-   * its build warning stuff.
    */
-  NS_HIDDEN_(nsresult) OpenInternal(const nsAString& aUrl,
-                                    const nsAString& aName,
-                                    const nsAString& aOptions,
-                                    bool aDialog,
-                                    bool aContentModal,
-                                    bool aCalledNoScript,
-                                    bool aDoJSFixups,
-                                    nsIArray *argv,
-                                    nsISupports *aExtraArgument,
-                                    nsIPrincipal *aCalleePrincipal,
-                                    JSContext *aJSCallerContext,
-                                    nsIDOMWindow **aReturn);
+  nsresult OpenInternal(const nsAString& aUrl,
+                        const nsAString& aName,
+                        const nsAString& aOptions,
+                        bool aDialog,
+                        bool aContentModal,
+                        bool aCalledNoScript,
+                        bool aDoJSFixups,
+                        nsIJSArgArray *argv,
+                        nsISupports *aExtraArgument,
+                        nsIPrincipal *aCalleePrincipal,
+                        JSContext *aJSCallerContext,
+                        nsIDOMWindow **aReturn);
 
   static void CloseWindow(nsISupports* aWindow);
 
   // Timeout Functions
   // Language agnostic timeout function (all args passed).
   // |interval| is in milliseconds.
   nsresult SetTimeoutOrInterval(nsIScriptTimeoutHandler *aHandler,
                                 int32_t interval,
