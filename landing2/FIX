From: Ms2ger <ms2ger@gmail.com>
try: -b o -p win32 -u none -t none

diff --git a/js/src/tests/lib/jittests.py b/js/src/tests/lib/jittests.py
--- a/js/src/tests/lib/jittests.py
+++ b/js/src/tests/lib/jittests.py
@@ -135,17 +135,19 @@ def find_tests(dir, substring = None):
             if filename in ('shell.js', 'browser.js', 'jsref.js'):
                 continue
             test = os.path.join(dirpath, filename)
             if substring is None or substring in os.path.relpath(test, dir):
                 ans.append(test)
     return ans
 
 def define_consts(consts):
-    return '; '.join('const %s="%s"' % const for const in consts)
+    ret = '; '.join('const %s="%s"' % const for const in consts)
+    print('Help for Ms2ger: %s' % ret)
+    return ret
 
 def get_test_cmd(path, jitflags, lib_dir, shell_args):
     libdir_var = lib_dir
     if not libdir_var.endswith('/'):
         libdir_var += '/'
     scriptdir_var = os.path.dirname(path);
     if not scriptdir_var.endswith('/'):
         scriptdir_var += '/'
@@ -561,20 +563,25 @@ def platform_might_be_android():
 def stdio_might_be_broken():
     return platform_might_be_android()
 
 JS = None
 OPTIONS = None
 def main(argv):
     global JS, OPTIONS
 
+    print("Help for Ms2ger:")
+
     script_path = os.path.abspath(sys.modules['__main__'].__file__)
+    print(script_path)
     script_dir = os.path.dirname(script_path)
+    print(script_dir)
     test_dir = os.path.join(script_dir, 'tests')
     lib_dir = os.path.join(script_dir, 'lib')
+    print(lib_dir)
 
     # If no multiprocessing is available, fallback to serial test execution
     max_jobs_default = 1
     if HAVE_MULTIPROCESSING:
         try:
             max_jobs_default = cpu_count()
         except NotImplementedError:
             pass
@@ -752,9 +759,9 @@ def main(argv):
     except OSError:
         if not os.path.exists(JS):
             print("JS shell argument: file does not exist: '%s'"%JS, file=sys.stderr)
             sys.exit(1)
         else:
             raise
 
 if __name__ == '__main__':
-    print 'Use ../jit-test/jit_test.py to run these tests.'
+    print('Use ../jit-test/jit_test.py to run these tests.')
