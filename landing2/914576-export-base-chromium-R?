From: Ms2ger <ms2ger@gmail.com>
Bug 914576 - Export chromium headers; r=?mshal

diff --git a/ipc/chromium/Makefile.in b/ipc/chromium/Makefile.in
--- a/ipc/chromium/Makefile.in
+++ b/ipc/chromium/Makefile.in
@@ -7,16 +7,17 @@ OS_CXXFLAGS := $(filter-out -fshort-wcha
 EXPORT_LIBRARY = 1
 
 ACDEFINES =
 
 ifndef MOZ_NATIVE_LIBEVENT # {
 vpath %.c \
   $(srcdir)/src/third_party/libevent \
   $(NULL)
+LOCAL_INCLUDES += -I$(srcdir)/src
 else # } else {
 # message_pump_libevent.cc includes third_party/libevent/event.h,
 # which we put in $(DIST), see export rule below
 LOCAL_INCLUDES += -I$(DIST)
 endif # }
 
 vpath %.cc \
   $(srcdir)/src/base \
diff --git a/ipc/chromium/chromium-config.mk b/ipc/chromium/chromium-config.mk
--- a/ipc/chromium/chromium-config.mk
+++ b/ipc/chromium/chromium-config.mk
@@ -10,17 +10,16 @@ ifdef CHROMIUM_CONFIG_INCLUDED
 $(error Must not include chromium-config.mk twice.)
 endif
 
 CHROMIUM_CONFIG_INCLUDED = 1
 
 EXTRA_DEPS += $(topsrcdir)/ipc/chromium/chromium-config.mk
 
 LOCAL_INCLUDES += \
-  -I$(topsrcdir)/ipc/chromium/src \
   -I$(topsrcdir)/ipc/glue \
   -I$(DEPTH)/ipc/ipdl/_ipdlheaders \
   $(NULL)
 
 ifeq ($(OS_ARCH),WINNT) # {
 OS_LIBS += $(call EXPAND_LIBNAME,psapi shell32 dbghelp)
 
 OS_WIN = 1
diff --git a/ipc/chromium/moz.build b/ipc/chromium/moz.build
--- a/ipc/chromium/moz.build
+++ b/ipc/chromium/moz.build
@@ -30,16 +30,181 @@ else:
         os_netbsd = 1
         os_bsd = 1
     elif CONFIG['OS_ARCH'] == 'OpenBSD':
         os_openbsd = 1
         os_bsd = 1
     else:
         os_linux = 1
 
+EXPORTS.base += [
+    'src/base/at_exit.h',
+    'src/base/atomic_ref_count.h',
+    'src/base/atomic_sequence_num.h',
+    'src/base/atomicops.h',
+    'src/base/atomicops_internals_arm_gcc.h',
+    'src/base/atomicops_internals_mips_gcc.h',
+    'src/base/atomicops_internals_mutex.h',
+    'src/base/atomicops_internals_x86_gcc.h',
+    'src/base/atomicops_internals_x86_macosx.h',
+    'src/base/atomicops_internals_x86_msvc.h',
+    'src/base/base_drag_source.h',
+    'src/base/base_drop_target.h',
+    'src/base/base_paths.h',
+    'src/base/base_paths_linux.h',
+    'src/base/base_paths_mac.h',
+    'src/base/base_paths_win.h',
+    'src/base/base_switches.h',
+    'src/base/basictypes.h',
+    'src/base/chrome_application_mac.h',
+    'src/base/command_line.h',
+    'src/base/compiler_specific.h',
+    'src/base/condition_variable.h',
+    'src/base/cpu.h',
+    'src/base/debug_on_start.h',
+    'src/base/debug_util.h',
+    'src/base/dir_reader_bsd.h',
+    'src/base/dir_reader_fallback.h',
+    'src/base/dir_reader_linux.h',
+    'src/base/dir_reader_posix.h',
+    'src/base/eintr_wrapper.h',
+    'src/base/event_recorder.h',
+    'src/base/file_descriptor_posix.h',
+    'src/base/file_descriptor_shuffle.h',
+    'src/base/file_path.h',
+    'src/base/file_util.h',
+    'src/base/file_version_info.h',
+    'src/base/hash_tables.h',
+    'src/base/histogram.h',
+    'src/base/hmac.h',
+    'src/base/id_map.h',
+    'src/base/idle_timer.h',
+    'src/base/lazy_instance.h',
+    'src/base/linked_ptr.h',
+    'src/base/linux_util.h',
+    'src/base/lock.h',
+    'src/base/lock_impl.h',
+    'src/base/logging.h',
+    'src/base/mac_util.h',
+    'src/base/memory_debug.h',
+    'src/base/message_loop.h',
+    'src/base/message_pump.h',
+    'src/base/message_pump_android.h',
+    'src/base/message_pump_default.h',
+    'src/base/message_pump_glib.h',
+    'src/base/message_pump_libevent.h',
+    'src/base/message_pump_mac.h',
+    'src/base/message_pump_qt.h',
+    'src/base/message_pump_win.h',
+    'src/base/non_thread_safe.h',
+    'src/base/object_watcher.h',
+    'src/base/observer_list.h',
+    'src/base/observer_list_threadsafe.h',
+    'src/base/path_service.h',
+    'src/base/pickle.h',
+    'src/base/platform_file.h',
+    'src/base/platform_thread.h',
+    'src/base/port.h',
+    'src/base/process.h',
+    'src/base/process_util.h',
+    'src/base/rand_util.h',
+    'src/base/ref_counted.h',
+    'src/base/registry.h',
+    'src/base/revocable_store.h',
+    'src/base/scoped_bstr_win.h',
+    'src/base/scoped_cftyperef.h',
+    'src/base/scoped_handle.h',
+    'src/base/scoped_handle_win.h',
+    'src/base/scoped_nsautorelease_pool.h',
+    'src/base/scoped_nsobject.h',
+    'src/base/scoped_ptr.h',
+    'src/base/scoped_temp_dir.h',
+    'src/base/shared_memory.h',
+    'src/base/simple_thread.h',
+    'src/base/singleton.h',
+    'src/base/singleton_objc.h',
+    'src/base/stack_container.h',
+    'src/base/stats_counters.h',
+    'src/base/stats_table.h',
+    'src/base/stl_util-inl.h',
+    'src/base/string16.h',
+    'src/base/string_piece.h',
+    'src/base/string_tokenizer.h',
+    'src/base/string_util.h',
+    'src/base/string_util_posix.h',
+    'src/base/string_util_win.h',
+    'src/base/sys_info.h',
+    'src/base/sys_string_conversions.h',
+    'src/base/system_monitor.h',
+    'src/base/task.h',
+    'src/base/thread.h',
+    'src/base/thread_collision_warner.h',
+    'src/base/thread_local.h',
+    'src/base/thread_local_storage.h',
+    'src/base/time.h',
+    'src/base/time_format.h',
+    'src/base/timer.h',
+    'src/base/trace_event.h',
+    'src/base/tracked.h',
+    'src/base/tracked_objects.h',
+    'src/base/tuple.h',
+    'src/base/waitable_event.h',
+    'src/base/waitable_event_watcher.h',
+    'src/base/win_util.h',
+    'src/base/worker_pool.h',
+    'src/base/worker_pool_linux.h',
+]
+
+EXPORTS.base.third_party.purify += [
+    'src/base/third_party/purify/pure.h',
+]
+
+EXPORTS.build += [
+    'src/build/build_config.h',
+]
+
+EXPORTS.chrome.common += [
+    'src/chrome/common/child_process.h',
+    'src/chrome/common/child_process_host.h',
+    'src/chrome/common/child_process_info.h',
+    'src/chrome/common/child_thread.h',
+    'src/chrome/common/chrome_constants.h',
+    'src/chrome/common/chrome_counters.h',
+    'src/chrome/common/chrome_paths.h',
+    'src/chrome/common/chrome_paths_internal.h',
+    'src/chrome/common/chrome_switches.h',
+    'src/chrome/common/debug_flags.h',
+    'src/chrome/common/env_vars.h',
+    'src/chrome/common/file_descriptor_set_posix.h',
+    'src/chrome/common/ipc_channel.h',
+    'src/chrome/common/ipc_channel_posix.h',
+    'src/chrome/common/ipc_channel_proxy.h',
+    'src/chrome/common/ipc_channel_win.h',
+    'src/chrome/common/ipc_logging.h',
+    'src/chrome/common/ipc_message.h',
+    'src/chrome/common/ipc_message_utils.h',
+    'src/chrome/common/ipc_sync_channel.h',
+    'src/chrome/common/ipc_sync_message.h',
+    'src/chrome/common/mach_ipc_mac.h',
+    'src/chrome/common/mach_message_source_mac.h',
+    'src/chrome/common/message_router.h',
+    'src/chrome/common/notification_details.h',
+    'src/chrome/common/notification_observer.h',
+    'src/chrome/common/notification_registrar.h',
+    'src/chrome/common/notification_service.h',
+    'src/chrome/common/notification_source.h',
+    'src/chrome/common/notification_type.h',
+    'src/chrome/common/process_watcher.h',
+    'src/chrome/common/result_codes.h',
+    'src/chrome/common/task_queue.h',
+    'src/chrome/common/thumbnail_score.h',
+    'src/chrome/common/transport_dib.h',
+    'src/chrome/common/x11_util.h',
+]
+
 CPP_SOURCES += [
     'at_exit.cc',
     'base_paths.cc',
     'base_switches.cc',
     'child_process.cc',
     'child_process_host.cc',
     'child_process_info.cc',
     'child_thread.cc',
