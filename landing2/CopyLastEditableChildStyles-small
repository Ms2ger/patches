From: Ms2ger <ms2ger@gmail.com>

diff --git a/editor/libeditor/html/nsHTMLEditor.cpp b/editor/libeditor/html/nsHTMLEditor.cpp
--- a/editor/libeditor/html/nsHTMLEditor.cpp
+++ b/editor/libeditor/html/nsHTMLEditor.cpp
@@ -5139,70 +5139,76 @@ nsHTMLEditor::AreNodesSameType(nsIConten
     return true;
   }
 
   // If CSS is enabled, we are stricter about span nodes.
   return mHTMLCSSUtils->ElementsSameStyle(aNode1->AsDOMNode(),
                                           aNode2->AsDOMNode());
 }
 
-NS_IMETHODIMP
-nsHTMLEditor::CopyLastEditableChildStyles(nsIDOMNode * aPreviousBlock, nsIDOMNode * aNewBlock,
-                                          nsIDOMNode **aOutBrNode)
+nsresult
+nsHTMLEditor::CopyLastEditableChildStyles(nsINode* aPreviousBlock,
+                                          nsINode* aNewBlock,
+                                          nsINode** aOutBrNode)
 {
+  MOZ_ASSERT(aPreviousBlock);
+  MOZ_ASSERT(aNewBlock);
+  MOZ_ASSERT(aOutBrNode);
+
   *aOutBrNode = nsnull;
-  nsCOMPtr<nsIDOMNode> child, tmp;
-  nsresult res;
-  // first, clear out aNewBlock.  Contract is that we want only the styles from previousBlock.
-  res = aNewBlock->GetFirstChild(getter_AddRefs(child));
-  while (NS_SUCCEEDED(res) && child)
-  {
-    res = DeleteNode(child);
-    NS_ENSURE_SUCCESS(res, res);
-    res = aNewBlock->GetFirstChild(getter_AddRefs(child));
+
+  // First, clear out aNewBlock.  Contract is that we want only the styles from
+  // previousBlock.
+  while (aNewBlock->HasChildren()) {
+    nsCOMPtr<nsIContent> child = aNewBlock->GetFirstChild();
+    nsresult rv = DeleteNode(child);
+    NS_ENSURE_SUCCESS(rv, rv);
   }
-  // now find and clone the styles
-  child = aPreviousBlock;
-  tmp = aPreviousBlock;
-  while (tmp) {
+
+  // Now find and clone the styles.
+  nsCOMPtr<nsINode> child = aPreviousBlock;
+  while (child) {
+    nsCOMPtr<nsIDOMNode> tmp;
+    nsresult rv = GetLastEditableChild(child, address_of(tmp));
+    NS_ENSURE_SUCCESS(rv, rv);
     child = tmp;
-    res = GetLastEditableChild(child, address_of(tmp));
-    NS_ENSURE_SUCCESS(res, res);
   }
-  while (child && nsTextEditUtils::IsBreak(child)) {
+
+  // Ignore any breaks at the end.
+  while (child && child->IsElement() &&
+         child->AsElement()->IsHTML(nsGkAtoms::br)) {
     nsCOMPtr<nsIDOMNode> priorNode;
-    res = GetPriorHTMLNode(child, address_of(priorNode));
-    NS_ENSURE_SUCCESS(res, res);
+    nsresult rv = GetPriorHTMLNode(child, address_of(priorNode));
+    NS_ENSURE_SUCCESS(rv, rv);
     child = priorNode;
   }
-  nsCOMPtr<nsIDOMNode> newStyles = nsnull, deepestStyle = nsnull;
+
+  nsCOMPtr<nsINode> newStyles = nsnull, deepestStyle = nsnull;
   while (child && (child != aPreviousBlock)) {
     if (nsHTMLEditUtils::IsInlineStyle(child) ||
         nsEditor::NodeIsType(child, nsEditProperty::span)) {
-      nsAutoString domTagName;
+      nsDependentAtomString domTagName(child->Tag());
       child->GetNodeName(domTagName);
       ToLowerCase(domTagName);
       if (newStyles) {
         nsCOMPtr<nsIDOMNode> newContainer;
         res = InsertContainerAbove(newStyles, address_of(newContainer), domTagName);
         NS_ENSURE_SUCCESS(res, res);
         newStyles = newContainer;
       }
       else {
         res = CreateNode(domTagName, aNewBlock, 0, getter_AddRefs(newStyles));
         NS_ENSURE_SUCCESS(res, res);
         deepestStyle = newStyles;
       }
       res = CloneAttributes(newStyles, child);
       NS_ENSURE_SUCCESS(res, res);
     }
-    nsCOMPtr<nsIDOMNode> tmp;
-    res = child->GetParentNode(getter_AddRefs(tmp));
-    NS_ENSURE_SUCCESS(res, res);
-    child = tmp;
+
+    child = child->GetNodeParent();
   }
   if (deepestStyle) {
     nsCOMPtr<nsIDOMNode> outBRNode;
     res = CreateBR(deepestStyle, 0, address_of(outBRNode));
     NS_ENSURE_SUCCESS(res, res);
     // Getters must addref
     outBRNode.forget(aOutBrNode);
   }
diff --git a/editor/libeditor/html/nsHTMLEditor.h b/editor/libeditor/html/nsHTMLEditor.h
--- a/editor/libeditor/html/nsHTMLEditor.h
+++ b/editor/libeditor/html/nsHTMLEditor.h
@@ -130,18 +130,19 @@ public:
   /* -------- Implemented in nsHTMLAbsPosition.cpp --------- */
   NS_DECL_NSIHTMLABSPOSEDITOR
 
   /* ------------ nsIHTMLInlineTableEditor methods -------------- */
   /* ------- Implemented in nsHTMLInlineTableEditor.cpp --------- */
   NS_DECL_NSIHTMLINLINETABLEEDITOR
 
   /* ------------ nsIHTMLEditor methods -------------- */
-  NS_IMETHOD CopyLastEditableChildStyles(nsIDOMNode *aPreviousBlock, nsIDOMNode *aNewBlock,
-                                         nsIDOMNode **aOutBrNode);
+  nsresult CopyLastEditableChildStyles(nsIDOMNode* aPreviousBlock,
+                                       nsIDOMNode* aNewBlock,
+                                       nsIDOMNode** aOutBrNode);
 
   NS_IMETHOD LoadHTML(const nsAString &aInputString);
 
   nsresult GetCSSBackgroundColorState(bool *aMixed, nsAString &aOutColor,
                                       bool aBlockLevel);
   NS_IMETHOD GetHTMLBackgroundColorState(bool *aMixed, nsAString &outColor);
 
   /* ------------ nsIEditorStyleSheets methods -------------- */
