From: Ms2ger <ms2ger@gmail.com>

diff --git a/ipc/chromium/src/base/string_util.cc b/ipc/chromium/src/base/string_util.cc
--- a/ipc/chromium/src/base/string_util.cc
+++ b/ipc/chromium/src/base/string_util.cc
@@ -612,47 +612,42 @@ void StringAppendF(std::wstring* dst, co
   va_start(ap, format);
   StringAppendV(dst, format, ap);
   va_end(ap);
 }
 
 template<typename STR>
 static void SplitStringT(const STR& str,
                          const typename STR::value_type s,
-                         bool trim_whitespace,
                          std::vector<STR>* r) {
   size_t last = 0;
   size_t i;
   size_t c = str.size();
   for (i = 0; i <= c; ++i) {
     if (i == c || str[i] == s) {
       size_t len = i - last;
       STR tmp = str.substr(last, len);
-      if (trim_whitespace) {
-        STR t_tmp;
-        TrimWhitespace(tmp, &t_tmp);
-        r->push_back(t_tmp);
-      } else {
-        r->push_back(tmp);
-      }
+      STR t_tmp;
+      TrimWhitespace(tmp, &t_tmp);
+      r->push_back(t_tmp);
       last = i + 1;
     }
   }
 }
 
 void SplitString(const std::wstring& str,
                  wchar_t s,
                  std::vector<std::wstring>* r) {
-  SplitStringT(str, s, true, r);
+  SplitStringT(str, s, r);
 }
 
 void SplitString(const std::string& str,
                  char s,
                  std::vector<std::string>* r) {
-  SplitStringT(str, s, true, r);
+  SplitStringT(str, s, r);
 }
 
 // For the various *ToInt conversions, there are no *ToIntTraits classes to use
 // because there's no such thing as strtoi.  Use *ToLongTraits through a cast
 // instead, requiring that long and int are compatible and equal-width.  They
 // are on our target platforms.
 
 // XXX Sigh.
