From: Ms2ger <ms2ger@gmail.com>

diff --git a/content/canvas/test/Makefile.in b/content/canvas/test/Makefile.in
--- a/content/canvas/test/Makefile.in
+++ b/content/canvas/test/Makefile.in
@@ -66,17 +66,16 @@ include $(topsrcdir)/config/rules.mk
 	image_red.png \
 	image_transparent.png \
 	image_green.png \
 	image_green-redirect \
 	image_green-redirect^headers^ \
 	test_drawImageIncomplete.html \
 	test_canvas_font_setter.html \
 	test_2d.clearRect.image.offscreen.html \
-	test_2d.drawImage.zerocanvas.html \
 	test_toDataURL_alpha.html \
 	test_toDataURL_parameters.html \
 	test_mozGetAsFile.html \
 	test_canvas_strokeStyle_getter.html \
 	test_bug613794.html \
 	test_drawImage_edge_cases.html \
 	$(NULL)
 
diff --git a/content/canvas/test/test_2d.drawImage.zerocanvas.html b/content/canvas/test/test_2d.drawImage.zerocanvas.html
deleted file mode 100644
--- a/content/canvas/test/test_2d.drawImage.zerocanvas.html
+++ /dev/null
@@ -1,56 +0,0 @@
-<!DOCTYPE HTML>
-<title>Canvas test: 2d.drawImage.zerocanvas</title>
-<script src="/MochiKit/MochiKit.js"></script>
-<script src="/tests/SimpleTest/SimpleTest.js"></script>
-<link rel="stylesheet" href="/tests/SimpleTest/test.css">
-<body>
-<canvas id="c" width="100" height="50"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-function isPixel(ctx, x,y, r,g,b,a, pos, colour, d) {
-    var pixel = ctx.getImageData(x, y, 1, 1);
-    var pr = pixel.data[0],
-        pg = pixel.data[1],
-        pb = pixel.data[2],
-        pa = pixel.data[3];
-    ok(r-d <= pr && pr <= r+d &&
-       g-d <= pg && pg <= g+d &&
-       b-d <= pb && pb <= b+d &&
-       a-d <= pa && pa <= a+d,
-       "pixel "+pos+" is "+pr+","+pg+","+pb+","+pa+"; expected "+colour+" +/- "+d);
-}
-
-SimpleTest.waitForExplicitFinish();
-addLoadEvent(function () {
-
-var canvas = document.getElementById('c');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#0f0';
-ctx.fillRect(0, 0, 100, 50);
-
-var canvas2 = document.createElement('canvas');
-canvas2.width = 0;
-canvas2.height = 10;
-var _thrown = undefined; try {
-  ctx.drawImage(canvas2, 0, 0);
-} catch (e) { _thrown = e }; ok(_thrown && _thrown.code == DOMException.INVALID_STATE_ERR, "should throw INVALID_STATE_ERR");
-
-canvas2.width = 10;
-canvas2.height = 0;
-var _thrown = undefined; try {
-  ctx.drawImage(canvas2, 0, 0);
-} catch (e) { _thrown = e }; ok(_thrown && _thrown.code == DOMException.INVALID_STATE_ERR, "should throw INVALID_STATE_ERR");
-
-canvas2.width = 0;
-canvas2.height = 0;
-var _thrown = undefined; try {
-  ctx.drawImage(canvas2, 0, 0);
-} catch (e) { _thrown = e }; ok(_thrown && _thrown.code == DOMException.INVALID_STATE_ERR, "should throw INVALID_STATE_ERR");
-
-isPixel(ctx, 50,25, 0,255,0,255, "50,25", "0,255,0,255", 2);
-
-SimpleTest.finish();
-
-});
-</script>
-
