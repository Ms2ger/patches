From: Ms2ger <ms2ger@gmail.com>

diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -17222,16 +17222,38 @@ var canvas = document.getElementById('c6
 var ctx = canvas.getContext('2d');
 
 ok(canvas.width == 100, "canvas.width == 100");
 
 
 }
 </script>
 
+<!-- [[[ test_size.attributes.parse.space.html ]]] -->
+
+<p>Canvas test: size.attributes.parse.space</p>
+<!-- Testing: Parsing of non-negative integers -->
+<canvas height="  100" id="c642" width="  100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_size_attributes_parse_space() {
+
+var canvas = document.getElementById('c642');
+var ctx = canvas.getContext('2d');
+
+ok(canvas.width === 100, "canvas.width === 100");
+ok(canvas.height === 100, "canvas.height === 100");
+ok(window.getComputedStyle(canvas, null).getPropertyValue("width") == "100px", "window.getComputedStyle(canvas, null).getPropertyValue(\"width\") == \"100px\"");
+ok(canvas.getAttribute('width') === '  100', "canvas.getAttribute('width') === '  100'");
+ok(canvas.getAttribute('height') === '  100', "canvas.getAttribute('height') === '  100'");
+
+
+}
+</script>
+
 <!-- [[[ test_size.attributes.parse.trailingjunk.html ]]] -->
 
 <p>Canvas test: size.attributes.parse.trailingjunk</p>
 <!-- Testing: Parsing of non-negative integers -->
 <canvas height="100#!?" id="c637" width="100#!?"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_parse_trailingjunk() {
@@ -17244,34 +17266,16 @@ ok(canvas.height === 100, "canvas.height
 ok(window.getComputedStyle(canvas, null).getPropertyValue("width") == "100px", "window.getComputedStyle(canvas, null).getPropertyValue(\"width\") == \"100px\"");
 ok(canvas.getAttribute('width') === '100#!?', "canvas.getAttribute('width') === '100#!?'");
 ok(canvas.getAttribute('height') === '100#!?', "canvas.getAttribute('height') === '100#!?'");
 
 
 }
 </script>
 
-<!-- [[[ test_size.attributes.parse.whitespace.html ]]] -->
-
-<p>Canvas test: size.attributes.parse.whitespace</p>
-<!-- Testing: Parsing of non-negative integers -->
-<canvas height="50" id="c642" width="   100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_size_attributes_parse_whitespace() {
-
-var canvas = document.getElementById('c642');
-var ctx = canvas.getContext('2d');
-
-ok(canvas.width == 100, "canvas.width == 100");
-
-
-}
-</script>
-
 <!-- [[[ test_size.attributes.parse.zero.html ]]] -->
 
 <p>Canvas test: size.attributes.parse.zero</p>
 <!-- Testing: Parsing of non-negative integers -->
 <canvas height="50" id="c643" width="0"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_parse_zero() {
@@ -17434,16 +17438,40 @@ var ctx = canvas.getContext('2d');
 
 canvas.setAttribute('width', '100%');
 ok(canvas.width == 100, "canvas.width == 100");
 
 
 }
 </script>
 
+<!-- [[[ test_size.attributes.setAttribute.space.html ]]] -->
+
+<p>Canvas test: size.attributes.setAttribute.space</p>
+<!-- Testing: Parsing of non-negative integers in setAttribute -->
+<canvas height="50" id="c653" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_size_attributes_setAttribute_space() {
+
+var canvas = document.getElementById('c653');
+var ctx = canvas.getContext('2d');
+
+canvas.setAttribute('width', '  100');
+canvas.setAttribute('height', '  100');
+ok(canvas.width === 100, "canvas.width === 100");
+ok(canvas.height === 100, "canvas.height === 100");
+ok(window.getComputedStyle(canvas, null).getPropertyValue("width") == "100px", "window.getComputedStyle(canvas, null).getPropertyValue(\"width\") == \"100px\"");
+ok(canvas.getAttribute('width') === '  100', "canvas.getAttribute('width') === '  100'");
+ok(canvas.getAttribute('height') === '  100', "canvas.getAttribute('height') === '  100'");
+
+
+}
+</script>
+
 <!-- [[[ test_size.attributes.setAttribute.trailingjunk.html ]]] -->
 
 <p>Canvas test: size.attributes.setAttribute.trailingjunk</p>
 <!-- Testing: Parsing of non-negative integers in setAttribute -->
 <canvas height="50" id="c648" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_setAttribute_trailingjunk() {
@@ -17458,35 +17486,16 @@ ok(canvas.height === 100, "canvas.height
 ok(window.getComputedStyle(canvas, null).getPropertyValue("width") == "100px", "window.getComputedStyle(canvas, null).getPropertyValue(\"width\") == \"100px\"");
 ok(canvas.getAttribute('width') === '100#!?', "canvas.getAttribute('width') === '100#!?'");
 ok(canvas.getAttribute('height') === '100#!?', "canvas.getAttribute('height') === '100#!?'");
 
 
 }
 </script>
 
-<!-- [[[ test_size.attributes.setAttribute.whitespace.html ]]] -->
-
-<p>Canvas test: size.attributes.setAttribute.whitespace</p>
-<!-- Testing: Parsing of non-negative integers in setAttribute -->
-<canvas height="50" id="c653" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_size_attributes_setAttribute_whitespace() {
-
-var canvas = document.getElementById('c653');
-var ctx = canvas.getContext('2d');
-
-canvas.setAttribute('width', '   100');
-ok(canvas.width == 100, "canvas.width == 100");
-
-
-}
-</script>
-
 <!-- [[[ test_size.attributes.setAttribute.zero.html ]]] -->
 
 <p>Canvas test: size.attributes.setAttribute.zero</p>
 <!-- Testing: Parsing of non-negative integers in setAttribute -->
 <canvas height="50" id="c654" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_setAttribute_zero() {
@@ -20668,26 +20677,26 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_minus");
  }
  try {
   test_size_attributes_parse_percentsuffix();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_percentsuffix");
  }
  try {
+  test_size_attributes_parse_space();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_size_attributes_parse_space");
+ }
+ try {
   test_size_attributes_parse_trailingjunk();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_trailingjunk");
  }
  try {
-  test_size_attributes_parse_whitespace();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_size_attributes_parse_whitespace");
- }
- try {
   test_size_attributes_parse_zero();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_zero");
  }
  try {
   test_size_attributes_reflect_1();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_reflect_1");
@@ -20718,26 +20727,26 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_minus");
  }
  try {
   test_size_attributes_setAttribute_percentsuffix();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_percentsuffix");
  }
  try {
+  test_size_attributes_setAttribute_space();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_space");
+ }
+ try {
   test_size_attributes_setAttribute_trailingjunk();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_trailingjunk");
  }
  try {
-  test_size_attributes_setAttribute_whitespace();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_whitespace");
- }
- try {
   test_size_attributes_setAttribute_zero();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_zero");
  }
  try {
   test_size_attributes_style();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_style");
