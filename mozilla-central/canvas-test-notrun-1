From: Ms2ger <ms2ger@gmail.com>
Bug 665345 - Remove tests that are not being run from test_canvas.html (1/6)

This patch removes tests that are not being run within test_canvas.html
to avoid confusion over test coverage, and to simplify the generating code.

diff --git a/content/canvas/test/standalone.dat b/content/canvas/test/standalone.dat
--- a/content/canvas/test/standalone.dat
+++ b/content/canvas/test/standalone.dat
@@ -1,8 +1,28 @@
+# Special Makefile treatment
+test_2d.composite.uncovered.image.destination-atop.html
+test_2d.composite.uncovered.image.destination-in.html
+test_2d.composite.uncovered.image.source-in.html
+test_2d.composite.uncovered.image.source-out.html
+test_2d.gradient.radial.cone.behind.html
+test_2d.gradient.radial.cone.beside.html
+test_2d.gradient.radial.cone.front.html
+test_2d.gradient.radial.cone.shape2.html
+test_2d.gradient.radial.cone.top.html
+test_2d.gradient.radial.inside2.html
+test_2d.gradient.radial.inside3.html
+test_2d.gradient.radial.outside1.html
+test_2d.gradient.radial.outside2.html
+test_2d.gradient.radial.outside3.html
+test_2d.line.cap.closed.html
+test_2d.line.join.parallel.html
+test_2d.path.arc.shape.3.html
+test_2d.path.rect.selfintersect.html
+test_2d.strokeRect.zero.5.html
 # D2D
 test_2d.gradient.interpolate.overlap.html
 test_2d.path.rect.zero.3.html
 test_2d.path.stroke.scale2.html
 test_2d.strokeRect.zero.1.html
 # Skia
 test_2d.path.arcTo.shape.curve1.html
 test_2d.path.arcTo.shape.curve2.html
diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -2185,116 +2185,16 @@ ctx.drawImage(document.getElementById('y
 isPixel(ctx, 15,15, 0,0,0,0, 5);
 isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 
 }
 </script>
 <img class="resource" id="yellow_1.png" src="image_yellow.png">
 
-<!-- [[[ test_2d.composite.uncovered.image.destination-atop.html ]]] -->
-
-<p>Canvas test: 2d.composite.uncovered.image.destination-atop</p>
-<!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
-<canvas height="50" id="c91" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_composite_uncovered_image_destination_atop() {
-
-var canvas = document.getElementById('c91');
-var ctx = canvas.getContext('2d');
-
-
-ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
-ctx.fillRect(0, 0, 100, 50);
-ctx.globalCompositeOperation = 'destination-atop';
-ctx.drawImage(document.getElementById('yellow_2.png'), 40, 40, 10, 10, 40, 50, 10, 10);
-isPixel(ctx, 15,15, 0,0,0,0, 5);
-isPixel(ctx, 50,25, 0,0,0,0, 5);
-
-
-}
-</script>
-<img class="resource" id="yellow_2.png" src="image_yellow.png">
-
-<!-- [[[ test_2d.composite.uncovered.image.destination-in.html ]]] -->
-
-<p>Canvas test: 2d.composite.uncovered.image.destination-in</p>
-<!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
-<canvas height="50" id="c92" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_composite_uncovered_image_destination_in() {
-
-var canvas = document.getElementById('c92');
-var ctx = canvas.getContext('2d');
-
-
-ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
-ctx.fillRect(0, 0, 100, 50);
-ctx.globalCompositeOperation = 'destination-in';
-ctx.drawImage(document.getElementById('yellow_3.png'), 40, 40, 10, 10, 40, 50, 10, 10);
-isPixel(ctx, 15,15, 0,0,0,0, 5);
-isPixel(ctx, 50,25, 0,0,0,0, 5);
-
-
-}
-</script>
-<img class="resource" id="yellow_3.png" src="image_yellow.png">
-
-<!-- [[[ test_2d.composite.uncovered.image.source-in.html ]]] -->
-
-<p>Canvas test: 2d.composite.uncovered.image.source-in</p>
-<!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
-<canvas height="50" id="c93" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_composite_uncovered_image_source_in() {
-
-var canvas = document.getElementById('c93');
-var ctx = canvas.getContext('2d');
-
-
-ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
-ctx.fillRect(0, 0, 100, 50);
-ctx.globalCompositeOperation = 'source-in';
-ctx.drawImage(document.getElementById('yellow_4.png'), 40, 40, 10, 10, 40, 50, 10, 10);
-isPixel(ctx, 15,15, 0,0,0,0, 5);
-isPixel(ctx, 50,25, 0,0,0,0, 5);
-
-
-}
-</script>
-<img class="resource" id="yellow_4.png" src="image_yellow.png">
-
-<!-- [[[ test_2d.composite.uncovered.image.source-out.html ]]] -->
-
-<p>Canvas test: 2d.composite.uncovered.image.source-out</p>
-<!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
-<canvas height="50" id="c94" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_composite_uncovered_image_source_out() {
-
-var canvas = document.getElementById('c94');
-var ctx = canvas.getContext('2d');
-
-
-ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
-ctx.fillRect(0, 0, 100, 50);
-ctx.globalCompositeOperation = 'source-out';
-ctx.drawImage(document.getElementById('yellow_5.png'), 40, 40, 10, 10, 40, 50, 10, 10);
-isPixel(ctx, 15,15, 0,0,0,0, 5);
-isPixel(ctx, 50,25, 0,0,0,0, 5);
-
-
-}
-</script>
-<img class="resource" id="yellow_5.png" src="image_yellow.png">
-
 <!-- [[[ test_2d.composite.uncovered.pattern.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.pattern.copy</p>
 <!-- Testing: Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c95" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_uncovered_pattern_copy() {
@@ -5836,84 +5736,16 @@ g.addColorStop(0.1, '#0f0');
 g.addColorStop(0.9, '#0f0');
 ctx.fillRect(0, 0, 100, 50);
 isPixel(ctx, 50,25, 0,255,0,255, 2);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.gradient.radial.cone.behind.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.cone.behind</p>
-<canvas height="50" id="c231" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_cone_behind() {
-
-var canvas = document.getElementById('c231');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#0f0';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(120, 25, 10, 211, 25, 100);
-g.addColorStop(0, '#f00');
-g.addColorStop(1, '#f00');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
-<!-- [[[ test_2d.gradient.radial.cone.beside.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.cone.beside</p>
-<canvas height="50" id="c232" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_cone_beside() {
-
-var canvas = document.getElementById('c232');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#0f0';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(0, 100, 40, 100, 100, 50);
-g.addColorStop(0, '#f00');
-g.addColorStop(1, '#f00');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.gradient.radial.cone.bottom.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.bottom</p>
 <canvas height="50" id="c233" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_gradient_radial_cone_bottom() {
 
@@ -5971,50 +5803,16 @@ isPixel(ctx, 50, 25, 0, 255, 0, 255, 0);
 isPixel(ctx, 98, 25, 0, 255, 0, 255, 0);
 isPixel(ctx, 1, 48, 0, 255, 0, 255, 0);
 isPixel(ctx, 50, 48, 0, 255, 0, 255, 0);
 isPixel(ctx, 98, 48, 0, 255, 0, 255, 0);
 
 }
 </script>
 
-<!-- [[[ test_2d.gradient.radial.cone.front.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.cone.front</p>
-<canvas height="50" id="c235" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_cone_front() {
-
-var canvas = document.getElementById('c235');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(311, 25, 10, 210, 25, 100);
-g.addColorStop(0, '#f00');
-g.addColorStop(1, '#0f0');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.gradient.radial.cone.shape1.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.shape1</p>
 <canvas height="50" id="c236" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_gradient_radial_cone_shape1() {
 
@@ -6048,92 +5846,16 @@ isPixel(ctx, 98,25, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 isPixel(ctx, 50,48, 0,255,0,255, 0);
 isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.gradient.radial.cone.shape2.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.cone.shape2</p>
-<canvas height="50" id="c237" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_cone_shape2() {
-
-var canvas = document.getElementById('c237');
-var ctx = canvas.getContext('2d');
-
-var tol = 1; // tolerance to avoid antialiasing artifacts
-
-ctx.fillStyle = '#0f0';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(30+10*5/2, 40, 10*3/2, 30+10*15/4, 40, 10*9/4);
-g.addColorStop(0, '#f00');
-g.addColorStop(1, '#f00');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-ctx.fillStyle = '#0f0';
-ctx.beginPath();
-ctx.moveTo(30-tol, 40);
-ctx.lineTo(110, -20-tol);
-ctx.lineTo(110, 100+tol);
-ctx.fill();
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
-<!-- [[[ test_2d.gradient.radial.cone.top.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.cone.top</p>
-<canvas height="50" id="c238" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_cone_top() {
-
-var canvas = document.getElementById('c238');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(230, 25, 100, 100, 25, 101);
-g.addColorStop(0, '#f00');
-g.addColorStop(1, '#0f0');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1, 1, 0, 255, 0, 255, 0);
-isPixel(ctx, 50, 1, 0, 255, 0, 255, 0);
-isPixel(ctx, 98, 1, 0, 255, 0, 255, 0);
-isPixel(ctx, 1, 25, 0, 255, 0, 255, 0);
-isPixel(ctx, 50, 25, 0, 255, 0, 255, 0);
-isPixel(ctx, 98, 25, 0, 255, 0, 255, 0);
-isPixel(ctx, 1, 48, 0, 255, 0, 255, 0);
-isPixel(ctx, 50, 48, 0, 255, 0, 255, 0);
-isPixel(ctx, 98, 48, 0, 255, 0, 255, 0);
-
-}
-</script>
-
 <!-- [[[ test_2d.gradient.radial.equal.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.equal</p>
 <canvas height="50" id="c239" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_gradient_radial_equal() {
 
@@ -6192,85 +5914,16 @@ isPixel(ctx, 98,25, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 isPixel(ctx, 50,48, 0,255,0,255, 0);
 isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.gradient.radial.inside2.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.inside2</p>
-<canvas height="50" id="c241" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_inside2() {
-
-var canvas = document.getElementById('c241');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(50, 25, 200, 50, 25, 100);
-g.addColorStop(0, '#f00');
-g.addColorStop(1, '#0f0');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
-<!-- [[[ test_2d.gradient.radial.inside3.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.inside3</p>
-<canvas height="50" id="c242" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_inside3() {
-
-var canvas = document.getElementById('c242');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(50, 25, 200, 50, 25, 100);
-g.addColorStop(0, '#f00');
-g.addColorStop(0.993, '#f00');
-g.addColorStop(1, '#0f0');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.gradient.radial.negative.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.negative</p>
 <!-- Testing: createRadialGradient() throws INDEX_SIZE_ERR if either radius is negative -->
 <canvas height="50" id="c243" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_gradient_radial_negative() {
@@ -6529,119 +6182,16 @@ var _thrown = undefined; try {
 var _thrown = undefined; try {
   ctx.createRadialGradient(0, 0, 1, 0, Infinity, Infinity);
 } catch (e) { _thrown = e }; ok(_thrown && _thrown instanceof TypeError, "should throw TypeError");
 
 
 }
 </script>
 
-<!-- [[[ test_2d.gradient.radial.outside1.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.outside1</p>
-<canvas height="50" id="c245" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_outside1() {
-
-var canvas = document.getElementById('c245');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(200, 25, 10, 200, 25, 20);
-g.addColorStop(0, '#f00');
-g.addColorStop(1, '#0f0');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
-<!-- [[[ test_2d.gradient.radial.outside2.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.outside2</p>
-<canvas height="50" id="c246" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_outside2() {
-
-var canvas = document.getElementById('c246');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(200, 25, 20, 200, 25, 10);
-g.addColorStop(0, '#0f0');
-g.addColorStop(1, '#f00');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
-<!-- [[[ test_2d.gradient.radial.outside3.html ]]] -->
-
-<p>Canvas test: 2d.gradient.radial.outside3</p>
-<canvas height="50" id="c247" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_gradient_radial_outside3() {
-
-var canvas = document.getElementById('c247');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-var g = ctx.createRadialGradient(200, 25, 20, 200, 25, 10);
-g.addColorStop(0, '#0f0');
-g.addColorStop(0.001, '#f00');
-g.addColorStop(1, '#f00');
-ctx.fillStyle = g;
-ctx.fillRect(0, 0, 100, 50);
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 50,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,25, 0,255,0,255, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 98,25, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 50,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.gradient.radial.touch1.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.touch1</p>
 <canvas height="50" id="c248" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_gradient_radial_touch1() {
 
@@ -8787,53 +8337,16 @@ isPixel(ctx, 75,16, 0,255,0,255, 0);
 isPixel(ctx, 75,34, 0,255,0,255, 0);
 isPixel(ctx, 75,35, 0,255,0,255, 0);
 isPixel(ctx, 75,36, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.line.cap.closed.html ]]] -->
-
-<p>Canvas test: 2d.line.cap.closed</p>
-<!-- Testing: Line caps are not drawn at the corners of an unclosed rectangle -->
-<canvas height="50" id="c306" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_line_cap_closed() {
-
-var canvas = document.getElementById('c306');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#0f0';
-ctx.strokeStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-ctx.lineJoin = 'bevel';
-ctx.lineCap = 'square';
-ctx.lineWidth = 400;
-
-ctx.beginPath();
-ctx.moveTo(200, 200);
-ctx.lineTo(200, 1000);
-ctx.lineTo(1000, 1000);
-ctx.lineTo(1000, 200);
-ctx.closePath();
-ctx.stroke();
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 48,1, 0,255,0,255, 0);
-isPixel(ctx, 48,48, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.line.cap.invalid.html ]]] -->
 
 <p>Canvas test: 2d.line.cap.invalid - bug 401788</p>
 <!-- Testing: Setting lineCap to invalid values is ignored -->
 <canvas height="50" id="c307" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_line_cap_invalid() {
@@ -9325,49 +8838,16 @@ isPixel(ctx, 1,1, 0,255,0,255, 0);
 isPixel(ctx, 48,1, 0,255,0,255, 0);
 isPixel(ctx, 48,48, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.line.join.parallel.html ]]] -->
-
-<p>Canvas test: 2d.line.join.parallel</p>
-<!-- Testing: Line joins are drawn at 180-degree joins -->
-<canvas height="50" id="c318" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_line_join_parallel() {
-
-var canvas = document.getElementById('c318');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#f00';
-ctx.fillRect(0, 0, 100, 50);
-
-ctx.strokeStyle = '#0f0';
-ctx.lineWidth = 300;
-ctx.lineJoin = 'round';
-ctx.beginPath();
-ctx.moveTo(-100, 25);
-ctx.lineTo(0, 25);
-ctx.lineTo(-100, 25);
-ctx.stroke();
-
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 48,1, 0,255,0,255, 0);
-isPixel(ctx, 48,48, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.line.join.round.html ]]] -->
 
 <p>Canvas test: 2d.line.join.round</p>
 <!-- Testing: lineJoin 'round' is rendered correctly -->
 <canvas height="50" id="c319" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_line_join_round() {
@@ -10689,45 +10169,16 @@ isPixel(ctx, 98,1, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 isPixel(ctx, 20,48, 0,255,0,255, 0);
 isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.path.arc.shape.3.html ]]] -->
-
-<p>Canvas test: 2d.path.arc.shape.3</p>
-<!-- Testing: arc() from 0 to -pi/2 does not draw anything in the wrong quadrant -->
-<canvas height="50" id="c349" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_path_arc_shape_3() {
-
-var canvas = document.getElementById('c349');
-var ctx = canvas.getContext('2d');
-
-ctx.fillStyle = '#0f0';
-ctx.fillRect(0, 0, 100, 50);
-ctx.lineWidth = 100;
-ctx.strokeStyle = '#f00';
-ctx.beginPath();
-ctx.arc(0, 50, 50, 0, -Math.PI/2, false);
-ctx.stroke();
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-isPixel(ctx, 1,1, 0,255,0,255, 0);
-isPixel(ctx, 98,1, 0,255,0,255, 0);
-isPixel(ctx, 1,48, 0,255,0,255, 0);
-isPixel(ctx, 98,48, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.path.arc.shape.4.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.shape.4</p>
 <!-- Testing: arc() from 0 to -pi/2 draws stuff in the right quadrant -->
 <canvas height="50" id="c350" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_path_arc_shape_4() {
@@ -13117,38 +12568,16 @@ ctx.fillStyle = '#0f0';
 ctx.fill();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 90,45, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.path.rect.selfintersect.html ]]] -->
-
-<p>Canvas test: 2d.path.rect.selfintersect</p>
-<canvas height="50" id="c434" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_path_rect_selfintersect() {
-
-var canvas = document.getElementById('c434');
-var ctx = canvas.getContext('2d');
-
-ctx.strokeStyle = '#0f0';
-ctx.lineWidth = 90;
-ctx.beginPath();
-ctx.rect(45, 20, 10, 10);
-ctx.stroke();
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.path.rect.winding.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.winding</p>
 <canvas height="50" id="c435" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_path_rect_winding() {
 
@@ -17144,37 +16573,16 @@ ctx.lineWidth = 250;
 ctx.lineCap = 'round';
 ctx.strokeRect(100, 25, 100, 0);
 isPixel(ctx, 50,25, 0,0,0,0, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.strokeRect.zero.5.html ]]] -->
-
-<p>Canvas test: 2d.strokeRect.zero.5</p>
-<canvas height="50" id="c584" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_strokeRect_zero_5() {
-
-var canvas = document.getElementById('c584');
-var ctx = canvas.getContext('2d');
-
-ctx.strokeStyle = '#0f0';
-ctx.lineWidth = 250;
-ctx.lineJoin = 'round';
-ctx.strokeRect(100, 25, 100, 0);
-isPixel(ctx, 50,25, 0,255,0,255, 0);
-
-
-}
-</script>
-
 <!-- [[[ test_2d.strokeStyle.default.html ]]] -->
 
 <p>Canvas test: 2d.strokeStyle.default</p>
 <canvas height="50" id="c585" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_strokeStyle_default() {
 
@@ -19330,40 +18738,17 @@ function runTests() {
  
  /**
   * These tests only pass on Mac OS X >= 10.5; see bug 450114
   */
  //test_2d_gradient_radial_equal();
  //test_2d_gradient_radial_touch1();
  //test_2d_gradient_radial_touch2();
  //test_2d_gradient_radial_touch3();
- 
- /**
-  * These 19 tests receive special makefile treatment
-  */
- //test_2d_composite_uncovered_image_destination_atop();
- //test_2d_composite_uncovered_image_destination_in();
- //test_2d_composite_uncovered_image_source_in();
- //test_2d_composite_uncovered_image_source_out();
- //test_2d_gradient_radial_cone_behind();
- //test_2d_gradient_radial_cone_beside();
- //test_2d_gradient_radial_cone_front();
- //test_2d_gradient_radial_cone_shape2();
- //test_2d_gradient_radial_cone_top();
- //test_2d_gradient_radial_inside2();
- //test_2d_gradient_radial_inside3();
- //test_2d_gradient_radial_outside1();
- //test_2d_gradient_radial_outside2();
- //test_2d_gradient_radial_outside3();
- //test_2d_line_cap_closed();
- //test_2d_line_join_parallel();
- //test_2d_path_arc_shape_3();
- //test_2d_path_rect_selfintersect();
- //test_2d_strokeRect_zero_5();
- 
+
  /**
   * Other tests not being run
   */
  //test_2d_composite_uncovered_fill_destination_atop();
  //test_2d_composite_uncovered_fill_destination_in();
  //test_2d_composite_uncovered_fill_source_in();
  //test_2d_composite_uncovered_fill_source_out();
  //test_2d_composite_uncovered_pattern_destination_atop();
