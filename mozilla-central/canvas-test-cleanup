From: Ms2ger <ms2ger@gmail.com>
Bug 665345 - Consistify test_canvas.html

This patch makes the number of empty lines between tests consistent,
removes unnecessary try-catch blocks and fixes indentation, as well
as removing an attribute called ','.

diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -56,16 +56,46 @@ function IsAzureCairo() {
   try {
     var backend = Cc["@mozilla.org/gfx/info;1"].getService(SpecialPowers.Ci.nsIGfxInfo).getInfo().AzureCanvasBackend;
     enabled = (backend == "cairo");
   } catch (e) { }
 
   return enabled;
 }
 
+function isPixel(ctx, x,y, r,g,b,a, d) {
+  var pos = x + "," + y;
+  var colour = r + "," + g + "," + b + "," + a;
+  var pixel = ctx.getImageData(x, y, 1, 1);
+  var pr = pixel.data[0],
+      pg = pixel.data[1],
+      pb = pixel.data[2],
+      pa = pixel.data[3];
+  ok(r-d <= pr && pr <= r+d &&
+     g-d <= pg && pg <= g+d &&
+     b-d <= pb && pb <= b+d &&
+     a-d <= pa && pa <= a+d,
+     "pixel "+pos+" of "+ctx.canvas.id+" is "+pr+","+pg+","+pb+","+pa+"; expected "+colour+" +/- "+d);
+}
+
+function todo_isPixel(ctx, x,y, r,g,b,a, d) {
+  var pos = x + "," + y;
+  var colour = r + "," + g + "," + b + "," + a;
+  var pixel = ctx.getImageData(x, y, 1, 1);
+  var pr = pixel.data[0],
+      pg = pixel.data[1],
+      pb = pixel.data[2],
+      pa = pixel.data[3];
+  todo(r-d <= pr && pr <= r+d &&
+     g-d <= pg && pg <= g+d &&
+     b-d <= pb && pb <= b+d &&
+     a-d <= pa && pa <= a+d,
+     "pixel "+pos+" is "+pr+","+pg+","+pb+","+pa+"; expected "+colour+" +/- "+d);
+}
+
 </script>
 <!-- Includes all the tests in the content/canvas/tests except for test_bug397524.html -->
 
 <!-- [[[ test_2d.canvas.readonly.html ]]] -->
 
 <p>Canvas test: 2d.canvas.readonly</p>
 <!-- Testing: CanvasRenderingContext2D.canvas is readonly -->
 <canvas height="50" id="c1" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
@@ -104,30 +134,16 @@ ok(ctx.canvas === canvas, "ctx.canvas ==
 }
 </script>
 
 <!-- [[[ test_2d.clearRect.basic.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.basic</p>
 <canvas height="50" id="c3" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
-function isPixel(ctx, x,y, r,g,b,a, d) {
-	var pos = x + "," + y;
-	var colour = r + "," + g + "," + b + "," + a;
-    var pixel = ctx.getImageData(x, y, 1, 1);
-    var pr = pixel.data[0],
-        pg = pixel.data[1],
-        pb = pixel.data[2],
-        pa = pixel.data[3];
-    ok(r-d <= pr && pr <= r+d &&
-       g-d <= pg && pg <= g+d &&
-       b-d <= pb && pb <= b+d &&
-       a-d <= pa && pa <= a+d,
-       "pixel "+pos+" of "+ctx.canvas.id+" is "+pr+","+pg+","+pb+","+pa+"; expected "+colour+" +/- "+d);
-}
 
 function test_2d_clearRect_basic() {
 
 var canvas = document.getElementById('c3');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
@@ -139,17 +155,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.clearRect.clip.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.clip</p>
 <canvas height="50" id="c4" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_clip() {
 
 var canvas = document.getElementById('c4');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -169,17 +184,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.clearRect.globalalpha.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.globalalpha</p>
 <canvas height="50" id="c5" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_globalalpha() {
 
 var canvas = document.getElementById('c5');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalAlpha = 0.1;
@@ -191,17 +205,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.clearRect.globalcomposite.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.globalcomposite</p>
 <canvas height="50" id="c6" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_globalcomposite() {
 
 var canvas = document.getElementById('c6');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalCompositeOperation = 'destination-atop';
@@ -213,17 +226,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.clearRect.negative.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.negative</p>
 <canvas height="50" id="c7" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_negative() {
 
 var canvas = document.getElementById('c7');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.clearRect(0, 0, 50, 25);
@@ -241,25 +253,21 @@ isPixel(ctx, 75,37, 0,0,0,0, 0);
 
 <!-- [[[ test_2d.clearRect.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.nonfinite</p>
 <!-- Testing: clearRect() with Infinity/NaN is ignored -->
 <canvas height="50" id="c8" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_nonfinite() {
 
 var canvas = document.getElementById('c8');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
 ctx.clearRect(Infinity, 0, 100, 50);
 ctx.clearRect(-Infinity, 0, 100, 50);
 ctx.clearRect(NaN, 0, 100, 50);
 ctx.clearRect(0, Infinity, 100, 50);
 ctx.clearRect(0, -Infinity, 100, 50);
@@ -279,32 +287,26 @@ ctx.clearRect(Infinity, 0, Infinity, Inf
 ctx.clearRect(Infinity, 0, 100, Infinity);
 ctx.clearRect(0, Infinity, Infinity, 50);
 ctx.clearRect(0, Infinity, Infinity, Infinity);
 ctx.clearRect(0, Infinity, 100, Infinity);
 ctx.clearRect(0, 0, Infinity, Infinity);
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.clearRect.path.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.path</p>
 <canvas height="50" id="c9" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_path() {
 
 var canvas = document.getElementById('c9');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.beginPath();
 ctx.rect(0, 0, 100, 50);
@@ -317,17 +319,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.clearRect.shadow.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.shadow</p>
 <canvas height="50" id="c10" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_shadow() {
 
 var canvas = document.getElementById('c10');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowColor = '#f00';
@@ -342,17 +343,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.clearRect.transform.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.transform</p>
 <canvas height="50" id="c11" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_transform() {
 
 var canvas = document.getElementById('c11');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.scale(10, 10);
@@ -365,17 +365,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.clearRect.zero.html ]]] -->
 
 <p>Canvas test: 2d.clearRect.zero</p>
 <canvas height="50" id="c12" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_clearRect_zero() {
 
 var canvas = document.getElementById('c12');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.clearRect(0, 0, 100, 0);
@@ -388,17 +387,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.composite.canvas.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.copy</p>
 <canvas height="50" id="c13" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_copy() {
 
 var canvas = document.getElementById('c13');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -417,17 +415,16 @@ isPixel(ctx, 50,25, 255,255,0,191, 5);
 <img class="resource" id="yellow75_1.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.destination-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.destination-atop</p>
 <canvas height="50" id="c14" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_destination_atop() {
 
 var canvas = document.getElementById('c14');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -446,17 +443,16 @@ isPixel(ctx, 50,25, 127,255,127,191, 5);
 <img class="resource" id="yellow75_2.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.destination-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.destination-in</p>
 <canvas height="50" id="c15" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_destination_in() {
 
 var canvas = document.getElementById('c15');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -475,17 +471,16 @@ isPixel(ctx, 50,25, 0,255,255,95, 5);
 <img class="resource" id="yellow75_3.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.destination-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.destination-out</p>
 <canvas height="50" id="c16" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_destination_out() {
 
 var canvas = document.getElementById('c16');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -504,17 +499,16 @@ isPixel(ctx, 50,25, 0,255,255,31, 5);
 <img class="resource" id="yellow75_4.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.destination-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.destination-over</p>
 <canvas height="50" id="c17" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_destination_over() {
 
 var canvas = document.getElementById('c17');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -533,17 +527,16 @@ isPixel(ctx, 50,25, 109,255,145,223, 5);
 <img class="resource" id="yellow75_5.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.lighter.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.lighter</p>
 <canvas height="50" id="c18" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_lighter() {
 
 var canvas = document.getElementById('c18');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -562,17 +555,16 @@ isPixel(ctx, 50,25, 191,255,127,255, 5);
 <img class="resource" id="yellow75_6.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.source-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.source-atop</p>
 <canvas height="50" id="c19" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_source_atop() {
 
 var canvas = document.getElementById('c19');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -591,17 +583,16 @@ isPixel(ctx, 50,25, 191,255,63,127, 5);
 <img class="resource" id="yellow75_7.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.source-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.source-in</p>
 <canvas height="50" id="c20" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_source_in() {
 
 var canvas = document.getElementById('c20');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -620,17 +611,16 @@ isPixel(ctx, 50,25, 255,255,0,95, 5);
 <img class="resource" id="yellow75_8.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.source-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.source-out</p>
 <canvas height="50" id="c21" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_source_out() {
 
 var canvas = document.getElementById('c21');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -649,17 +639,16 @@ isPixel(ctx, 50,25, 255,255,0,95, 5);
 <img class="resource" id="yellow75_9.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.source-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.source-over</p>
 <canvas height="50" id="c22" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_source_over() {
 
 var canvas = document.getElementById('c22');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -678,17 +667,16 @@ isPixel(ctx, 50,25, 218,255,36,223, 5);
 <img class="resource" id="yellow75_10.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.canvas.xor.html ]]] -->
 
 <p>Canvas test: 2d.composite.canvas.xor</p>
 <canvas height="50" id="c23" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_canvas_xor() {
 
 var canvas = document.getElementById('c23');
 var ctx = canvas.getContext('2d');
 
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = canvas.width;
@@ -708,17 +696,16 @@ isPixel(ctx, 50,25, 191,255,63,127, 5);
 
 <!-- [[[ test_2d.composite.clip.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.copy</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c24" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_copy() {
 
 var canvas = document.getElementById('c24');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -736,17 +723,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.destination-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.destination-atop</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c25" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_destination_atop() {
 
 var canvas = document.getElementById('c25');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -764,17 +750,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.destination-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.destination-in</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c26" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_destination_in() {
 
 var canvas = document.getElementById('c26');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -792,17 +777,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.destination-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.destination-out</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c27" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_destination_out() {
 
 var canvas = document.getElementById('c27');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -820,17 +804,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.destination-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.destination-over</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c28" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_destination_over() {
 
 var canvas = document.getElementById('c28');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -848,17 +831,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.lighter.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.lighter</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c29" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_lighter() {
 
 var canvas = document.getElementById('c29');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -876,17 +858,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.source-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.source-atop</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c30" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_source_atop() {
 
 var canvas = document.getElementById('c30');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -904,17 +885,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.source-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.source-in</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c31" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_source_in() {
 
 var canvas = document.getElementById('c31');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -932,17 +912,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.source-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.source-out</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c32" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_source_out() {
 
 var canvas = document.getElementById('c32');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -960,17 +939,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.source-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.source-over</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c33" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_source_over() {
 
 var canvas = document.getElementById('c33');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -988,17 +966,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.composite.clip.xor.html ]]] -->
 
 <p>Canvas test: 2d.composite.clip.xor</p>
 <!-- Testing: fill() does not affect pixels outside the clip region. -->
 <canvas height="50" id="c34" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_clip_xor() {
 
 var canvas = document.getElementById('c34');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -1015,17 +992,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.composite.globalAlpha.canvas.html ]]] -->
 
 <p>Canvas test: 2d.composite.globalAlpha.canvas</p>
 <canvas height="50" id="c35" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_globalAlpha_canvas() {
 
 var canvas = document.getElementById('c35');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -1044,31 +1020,16 @@ isPixel(ctx, 50,25, 2,253,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.composite.globalAlpha.canvaspattern.html ]]] -->
 
 <p>Canvas test: 2d.composite.globalAlpha.canvaspattern - bug 401790</p>
 <canvas height="50" id="c36" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-function todo_isPixel(ctx, x,y, r,g,b,a, d) {
-	var pos = x + "," + y;
-	var colour = r + "," + g + "," + b + "," + a;
-    var pixel = ctx.getImageData(x, y, 1, 1);
-    var pr = pixel.data[0],
-        pg = pixel.data[1],
-        pb = pixel.data[2],
-        pa = pixel.data[3];
-    todo(r-d <= pr && pr <= r+d &&
-       g-d <= pg && pg <= g+d &&
-       b-d <= pb && pb <= b+d &&
-       a-d <= pa && pa <= a+d,
-       "pixel "+pos+" of "+ctx.canvas.id+" is "+pr+","+pg+","+pb+","+pa+" (marked todo); expected "+colour+" +/- " + d);
-}
-
 function test_2d_composite_globalAlpha_canvaspattern() {
 
 var canvas = document.getElementById('c36');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -1105,17 +1066,16 @@ ok(ctx.globalAlpha === 1.0, "ctx.globalA
 </script>
 
 <!-- [[[ test_2d.composite.globalAlpha.fill.html ]]] -->
 
 <p>Canvas test: 2d.composite.globalAlpha.fill</p>
 <canvas height="50" id="c38" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_globalAlpha_fill() {
 
 var canvas = document.getElementById('c38');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalAlpha = 0.01; // avoid any potential alpha=0 optimisations
@@ -1128,17 +1088,16 @@ isPixel(ctx, 50,25, 2,253,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.composite.globalAlpha.image.html ]]] -->
 
 <p>Canvas test: 2d.composite.globalAlpha.image</p>
 <canvas height="50" id="c39" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_globalAlpha_image() {
 
 var canvas = document.getElementById('c39');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalAlpha = 0.01; // avoid any potential alpha=0 optimisations
@@ -1151,18 +1110,16 @@ isPixel(ctx, 50,25, 2,253,0,255, 2);
 <img class="resource" id="red_1.png" src="image_red.png">
 
 <!-- [[[ test_2d.composite.globalAlpha.imagepattern.html ]]] -->
 
 <p>Canvas test: 2d.composite.globalAlpha.imagepattern - bug 401790</p>
 <canvas height="50" id="c40" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_globalAlpha_imagepattern() {
 
 var canvas = document.getElementById('c40');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = ctx.createPattern(document.getElementById('red_2.png'), 'no-repeat');
@@ -1190,16 +1147,17 @@ ctx.globalAlpha = 0.5;
 var a = ctx.globalAlpha; // might not be exactly 0.5, if it is rounded/quantised, so remember for future comparisons
 ctx.globalAlpha = Infinity;
 ok(ctx.globalAlpha === a, "ctx.globalAlpha === a");
 ctx.globalAlpha = -Infinity;
 ok(ctx.globalAlpha === a, "ctx.globalAlpha === a");
 ctx.globalAlpha = NaN;
 ok(ctx.globalAlpha === a, "ctx.globalAlpha === a");
 
+
 }
 </script>
 
 <!-- [[[ test_2d.composite.globalAlpha.range.html ]]] -->
 
 <p>Canvas test: 2d.composite.globalAlpha.range</p>
 <canvas height="50" id="c42" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
@@ -1225,17 +1183,16 @@ ok(ctx.globalAlpha == 1, "ctx.globalAlph
 </script>
 
 <!-- [[[ test_2d.composite.image.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.copy</p>
 <canvas height="50" id="c43" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_copy() {
 
 var canvas = document.getElementById('c43');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1249,17 +1206,16 @@ isPixel(ctx, 50,25, 255,255,0,191, 5);
 <img class="resource" id="yellow75_12.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.destination-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.destination-atop</p>
 <canvas height="50" id="c44" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_destination_atop() {
 
 var canvas = document.getElementById('c44');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1273,17 +1229,16 @@ isPixel(ctx, 50,25, 127,255,127,191, 5);
 <img class="resource" id="yellow75_13.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.destination-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.destination-in</p>
 <canvas height="50" id="c45" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_destination_in() {
 
 var canvas = document.getElementById('c45');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1297,17 +1252,16 @@ isPixel(ctx, 50,25, 0,255,255,95, 5);
 <img class="resource" id="yellow75_14.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.destination-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.destination-out</p>
 <canvas height="50" id="c46" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_destination_out() {
 
 var canvas = document.getElementById('c46');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1321,17 +1275,16 @@ isPixel(ctx, 50,25, 0,255,255,31, 5);
 <img class="resource" id="yellow75_15.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.destination-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.destination-over</p>
 <canvas height="50" id="c47" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_destination_over() {
 
 var canvas = document.getElementById('c47');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1345,17 +1298,16 @@ isPixel(ctx, 50,25, 109,255,145,223, 5);
 <img class="resource" id="yellow75_16.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.lighter.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.lighter</p>
 <canvas height="50" id="c48" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_lighter() {
 
 var canvas = document.getElementById('c48');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1369,17 +1321,16 @@ isPixel(ctx, 50,25, 191,255,127,255, 5);
 <img class="resource" id="yellow75_17.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.source-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.source-atop</p>
 <canvas height="50" id="c49" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_source_atop() {
 
 var canvas = document.getElementById('c49');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1393,17 +1344,16 @@ isPixel(ctx, 50,25, 191,255,63,127, 5);
 <img class="resource" id="yellow75_18.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.source-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.source-in</p>
 <canvas height="50" id="c50" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_source_in() {
 
 var canvas = document.getElementById('c50');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1417,17 +1367,16 @@ isPixel(ctx, 50,25, 255,255,0,95, 5);
 <img class="resource" id="yellow75_19.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.source-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.source-out</p>
 <canvas height="50" id="c51" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_source_out() {
 
 var canvas = document.getElementById('c51');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1441,17 +1390,16 @@ isPixel(ctx, 50,25, 255,255,0,95, 5);
 <img class="resource" id="yellow75_20.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.source-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.source-over</p>
 <canvas height="50" id="c52" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_source_over() {
 
 var canvas = document.getElementById('c52');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1465,17 +1413,16 @@ isPixel(ctx, 50,25, 218,255,36,223, 5);
 <img class="resource" id="yellow75_21.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.image.xor.html ]]] -->
 
 <p>Canvas test: 2d.composite.image.xor</p>
 <canvas height="50" id="c53" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_image_xor() {
 
 var canvas = document.getElementById('c53');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1494,28 +1441,20 @@ isPixel(ctx, 50,25, 191,255,63,127, 5);
 <canvas height="50" id="c54" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_operation_casesensitive() {
 
 var canvas = document.getElementById('c54');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.globalCompositeOperation = 'xor';
 ctx.globalCompositeOperation = 'Source-over';
 ok(ctx.globalCompositeOperation == 'xor', "ctx.globalCompositeOperation == 'xor'");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.composite.operation.clear.html ]]] -->
 
 <p>Canvas test: 2d.composite.operation.clear</p>
 <canvas height="50" id="c55" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
@@ -1600,55 +1539,39 @@ for (var i = 0; i < modes.length; ++i)
 <canvas height="50" id="c59" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_operation_highlight() {
 
 var canvas = document.getElementById('c59');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.globalCompositeOperation = 'xor';
 ctx.globalCompositeOperation = 'highlight';
 ok(ctx.globalCompositeOperation == 'xor', "ctx.globalCompositeOperation == 'xor'");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.composite.operation.nullsuffix.html ]]] -->
 
 <p>Canvas test: 2d.composite.operation.nullsuffix - bug 401788</p>
 <canvas height="50" id="c60" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_operation_nullsuffix() {
 
 var canvas = document.getElementById('c60');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.globalCompositeOperation = 'xor';
 ctx.globalCompositeOperation = 'source-over\0';
 ok(ctx.globalCompositeOperation == 'xor', "ctx.globalCompositeOperation == 'xor'");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.composite.operation.over.html ]]] -->
 
 <p>Canvas test: 2d.composite.operation.over</p>
 <canvas height="50" id="c61" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
@@ -1673,39 +1596,30 @@ ok(ctx.globalCompositeOperation == 'xor'
 <canvas height="50" id="c62" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_operation_unrecognised() {
 
 var canvas = document.getElementById('c62');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.globalCompositeOperation = 'xor';
 ctx.globalCompositeOperation = 'nonexistent';
 ok(ctx.globalCompositeOperation == 'xor', "ctx.globalCompositeOperation == 'xor'");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.composite.solid.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.copy</p>
 <canvas height="50" id="c63" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_copy() {
 
 var canvas = document.getElementById('c63');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1719,17 +1633,16 @@ isPixel(ctx, 50,25, 255,255,0,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.destination-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.destination-atop</p>
 <canvas height="50" id="c64" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_destination_atop() {
 
 var canvas = document.getElementById('c64');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1743,17 +1656,16 @@ isPixel(ctx, 50,25, 0,255,255,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.destination-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.destination-in</p>
 <canvas height="50" id="c65" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_destination_in() {
 
 var canvas = document.getElementById('c65');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1767,17 +1679,16 @@ isPixel(ctx, 50,25, 0,255,255,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.destination-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.destination-out</p>
 <canvas height="50" id="c66" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_destination_out() {
 
 var canvas = document.getElementById('c66');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1791,17 +1702,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.destination-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.destination-over</p>
 <canvas height="50" id="c67" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_destination_over() {
 
 var canvas = document.getElementById('c67');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1815,17 +1725,16 @@ isPixel(ctx, 50,25, 0,255,255,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.lighter.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.lighter</p>
 <canvas height="50" id="c68" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_lighter() {
 
 var canvas = document.getElementById('c68');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1839,17 +1748,16 @@ isPixel(ctx, 50,25, 255,255,255,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.source-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.source-atop</p>
 <canvas height="50" id="c69" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_source_atop() {
 
 var canvas = document.getElementById('c69');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1863,17 +1771,16 @@ isPixel(ctx, 50,25, 255,255,0,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.source-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.source-in</p>
 <canvas height="50" id="c70" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_source_in() {
 
 var canvas = document.getElementById('c70');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1887,17 +1794,16 @@ isPixel(ctx, 50,25, 255,255,0,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.source-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.source-out</p>
 <canvas height="50" id="c71" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_source_out() {
 
 var canvas = document.getElementById('c71');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1911,17 +1817,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.source-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.source-over</p>
 <canvas height="50" id="c72" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_source_over() {
 
 var canvas = document.getElementById('c72');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1935,17 +1840,16 @@ isPixel(ctx, 50,25, 255,255,0,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.solid.xor.html ]]] -->
 
 <p>Canvas test: 2d.composite.solid.xor</p>
 <canvas height="50" id="c73" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_solid_xor() {
 
 var canvas = document.getElementById('c73');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 1.0)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1959,17 +1863,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.copy</p>
 <canvas height="50" id="c74" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_copy() {
 
 var canvas = document.getElementById('c74');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -1983,17 +1886,16 @@ isPixel(ctx, 50,25, 0,0,255,191, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.destination-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.destination-atop</p>
 <canvas height="50" id="c75" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_destination_atop() {
 
 var canvas = document.getElementById('c75');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2007,17 +1909,16 @@ isPixel(ctx, 50,25, 0,127,127,191, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.destination-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.destination-in</p>
 <canvas height="50" id="c76" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_destination_in() {
 
 var canvas = document.getElementById('c76');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2031,17 +1932,16 @@ isPixel(ctx, 50,25, 0,255,0,95, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.destination-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.destination-out</p>
 <canvas height="50" id="c77" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_destination_out() {
 
 var canvas = document.getElementById('c77');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2055,17 +1955,16 @@ isPixel(ctx, 50,25, 0,255,0,31, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.destination-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.destination-over</p>
 <canvas height="50" id="c78" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_destination_over() {
 
 var canvas = document.getElementById('c78');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2079,17 +1978,16 @@ isPixel(ctx, 50,25, 0,145,109,223, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.lighter.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.lighter</p>
 <canvas height="50" id="c79" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_lighter() {
 
 var canvas = document.getElementById('c79');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2103,17 +2001,16 @@ isPixel(ctx, 50,25, 0,127,191,255, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.source-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.source-atop</p>
 <canvas height="50" id="c80" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_source_atop() {
 
 var canvas = document.getElementById('c80');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2127,17 +2024,16 @@ isPixel(ctx, 50,25, 0,63,191,127, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.source-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.source-in</p>
 <canvas height="50" id="c81" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_source_in() {
 
 var canvas = document.getElementById('c81');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2151,17 +2047,16 @@ isPixel(ctx, 50,25, 0,0,255,95, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.source-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.source-out</p>
 <canvas height="50" id="c82" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_source_out() {
 
 var canvas = document.getElementById('c82');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2175,17 +2070,16 @@ isPixel(ctx, 50,25, 0,0,255,95, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.source-over.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.source-over</p>
 <canvas height="50" id="c83" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_source_over() {
 
 var canvas = document.getElementById('c83');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2199,17 +2093,16 @@ isPixel(ctx, 50,25, 0,36,218,223, 5);
 </script>
 
 <!-- [[[ test_2d.composite.transparent.xor.html ]]] -->
 
 <p>Canvas test: 2d.composite.transparent.xor</p>
 <canvas height="50" id="c84" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_composite_transparent_xor() {
 
 var canvas = document.getElementById('c84');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2224,18 +2117,16 @@ isPixel(ctx, 50,25, 0,63,191,127, 5);
 
 <!-- [[[ test_2d.composite.uncovered.fill.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.fill.copy</p>
 <!-- Testing: fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c85" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_fill_copy() {
 
 var canvas = document.getElementById('c85');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2251,18 +2142,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.fill.destination-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.fill.destination-atop</p>
 <!-- Testing: fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c86" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_fill_destination_atop() {
 
 var canvas = document.getElementById('c86');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2278,18 +2167,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.fill.destination-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.fill.destination-in</p>
 <!-- Testing: fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c87" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_fill_destination_in() {
 
 var canvas = document.getElementById('c87');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2305,18 +2192,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.fill.source-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.fill.source-in</p>
 <!-- Testing: fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c88" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_fill_source_in() {
 
 var canvas = document.getElementById('c88');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2332,18 +2217,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.fill.source-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.fill.source-out</p>
 <!-- Testing: fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c89" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_fill_source_out() {
 
 var canvas = document.getElementById('c89');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2359,18 +2242,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.image.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.image.copy</p>
 <!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c90" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_image_copy() {
 
 var canvas = document.getElementById('c90');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2386,18 +2267,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.image.destination-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.image.destination-atop</p>
 <!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c91" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_image_destination_atop() {
 
 var canvas = document.getElementById('c91');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2413,18 +2292,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.image.destination-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.image.destination-in</p>
 <!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c92" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_image_destination_in() {
 
 var canvas = document.getElementById('c92');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2440,18 +2317,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.image.source-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.image.source-in</p>
 <!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c93" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_image_source_in() {
 
 var canvas = document.getElementById('c93');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2467,18 +2342,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.image.source-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.image.source-out</p>
 <!-- Testing: drawImage() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c94" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_image_source_out() {
 
 var canvas = document.getElementById('c94');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2494,18 +2367,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.pattern.copy.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.pattern.copy</p>
 <!-- Testing: Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c95" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_pattern_copy() {
 
 var canvas = document.getElementById('c95');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2521,18 +2392,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.pattern.destination-atop.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.pattern.destination-atop</p>
 <!-- Testing: Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c96" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_pattern_destination_atop() {
 
 var canvas = document.getElementById('c96');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2548,18 +2417,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.pattern.destination-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.pattern.destination-in</p>
 <!-- Testing: Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c97" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_pattern_destination_in() {
 
 var canvas = document.getElementById('c97');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2575,18 +2442,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.pattern.source-in.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.pattern.source-in</p>
 <!-- Testing: Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c98" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_pattern_source_in() {
 
 var canvas = document.getElementById('c98');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2602,18 +2467,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 
 <!-- [[[ test_2d.composite.uncovered.pattern.source-out.html ]]] -->
 
 <p>Canvas test: 2d.composite.uncovered.pattern.source-out</p>
 <!-- Testing: Pattern fill() draws pixels not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged. -->
 <canvas height="50" id="c99" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_composite_uncovered_pattern_source_out() {
 
 var canvas = document.getElementById('c99');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
 ctx.fillRect(0, 0, 100, 50);
@@ -2628,17 +2491,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 5);
 <img class="resource" id="yellow_10.png" src="image_yellow.png">
 
 <!-- [[[ test_2d.drawImage.3arg.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.3arg</p>
 <canvas height="50" id="c100" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_3arg() {
 
 var canvas = document.getElementById('c100');
 var ctx = canvas.getContext('2d');
 
 ctx.drawImage(document.getElementById('green_1.png'), 0, 0);
 ctx.drawImage(document.getElementById('red_3.png'), -100, 0);
 ctx.drawImage(document.getElementById('red_3.png'), 100, 0);
@@ -2657,17 +2519,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 <img class="resource" id="green_1.png" src="image_green.png">
 
 <!-- [[[ test_2d.drawImage.5arg.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.5arg</p>
 <canvas height="50" id="c101" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_5arg() {
 
 var canvas = document.getElementById('c101');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.drawImage(document.getElementById('green_2.png'), 50, 0, 50, 50);
@@ -2687,17 +2548,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 <img class="resource" id="green_2.png" src="image_green.png">
 
 <!-- [[[ test_2d.drawImage.9arg.basic.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.9arg.basic</p>
 <canvas height="50" id="c102" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_9arg_basic() {
 
 var canvas = document.getElementById('c102');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.drawImage(document.getElementById('green_3.png'), 0, 0, 100, 50, 0, 0, 100, 50);
@@ -2712,17 +2572,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 <img class="resource" id="green_3.png" src="image_green.png">
 
 <!-- [[[ test_2d.drawImage.9arg.destpos.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.9arg.destpos</p>
 <canvas height="50" id="c103" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_9arg_destpos() {
 
 var canvas = document.getElementById('c103');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.drawImage(document.getElementById('green_4.png'), 0, 0, 100, 50, 0, 0, 100, 50);
@@ -2742,17 +2601,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 <img class="resource" id="green_4.png" src="image_green.png">
 
 <!-- [[[ test_2d.drawImage.9arg.destsize.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.9arg.destsize</p>
 <canvas height="50" id="c104" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_9arg_destsize() {
 
 var canvas = document.getElementById('c104');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.drawImage(document.getElementById('green_5.png'), 1, 1, 1, 1, 0, 0, 100, 50);
@@ -2772,17 +2630,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 <img class="resource" id="green_5.png" src="image_green.png">
 
 <!-- [[[ test_2d.drawImage.9arg.sourcepos.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.9arg.sourcepos</p>
 <canvas height="50" id="c105" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_9arg_sourcepos() {
 
 var canvas = document.getElementById('c105');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.drawImage(document.getElementById('rgrg-256x256_1.png'), 140, 20, 100, 50, 0, 0, 100, 50);
@@ -2797,17 +2654,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 <img class="resource" id="rgrg-256x256_1.png" src="image_rgrg-256x256.png">
 
 <!-- [[[ test_2d.drawImage.9arg.sourcesize.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.9arg.sourcesize</p>
 <canvas height="50" id="c106" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_9arg_sourcesize() {
 
 var canvas = document.getElementById('c106');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.drawImage(document.getElementById('rgrg-256x256_2.png'), 0, 0, 256, 256, 0, 0, 100, 50);
@@ -2829,17 +2685,16 @@ isPixel(ctx, 80,30, 0,255,0,255, 2);
 <img class="resource" id="rgrg-256x256_2.png" src="image_rgrg-256x256.png">
 
 <!-- [[[ test_2d.drawImage.alpha.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.alpha</p>
 <canvas height="50" id="c107" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_alpha() {
 
 var canvas = document.getElementById('c107');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalAlpha = 0;
@@ -2955,17 +2810,16 @@ var _thrown = undefined; try {
 <img class="resource" id="broken_1.png" src="image_broken.png">
 
 <!-- [[[ test_2d.drawImage.canvas.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.canvas</p>
 <canvas height="50" id="c112" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_canvas() {
 
 var canvas = document.getElementById('c112');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -2986,17 +2840,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.drawImage.clip.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.clip</p>
 <canvas height="50" id="c113" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_clip() {
 
 var canvas = document.getElementById('c113');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.rect(-10, -10, 1, 1);
@@ -3010,17 +2863,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 <img class="resource" id="red_8.png" src="image_red.png">
 
 <!-- [[[ test_2d.drawImage.composite.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.composite</p>
 <canvas height="50" id="c114" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_composite() {
 
 var canvas = document.getElementById('c114');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalCompositeOperation = 'destination-over';
@@ -3033,17 +2885,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 <img class="resource" id="red_9.png" src="image_red.png">
 
 <!-- [[[ test_2d.drawImage.floatsource.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.floatsource</p>
 <canvas height="50" id="c115" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_floatsource() {
 
 var canvas = document.getElementById('c115');
 var ctx = canvas.getContext('2d');
 
 ctx.drawImage(document.getElementById('green_6.png'), 10.1, 10.1, 0.1, 0.1, 0, 0, 100, 50);
 isPixel(ctx, 50,25, 0,255,0,255, 2);
 
@@ -3074,17 +2925,16 @@ var _thrown = undefined; try {
 </script>
 
 <!-- [[[ test_2d.drawImage.negativedest.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.negativedest</p>
 <canvas height="50" id="c117" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_negativedest() {
 
 var canvas = document.getElementById('c117');
 var ctx = canvas.getContext('2d');
 
 var _thrown_outer = false;
 try {
 
@@ -3114,17 +2964,16 @@ todo(!_thrown_outer, 'should not throw e
 <img class="resource" id="ggrr-256x256_1.png" src="image_ggrr-256x256.png">
 
 <!-- [[[ test_2d.drawImage.negativesource.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.negativesource</p>
 <canvas height="50" id="c118" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_negativesource() {
 
 var canvas = document.getElementById('c118');
 var ctx = canvas.getContext('2d');
 
 var _thrown_outer = false;
 try {
 
@@ -3155,26 +3004,21 @@ todo(!_thrown_outer, 'should not throw e
 
 <!-- [[[ test_2d.drawImage.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.nonfinite</p>
 <!-- Testing: drawImage() with Infinity/NaN is ignored -->
 <canvas height="50" id="c119" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_nonfinite() {
 
 var canvas = document.getElementById('c119');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-
-try {
-
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 var red = document.getElementById('red_10.png');
 ctx.drawImage(red, Infinity, 0);
 ctx.drawImage(red, -Infinity, 0);
 ctx.drawImage(red, NaN, 0);
 ctx.drawImage(red, 0, Infinity);
 ctx.drawImage(red, 0, -Infinity);
@@ -3471,34 +3315,28 @@ ctx.drawImage(red, 0, 0, 100, 50, Infini
 ctx.drawImage(red, 0, 0, 100, 50, Infinity, 0, Infinity, Infinity);
 ctx.drawImage(red, 0, 0, 100, 50, Infinity, 0, 100, Infinity);
 ctx.drawImage(red, 0, 0, 100, 50, 0, Infinity, Infinity, 50);
 ctx.drawImage(red, 0, 0, 100, 50, 0, Infinity, Infinity, Infinity);
 ctx.drawImage(red, 0, 0, 100, 50, 0, Infinity, 100, Infinity);
 ctx.drawImage(red, 0, 0, 100, 50, 0, 0, Infinity, Infinity);
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, 'should not throw exception');
-
 
 }
 </script>
 <img class="resource" id="red_10.png" src="image_red.png">
 
 <!-- [[[ test_2d.drawImage.nowrap.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.nowrap</p>
 <!-- Testing: Stretched images do not get pixels wrapping around the edges -->
 <canvas height="50" id="c120" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_nowrap() {
 
 var canvas = document.getElementById('c120');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.drawImage(document.getElementById('redtransparent_1.png'), -1950, 0, 2000, 50);
@@ -3532,18 +3370,16 @@ ok(_thrown && _thrown.name == "TypeError
 </script>
 
 <!-- [[[ test_2d.drawImage.outsidesource.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.outsidesource</p>
 <canvas height="50" id="c122" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_drawImage_outsidesource() {
 
 var canvas = document.getElementById('c122');
 var ctx = canvas.getContext('2d');
 
 var _thrown_outer = false;
 try {
 
@@ -3588,17 +3424,16 @@ todo(!_thrown_outer, 'should not throw e
 <img class="resource" id="red_11.png" src="image_red.png">
 
 <!-- [[[ test_2d.drawImage.path.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.path</p>
 <canvas height="50" id="c123" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_path() {
 
 var canvas = document.getElementById('c123');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.rect(0, 0, 100, 50);
 ctx.drawImage(document.getElementById('red_12.png'), 0, 0);
@@ -3611,17 +3446,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 <img class="resource" id="red_12.png" src="image_red.png">
 
 <!-- [[[ test_2d.drawImage.self.1.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.self.1 - bug 433235</p>
 <canvas height="50" id="c124" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_self_1() {
 
 var canvas = document.getElementById('c124');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 50, 50);
 ctx.fillStyle = '#f00';
@@ -3638,17 +3472,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.drawImage.self.2.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.self.2 - bug 433235</p>
 <canvas height="50" id="c125" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_self_2() {
 
 var canvas = document.getElementById('c125');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 1, 100, 49);
 ctx.fillStyle = '#f00';
@@ -3667,17 +3500,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.drawImage.transform.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.transform</p>
 <canvas height="50" id="c126" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_transform() {
 
 var canvas = document.getElementById('c126');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.translate(100, 0);
@@ -3725,17 +3557,16 @@ ok(_thrown && _thrown.name == "TypeError
 
 <!-- [[[ test_2d.drawImage.zerosource.html ]]] -->
 
 <p>Canvas test: 2d.drawImage.zerosource</p>
 <!-- Testing: drawImage with zero-sized source rectangle throws INDEX_SIZE_ERR -->
 <canvas height="50" id="c128" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_drawImage_zerosource() {
 
 var canvas = document.getElementById('c128');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 var _thrown = undefined; try {
@@ -3755,17 +3586,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 <img class="resource" id="red_14.png" src="image_red.png">
 
 <!-- [[[ test_2d.fillRect.basic.html ]]] -->
 
 <p>Canvas test: 2d.fillRect.basic</p>
 <canvas height="50" id="c129" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillRect_basic() {
 
 var canvas = document.getElementById('c129');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 isPixel(ctx, 50,25, 0,255,0,255, 0);
@@ -3775,17 +3605,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillRect.clip.html ]]] -->
 
 <p>Canvas test: 2d.fillRect.clip</p>
 <canvas height="50" id="c130" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillRect_clip() {
 
 var canvas = document.getElementById('c130');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -3806,17 +3635,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillRect.negative.html ]]] -->
 
 <p>Canvas test: 2d.fillRect.negative</p>
 <canvas height="50" id="c131" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillRect_negative() {
 
 var canvas = document.getElementById('c131');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -3835,25 +3663,21 @@ isPixel(ctx, 75,37, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.fillRect.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.fillRect.nonfinite</p>
 <!-- Testing: fillRect() with Infinity/NaN is ignored -->
 <canvas height="50" id="c132" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillRect_nonfinite() {
 
 var canvas = document.getElementById('c132');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(Infinity, 0, 100, 50);
 ctx.fillRect(-Infinity, 0, 100, 50);
 ctx.fillRect(NaN, 0, 100, 50);
 ctx.fillRect(0, Infinity, 100, 50);
@@ -3874,32 +3698,26 @@ ctx.fillRect(Infinity, 0, Infinity, Infi
 ctx.fillRect(Infinity, 0, 100, Infinity);
 ctx.fillRect(0, Infinity, Infinity, 50);
 ctx.fillRect(0, Infinity, Infinity, Infinity);
 ctx.fillRect(0, Infinity, 100, Infinity);
 ctx.fillRect(0, 0, Infinity, Infinity);
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.fillRect.path.html ]]] -->
 
 <p>Canvas test: 2d.fillRect.path</p>
 <canvas height="50" id="c133" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillRect_path() {
 
 var canvas = document.getElementById('c133');
 var ctx = canvas.getContext('2d');
 
 ctx.beginPath();
 ctx.rect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -3913,17 +3731,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillRect.shadow.html ]]] -->
 
 <p>Canvas test: 2d.fillRect.shadow</p>
 <canvas height="50" id="c134" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillRect_shadow() {
 
 var canvas = document.getElementById('c134');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -3948,17 +3765,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillRect.transform.html ]]] -->
 
 <p>Canvas test: 2d.fillRect.transform</p>
 <canvas height="50" id="c135" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillRect_transform() {
 
 var canvas = document.getElementById('c135');
 var ctx = canvas.getContext('2d');
 
 ctx.scale(10, 10);
 ctx.translate(0, 5);
 ctx.fillStyle = '#0f0';
@@ -3970,17 +3786,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillRect.zero.html ]]] -->
 
 <p>Canvas test: 2d.fillRect.zero</p>
 <canvas height="50" id="c136" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillRect_zero() {
 
 var canvas = document.getElementById('c136');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -4065,17 +3880,16 @@ is(ctx.fillStyle, 'rgba(0, 0, 0, 0)', "c
 </script>
 
 <!-- [[[ test_2d.fillStyle.invalidstring.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.invalidstring</p>
 <canvas height="50" id="c141" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_invalidstring() {
 
 var canvas = document.getElementById('c141');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -4088,17 +3902,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.invalidtype.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.invalidtype</p>
 <canvas height="50" id="c142" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_invalidtype() {
 
 var canvas = document.getElementById('c142');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -4112,18 +3925,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.fillStyle.parse.current.basic.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.current.basic</p>
 <!-- Testing: currentColor is computed from the canvas element -->
 <canvas height="50" id="c143" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_fillStyle_parse_current_basic() {
 
 var canvas = document.getElementById('c143');
 var ctx = canvas.getContext('2d');
 
 canvas.setAttribute('style', 'color: #0f0');
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'currentColor';
@@ -4136,18 +3947,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.fillStyle.parse.current.changed.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.current.changed</p>
 <!-- Testing: currentColor is computed when the attribute is set, not when it is painted -->
 <canvas height="50" id="c144" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_fillStyle_parse_current_changed() {
 
 var canvas = document.getElementById('c144');
 var ctx = canvas.getContext('2d');
 
 canvas.setAttribute('style', 'color: #0f0');
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'currentColor';
@@ -4161,18 +3970,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.fillStyle.parse.current.removed.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.current.removed</p>
 <!-- Testing: currentColor is solid black when the canvas element is not in a document -->
 <canvas height="50" id="c145" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_fillStyle_parse_current_removed() {
 
 var canvas = document.getElementById('c145');
 var ctx = canvas.getContext('2d');
 
 // Try not to let it undetectably incorrectly pick up opaque-black
 // from other parts of the document:
 document.body.parentNode.setAttribute('style', 'color: #f00');
@@ -4196,17 +4003,16 @@ isPixel(ctx, 50,25, 0,0,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hex3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hex3</p>
 <canvas height="50" id="c146" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hex3() {
 
 var canvas = document.getElementById('c146');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = '#0f0';
@@ -4218,17 +4024,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hex6.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hex6</p>
 <canvas height="50" id="c147" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hex6() {
 
 var canvas = document.getElementById('c147');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = '#00fF00';
@@ -4240,17 +4045,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-1</p>
 <canvas height="50" id="c148" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_1() {
 
 var canvas = document.getElementById('c148');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl(120, 100%, 50%)';
@@ -4262,17 +4066,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-2</p>
 <canvas height="50" id="c149" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_2() {
 
 var canvas = document.getElementById('c149');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl( -240 , 100% , 50% )';
@@ -4284,17 +4087,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-3</p>
 <canvas height="50" id="c150" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_3() {
 
 var canvas = document.getElementById('c150');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl(360120, 100%, 50%)';
@@ -4306,17 +4108,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-4.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-4</p>
 <canvas height="50" id="c151" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_4() {
 
 var canvas = document.getElementById('c151');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl(-360240, 100%, 50%)';
@@ -4328,17 +4129,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-5.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-5</p>
 <canvas height="50" id="c152" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_5() {
 
 var canvas = document.getElementById('c152');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl(120.0, 100.0%, 50.0%)';
@@ -4350,17 +4150,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-clamp-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-clamp-1</p>
 <canvas height="50" id="c153" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_clamp_1() {
 
 var canvas = document.getElementById('c153');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl(120, 200%, 50%)';
@@ -4372,17 +4171,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-clamp-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-clamp-2</p>
 <canvas height="50" id="c154" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_clamp_2() {
 
 var canvas = document.getElementById('c154');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl(120, -200%, 49.9%)';
@@ -4394,17 +4192,16 @@ isPixel(ctx, 50,25, 127,127,127,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-clamp-3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-clamp-3</p>
 <canvas height="50" id="c155" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_clamp_3() {
 
 var canvas = document.getElementById('c155');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl(120, 100%, 200%)';
@@ -4416,17 +4213,16 @@ isPixel(ctx, 50,25, 255,255,255,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsl-clamp-4.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsl-clamp-4</p>
 <canvas height="50" id="c156" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsl_clamp_4() {
 
 var canvas = document.getElementById('c156');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsl(120, 100%, -200%)';
@@ -4438,17 +4234,16 @@ isPixel(ctx, 50,25, 0,0,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsla-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsla-1</p>
 <canvas height="50" id="c157" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsla_1() {
 
 var canvas = document.getElementById('c157');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsla(120, 100%, 50%, 0.499)';
@@ -4460,17 +4255,16 @@ isPixel(ctx, 50,25, 0,255,0,127, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsla-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsla-2</p>
 <canvas height="50" id="c158" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsla_2() {
 
 var canvas = document.getElementById('c158');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsla( 120.0 , 100.0% , 50.0% , 1 )';
@@ -4482,17 +4276,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsla-clamp-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsla-clamp-1</p>
 <canvas height="50" id="c159" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsla_clamp_1() {
 
 var canvas = document.getElementById('c159');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsla(120, 200%, 50%, 1)';
@@ -4504,17 +4297,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsla-clamp-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsla-clamp-2</p>
 <canvas height="50" id="c160" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsla_clamp_2() {
 
 var canvas = document.getElementById('c160');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsla(120, -200%, 49.9%, 1)';
@@ -4526,17 +4318,16 @@ isPixel(ctx, 50,25, 127,127,127,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsla-clamp-3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsla-clamp-3</p>
 <canvas height="50" id="c161" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsla_clamp_3() {
 
 var canvas = document.getElementById('c161');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsla(120, 100%, 200%, 1)';
@@ -4548,17 +4339,16 @@ isPixel(ctx, 50,25, 255,255,255,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsla-clamp-4.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsla-clamp-4</p>
 <canvas height="50" id="c162" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsla_clamp_4() {
 
 var canvas = document.getElementById('c162');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsla(120, 100%, -200%, 1)';
@@ -4570,17 +4360,16 @@ isPixel(ctx, 50,25, 0,0,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsla-clamp-5.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsla-clamp-5</p>
 <canvas height="50" id="c163" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsla_clamp_5() {
 
 var canvas = document.getElementById('c163');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsla(120, 100%, 50%, 2)';
@@ -4592,17 +4381,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.hsla-clamp-6.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.hsla-clamp-6</p>
 <canvas height="50" id="c164" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_hsla_clamp_6() {
 
 var canvas = document.getElementById('c164');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'hsla(120, 100%, 0%, -2)';
@@ -4614,17 +4402,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.html4.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.html4</p>
 <canvas height="50" id="c165" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_html4() {
 
 var canvas = document.getElementById('c165');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'limE';
@@ -4636,17 +4423,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hex3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hex3</p>
 <canvas height="50" id="c166" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hex3() {
 
 var canvas = document.getElementById('c166');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = '#g00'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4658,17 +4444,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hex6.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hex6</p>
 <canvas height="50" id="c167" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hex6() {
 
 var canvas = document.getElementById('c167');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = '#fg0000'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4680,17 +4465,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hsl-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hsl-1</p>
 <canvas height="50" id="c168" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hsl_1() {
 
 var canvas = document.getElementById('c168');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'hsl(0%, 100%, 50%)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4702,17 +4486,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hsl-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hsl-2</p>
 <canvas height="50" id="c169" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hsl_2() {
 
 var canvas = document.getElementById('c169');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'hsl(z, 100%, 50%)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4724,17 +4507,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hsl-3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hsl-3</p>
 <canvas height="50" id="c170" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hsl_3() {
 
 var canvas = document.getElementById('c170');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'hsl(0, 0, 50%)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4746,17 +4528,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hsl-4.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hsl-4</p>
 <canvas height="50" id="c171" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hsl_4() {
 
 var canvas = document.getElementById('c171');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'hsl(0, 100%, 0)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4768,17 +4549,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hsl-5.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hsl-5</p>
 <canvas height="50" id="c172" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hsl_5() {
 
 var canvas = document.getElementById('c172');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'hsl(0, 100%, 100%, 1)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4790,17 +4570,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hsla-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hsla-1</p>
 <canvas height="50" id="c173" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hsla_1() {
 
 var canvas = document.getElementById('c173');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'hsla(0%, 100%, 50%, 1)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4812,17 +4591,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.hsla-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.hsla-2</p>
 <canvas height="50" id="c174" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_hsla_2() {
 
 var canvas = document.getElementById('c174');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'hsla(0, 0, 50%, 1)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4834,80 +4612,79 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.name-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.name-1</p>
 <canvas height="50" id="c174a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_name_1() {
 
 var canvas = document.getElementById('c174a');
 var ctx = canvas.getContext('2d');
 
+
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'darkbrown'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
 ctx.fillRect(0, 0, 100, 50);
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.name-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.name-2</p>
 <canvas height="50" id="c174b" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_name_2() {
 
 var canvas = document.getElementById('c174b');
 var ctx = canvas.getContext('2d');
 
+
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'firebrick1'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
 ctx.fillRect(0, 0, 100, 50);
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.name-3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.name-3</p>
 <canvas height="50" id="c174c" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_name_3() {
 
 var canvas = document.getElementById('c174c');
 var ctx = canvas.getContext('2d');
 
+
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'red blue'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
 ctx.fillRect(0, 0, 100, 50);
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgb-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgb-1</p>
 <canvas height="50" id="c175" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgb_1() {
 
 var canvas = document.getElementById('c175');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgb(255.0, 0, 0)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4919,17 +4696,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgb-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgb-2</p>
 <canvas height="50" id="c176" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgb_2() {
 
 var canvas = document.getElementById('c176');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgb(255, 0.0, 0)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4941,17 +4717,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgb-3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgb-3</p>
 <canvas height="50" id="c177" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgb_3() {
 
 var canvas = document.getElementById('c177');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgb(255.0, 0, 0,)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4963,17 +4738,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgb-4.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgb-4</p>
 <canvas height="50" id="c178" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgb_4() {
 
 var canvas = document.getElementById('c178');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgb(100%, 0, 0)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -4985,17 +4759,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgb-5.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgb-5</p>
 <canvas height="50" id="c179" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgb_5() {
 
 var canvas = document.getElementById('c179');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgb(255 0 0)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -5007,17 +4780,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgb-6.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgb-6</p>
 <canvas height="50" id="c180" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgb_6() {
 
 var canvas = document.getElementById('c180');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgb(255, - 1, 0)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -5029,17 +4801,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgb-7.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgb-7</p>
 <canvas height="50" id="c181" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgb_7() {
 
 var canvas = document.getElementById('c181');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgb(255, 0, 0, 1)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -5051,17 +4822,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgba-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgba-1</p>
 <canvas height="50" id="c182" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgba_1() {
 
 var canvas = document.getElementById('c182');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgba(255, 0, 0)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -5073,17 +4843,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgba-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgba-2</p>
 <canvas height="50" id="c183" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgba_2() {
 
 var canvas = document.getElementById('c183');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgba(255.0, 0, 0, 1)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -5095,17 +4864,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgba-3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgba-3</p>
 <canvas height="50" id="c184" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgba_3() {
 
 var canvas = document.getElementById('c184');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgba(100%, 0, 0, 1)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -5117,17 +4885,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgba-4.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgba-4</p>
 <canvas height="50" id="c185" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgba_4() {
 
 var canvas = document.getElementById('c185');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgba(255, 0, 0, 100%)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -5139,17 +4906,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.invalid.rgba-5.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.invalid.rgba-5</p>
 <canvas height="50" id="c186" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_invalid_rgba_5() {
 
 var canvas = document.getElementById('c186');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#0f0';
 try { ctx.fillStyle = 'rgba(255, 0, 0, 1. 0)'; } catch (e) { } // this shouldn't throw, but it shouldn't matter here if it does
@@ -5161,17 +4927,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgb-clamp-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgb-clamp-1</p>
 <canvas height="50" id="c187" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgb_clamp_1() {
 
 var canvas = document.getElementById('c187');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgb(-1000, 1000, -1000)';
@@ -5183,17 +4948,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgb-clamp-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgb-clamp-2</p>
 <canvas height="50" id="c188" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgb_clamp_2() {
 
 var canvas = document.getElementById('c188');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgb(-200%, 200%, -200%)';
@@ -5205,17 +4969,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgb-clamp-3.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgb-clamp-3</p>
 <canvas height="50" id="c189" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgb_clamp_3() {
 
 var canvas = document.getElementById('c189');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgb(-2147483649, 4294967298, -18446744073709551619)';
@@ -5227,17 +4990,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgb-clamp-4.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgb-clamp-4</p>
 <canvas height="50" id="c190" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgb_clamp_4() {
 
 var canvas = document.getElementById('c190');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgb(-1000000000000000000000000000000000000000, 1000000000000000000000000000000000000000, -1000000000000000000000000000000000000000)';
@@ -5249,17 +5011,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgb-clamp-5.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgb-clamp-5</p>
 <canvas height="50" id="c191" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgb_clamp_5() {
 
 var canvas = document.getElementById('c191');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgb
@@ -5271,17 +5032,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgb-num.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgb-num</p>
 <canvas height="50" id="c192" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgb_num() {
 
 var canvas = document.getElementById('c192');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgb(0,255,0)';
@@ -5293,17 +5053,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgb-percent.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgb-percent</p>
 <canvas height="50" id="c193" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgb_percent() {
 
 var canvas = document.getElementById('c193');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgb(0% ,100% ,0%)';
@@ -5315,17 +5074,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgba-clamp-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgba-clamp-1</p>
 <canvas height="50" id="c194" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgba_clamp_1() {
 
 var canvas = document.getElementById('c194');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgba(0, 255, 0, -2)';
@@ -5337,17 +5095,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgba-clamp-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgba-clamp-2</p>
 <canvas height="50" id="c195" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgba_clamp_2() {
 
 var canvas = document.getElementById('c195');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgba(0, 255, 0, 2)';
@@ -5359,17 +5116,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgba-num-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgba-num-1</p>
 <canvas height="50" id="c196" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgba_num_1() {
 
 var canvas = document.getElementById('c196');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgba(  0  ,  255  ,  0  ,  .499  )';
@@ -5381,17 +5137,16 @@ isPixel(ctx, 50,25, 0,255,0,127, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgba-num-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgba-num-2</p>
 <canvas height="50" id="c197" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgba_num_2() {
 
 var canvas = document.getElementById('c197');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgba(  0  ,  255  ,  0  ,  0.499  )';
@@ -5403,17 +5158,16 @@ isPixel(ctx, 50,25, 0,255,0,127, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgba-percent.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgba-percent</p>
 <canvas height="50" id="c198" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgba_percent() {
 
 var canvas = document.getElementById('c198');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgba(0%,100%,0%,0.499)';
@@ -5425,17 +5179,16 @@ isPixel(ctx, 50,25, 0,255,0,127, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgba-solid-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgba-solid-1</p>
 <canvas height="50" id="c199" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgba_solid_1() {
 
 var canvas = document.getElementById('c199');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgba(  0  ,  255  ,  0  ,  1  )';
@@ -5447,17 +5200,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.rgba-solid-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.rgba-solid-2</p>
 <canvas height="50" id="c200" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_rgba_solid_2() {
 
 var canvas = document.getElementById('c200');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'rgba(  0  ,  255  ,  0  ,  1.0  )';
@@ -5469,17 +5221,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.svg-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.svg-1</p>
 <canvas height="50" id="c201" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_svg_1() {
 
 var canvas = document.getElementById('c201');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'gray';
@@ -5491,17 +5242,16 @@ isPixel(ctx, 50,25, 128,128,128,255, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.svg-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.svg-2</p>
 <canvas height="50" id="c202" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_svg_2() {
 
 var canvas = document.getElementById('c202');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'grey';
@@ -5533,17 +5283,16 @@ ok(/^#(?!(FF0000|ff0000|f00)$)/.test(ctx
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.transparent-1.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.transparent-1</p>
 <canvas height="50" id="c204" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_transparent_1() {
 
 var canvas = document.getElementById('c204');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'transparent';
@@ -5555,17 +5304,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.fillStyle.parse.transparent-2.html ]]] -->
 
 <p>Canvas test: 2d.fillStyle.parse.transparent-2</p>
 <canvas height="50" id="c205" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_fillStyle_parse_transparent_2() {
 
 var canvas = document.getElementById('c205');
 var ctx = canvas.getContext('2d');
 
 
 ctx.fillStyle = '#f00';
 ctx.fillStyle = 'TrAnSpArEnT';
@@ -5596,17 +5344,16 @@ ok(canvas.getContext('2d') !== null, "ca
 
 <!-- [[[ test_2d.getcontext.shared.html ]]] -->
 
 <p>Canvas test: 2d.getcontext.shared</p>
 <!-- Testing: getContext('2d') returns objects which share canvas state -->
 <canvas height="50" id="c207" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_getcontext_shared() {
 
 var canvas = document.getElementById('c207');
 var ctx = canvas.getContext('2d');
 
 var ctx2 = canvas.getContext('2d');
 ctx.fillStyle = '#f00';
 ctx2.fillStyle = '#0f0';
@@ -5636,17 +5383,16 @@ ok(canvas.getContext('2d') === canvas.ge
 </script>
 
 <!-- [[[ test_2d.gradient.empty.html ]]] -->
 
 <p>Canvas test: 2d.gradient.empty</p>
 <canvas height="50" id="c209" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_empty() {
 
 var canvas = document.getElementById('c209');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 var g = ctx.createLinearGradient(0, 0, 0, 50);
@@ -5659,17 +5405,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.alpha.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.alpha</p>
 <canvas height="50" id="c210" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_alpha() {
 
 var canvas = document.getElementById('c210');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#ff0';
 ctx.fillRect(0, 0, 100, 50);
 var g = ctx.createLinearGradient(0, 0, 100, 0);
@@ -5686,17 +5431,16 @@ isPixel(ctx, 75,25, 63,63,191,255, 3);
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.colour.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.colour</p>
 <canvas height="50" id="c211" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_colour() {
 
 var canvas = document.getElementById('c211');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createLinearGradient(0, 0, 100, 0);
 g.addColorStop(0, '#ff0');
 g.addColorStop(1, '#00f');
@@ -5711,17 +5455,16 @@ isPixel(ctx, 75,25, 63,63,191,255, 3);
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.colouralpha.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.colouralpha</p>
 <canvas height="50" id="c212" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_colouralpha() {
 
 var canvas = document.getElementById('c212');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createLinearGradient(0, 0, 100, 0);
 g.addColorStop(0, 'rgba(255,255,0, 0)');
 g.addColorStop(1, 'rgba(0,0,255, 1)');
@@ -5736,17 +5479,16 @@ isPixel(ctx, 75,25, 63,63,191,191, 3);
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.multiple.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.multiple</p>
 <canvas height="50" id="c213" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_multiple() {
 
 var canvas = document.getElementById('c213');
 var ctx = canvas.getContext('2d');
 
 canvas.width = 200;
 var g = ctx.createLinearGradient(0, 0, 200, 0);
 g.addColorStop(0, '#ff0');
@@ -5763,17 +5505,16 @@ isPixel(ctx, 150,25, 127,127,255,255, 3)
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.outside.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.outside</p>
 <canvas height="50" id="c214" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_outside() {
 
 var canvas = document.getElementById('c214');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -5792,17 +5533,16 @@ isPixel(ctx, 80,25, 0,255,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.overlap.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.overlap</p>
 <canvas height="50" id="c215" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_overlap() {
 
 var canvas = document.getElementById('c215');
 var ctx = canvas.getContext('2d');
 
 if (!IsD2DEnabled() && !IsMacOSX10_5orOlder()) {
     // On D2D the different nature of how gradients
     // are drawn makes it so we cannot guarantee these stops are completely
@@ -5840,17 +5580,16 @@ if (!IsD2DEnabled() && !IsMacOSX10_5orOl
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.overlap2.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.overlap2</p>
 <canvas height="50" id="c216" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_overlap2() {
 
 var canvas = document.getElementById('c216');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createLinearGradient(0, 0, 100, 0);
 var ps = [ 0, 1/10, 1/4, 1/3, 1/2, 3/4, 1 ];
 for (var p = 0; p < ps.length; ++p)
@@ -5876,17 +5615,16 @@ if (!IsMacOSX10_5orOlder()) {
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.solid.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.solid</p>
 <canvas height="50" id="c217" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_solid() {
 
 var canvas = document.getElementById('c217');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createLinearGradient(0, 0, 100, 0);
 g.addColorStop(0, '#0f0');
 g.addColorStop(1, '#0f0');
@@ -5899,17 +5637,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.vertical.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.vertical</p>
 <canvas height="50" id="c218" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_interpolate_vertical() {
 
 var canvas = document.getElementById('c218');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createLinearGradient(0, 0, 0, 50);
 g.addColorStop(0, '#ff0');
 g.addColorStop(1, '#00f');
@@ -5924,34 +5661,32 @@ isPixel(ctx, 50,37, 63,63,191,255, 10);
 </script>
 
 <!-- [[[ test_2d.gradient.interpolate.zerosize.html ]]] -->
 
 <p>Canvas test: 2d.gradient.interpolate.zerosize</p>
 <canvas height="50" id="c219" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_interpolate_zerosize() {
 
 var canvas = document.getElementById('c219');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
 var g = ctx.createLinearGradient(50, 25, 50, 25); // zero-length line (undefined direction)
 g.addColorStop(0, '#f00');
 g.addColorStop(1, '#f00');
 ctx.fillStyle = g;
 ctx.fillRect(0, 0, 100, 50);
-
 todo_isPixel(ctx, 40,20, 0,255,0,255, 2);
 
+
 }
 </script>
 
 <!-- [[[ test_2d.gradient.linear.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.gradient.linear.nonfinite</p>
 <!-- Testing: createLinearGradient() throws NOT_SUPPORTED_ERR if arguments are not finite -->
 <canvas height="50" id="c220" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
@@ -6038,17 +5773,16 @@ var _thrown = undefined; try {
 
 <!-- [[[ test_2d.gradient.linear.transform.1.html ]]] -->
 
 <p>Canvas test: 2d.gradient.linear.transform.1</p>
 <!-- Testing: Linear gradient coordinates are relative to the coordinate space at the time of filling -->
 <canvas height="50" id="c221" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_linear_transform_1() {
 
 var canvas = document.getElementById('c221');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createLinearGradient(0, 0, 200, 0);
 g.addColorStop(0, '#f00');
 g.addColorStop(0.25, '#0f0');
@@ -6067,17 +5801,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.gradient.linear.transform.2.html ]]] -->
 
 <p>Canvas test: 2d.gradient.linear.transform.2</p>
 <!-- Testing: Linear gradient coordinates are relative to the coordinate space at the time of filling -->
 <canvas height="50" id="c222" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_linear_transform_2() {
 
 var canvas = document.getElementById('c222');
 var ctx = canvas.getContext('2d');
 
 ctx.translate(100, 0);
 var g = ctx.createLinearGradient(0, 0, 200, 0);
 g.addColorStop(0, '#f00');
@@ -6097,36 +5830,35 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.gradient.linear.transform.3.html ]]] -->
 
 <p>Canvas test: 2d.gradient.linear.transform.3</p>
 <!-- Testing: Linear gradient transforms do not experience broken caching effects -->
 <canvas height="50" id="c223" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_linear_transform_3() {
 
 var canvas = document.getElementById('c223');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createLinearGradient(0, 0, 200, 0);
 g.addColorStop(0, '#f00');
 g.addColorStop(0.25, '#0f0');
 g.addColorStop(0.75, '#0f0');
 g.addColorStop(1, '#f00');
 ctx.fillStyle = g;
 ctx.fillRect(0, 0, 100, 50);
 ctx.translate(-50, 0);
 ctx.fillRect(50, 0, 100, 50);
-
 isPixel(ctx, 25,25, 0,255,0,255, 0);
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 75,25, 0,255,0,255, 0);
+
+
 }
 </script>
 
 <!-- [[[ test_2d.gradient.object.compare.html ]]] -->
 
 <p>Canvas test: 2d.gradient.object.compare</p>
 <canvas height="50" id="c224" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
@@ -6147,17 +5879,16 @@ ok(ctx.fillStyle === g1, "ctx.fillStyle 
 </script>
 
 <!-- [[[ test_2d.gradient.object.crosscanvas.html ]]] -->
 
 <p>Canvas test: 2d.gradient.object.crosscanvas</p>
 <canvas height="50" id="c225" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_object_crosscanvas() {
 
 var canvas = document.getElementById('c225');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 var g = document.createElement('canvas').getContext('2d').createLinearGradient(0, 0, 100, 0);
@@ -6272,17 +6003,16 @@ ok(window.CanvasGradient.prototype.addCo
 </script>
 
 <!-- [[[ test_2d.gradient.object.update.html ]]] -->
 
 <p>Canvas test: 2d.gradient.object.update</p>
 <canvas height="50" id="c230" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_object_update() {
 
 var canvas = document.getElementById('c230');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createLinearGradient(-100, 0, 200, 0);
 g.addColorStop(0, '#f00');
 g.addColorStop(1, '#f00');
@@ -6297,18 +6027,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.cone.behind.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.behind</p>
 <canvas height="50" id="c231" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_cone_behind() {
 
 var canvas = document.getElementById('c231');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6333,18 +6061,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.cone.beside.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.beside</p>
 <canvas height="50" id="c232" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_cone_beside() {
 
 var canvas = document.getElementById('c232');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6369,17 +6095,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.cone.bottom.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.bottom</p>
 <canvas height="50" id="c233" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_cone_bottom() {
 
 var canvas = document.getElementById('c233');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6404,17 +6129,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.cone.cylinder.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.cylinder</p>
 <canvas height="50" id="c234" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_cone_cylinder() {
 
 var canvas = document.getElementById('c234');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6438,17 +6162,16 @@ isPixel(ctx, 98, 48, 0, 255, 0, 255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.cone.front.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.front</p>
 <canvas height="50" id="c235" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_cone_front() {
 
 var canvas = document.getElementById('c235');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6473,17 +6196,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.cone.shape1.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.shape1</p>
 <canvas height="50" id="c236" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_cone_shape1() {
 
 var canvas = document.getElementById('c236');
 var ctx = canvas.getContext('2d');
 
 var tol = 1; // tolerance to avoid antialiasing artifacts
 
 ctx.fillStyle = '#0f0';
@@ -6517,18 +6239,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.cone.shape2.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.shape2</p>
 <canvas height="50" id="c237" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_cone_shape2() {
 
 var canvas = document.getElementById('c237');
 var ctx = canvas.getContext('2d');
 
 var tol = 1; // tolerance to avoid antialiasing artifacts
 
 ctx.fillStyle = '#0f0';
@@ -6562,17 +6282,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.cone.top.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.cone.top</p>
 <canvas height="50" id="c238" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_cone_top() {
 
 var canvas = document.getElementById('c238');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6596,18 +6315,16 @@ isPixel(ctx, 98, 48, 0, 255, 0, 255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.equal.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.equal</p>
 <canvas height="50" id="c239" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_equal() {
 
 var canvas = document.getElementById('c239');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6632,17 +6349,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.inside1.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.inside1</p>
 <canvas height="50" id="c240" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_inside1() {
 
 var canvas = document.getElementById('c240');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6667,17 +6383,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.inside2.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.inside2</p>
 <canvas height="50" id="c241" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_inside2() {
 
 var canvas = document.getElementById('c241');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -6702,17 +6417,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.inside3.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.inside3</p>
 <canvas height="50" id="c242" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_inside3() {
 
 var canvas = document.getElementById('c242');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -7006,17 +6720,16 @@ var _thrown = undefined; try {
 </script>
 
 <!-- [[[ test_2d.gradient.radial.outside1.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.outside1</p>
 <canvas height="50" id="c245" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_outside1() {
 
 var canvas = document.getElementById('c245');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -7041,18 +6754,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.outside2.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.outside2</p>
 <canvas height="50" id="c246" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_outside2() {
 
 var canvas = document.getElementById('c246');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -7077,18 +6788,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.outside3.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.outside3</p>
 <canvas height="50" id="c247" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_outside3() {
 
 var canvas = document.getElementById('c247');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -7114,18 +6823,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.touch1.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.touch1</p>
 <canvas height="50" id="c248" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_touch1() {
 
 var canvas = document.getElementById('c248');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -7150,18 +6857,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.touch2.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.touch2</p>
 <canvas height="50" id="c249" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_touch2() {
 
 var canvas = document.getElementById('c249');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -7188,18 +6893,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.gradient.radial.touch3.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.touch3</p>
 <canvas height="50" id="c250" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_touch3() {
 
 var canvas = document.getElementById('c250');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -7225,17 +6928,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.gradient.radial.transform.1.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.transform.1</p>
 <!-- Testing: Radial gradient coordinates are relative to the coordinate space at the time of filling -->
 <canvas height="50" id="c251" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_transform_1() {
 
 var canvas = document.getElementById('c251');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createRadialGradient(0, 0, 0, 0, 0, 11.2);
 g.addColorStop(0, '#0f0');
 g.addColorStop(0.5, '#0f0');
@@ -7255,17 +6957,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.gradient.radial.transform.2.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.transform.2</p>
 <!-- Testing: Radial gradient coordinates are relative to the coordinate space at the time of filling -->
 <canvas height="50" id="c252" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_gradient_radial_transform_2() {
 
 var canvas = document.getElementById('c252');
 var ctx = canvas.getContext('2d');
 
 ctx.translate(100, 0);
 var g = ctx.createRadialGradient(0, 0, 0, 0, 0, 11.2);
 g.addColorStop(0, '#0f0');
@@ -7286,38 +6987,36 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.gradient.radial.transform.3.html ]]] -->
 
 <p>Canvas test: 2d.gradient.radial.transform.3</p>
 <!-- Testing: Radial gradient transforms do not experience broken caching effects -->
 <canvas height="50" id="c253" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_gradient_radial_transform_3() {
 
 var canvas = document.getElementById('c253');
 var ctx = canvas.getContext('2d');
 
 var g = ctx.createRadialGradient(0, 0, 0, 0, 0, 11.2);
 g.addColorStop(0, '#0f0');
 g.addColorStop(0.5, '#0f0');
 g.addColorStop(0.51, '#f00');
 g.addColorStop(1, '#f00');
 ctx.fillStyle = g;
 ctx.fillRect(0, 0, 100, 50);
 ctx.translate(50, 25);
 ctx.scale(10, 10);
 ctx.fillRect(-5, -2.5, 10, 5);
-
 isPixel(ctx, 25,25, 0,255,0,255, 0);
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 75,25, 0,255,0,255, 0);
 
+
 }
 </script>
 
 <!-- [[[ test_2d.imageData.create.basic.html ]]] -->
 
 <p>Canvas test: 2d.imageData.create.basic - bug 433004</p>
 <!-- Testing: createImageData() exists and returns something -->
 <canvas height="50" id="c254" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
@@ -7414,18 +7113,16 @@ ok(isTransparentBlack, "isTransparentBla
 <canvas height="50" id="c256" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_imageData_create_large() {
 
 var canvas = document.getElementById('c256');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-
 var imgdata = ctx.createImageData(1000, 2000);
 ok(imgdata.data.length == imgdata.width*imgdata.height*4, "imgdata.data.length == imgdata.width*imgdata.height*4");
 ok(imgdata.width < imgdata.height, "imgdata.width < imgdata.height");
 ok(imgdata.width > 0, "imgdata.width > 0");
 var isTransparentBlack = true;
 for (var i = 0; i < imgdata.data.length; i += 7813) // check ~1024 points (assuming normal scaling)
     if (imgdata.data[i] !== 0)
         isTransparentBlack = false;
@@ -7442,32 +7139,24 @@ ok(isTransparentBlack, "isTransparentBla
 <canvas height="50" id="c257" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_imageData_create_negative() {
 
 var canvas = document.getElementById('c257');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 var imgdata1 = ctx.createImageData(10, 20);
 var imgdata2 = ctx.createImageData(-10, 20);
 var imgdata3 = ctx.createImageData(10, -20);
 var imgdata4 = ctx.createImageData(-10, -20);
 ok(imgdata1.data.length == imgdata2.data.length, "imgdata1.data.length == imgdata2.data.length");
 ok(imgdata2.data.length == imgdata3.data.length, "imgdata2.data.length == imgdata3.data.length");
 ok(imgdata3.data.length == imgdata4.data.length, "imgdata3.data.length == imgdata4.data.length");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.imageData.create.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.imageData.create.nonfinite - bug 433004</p>
 <!-- Testing: createImageData() throws NOT_SUPPORTED_ERR if arguments are not finite -->
@@ -7533,18 +7222,16 @@ var _thrown = undefined; try {
 <canvas height="50" id="c259" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_imageData_create_round() {
 
 var canvas = document.getElementById('c259');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-
 var imgdata1 = ctx.createImageData(10.01, 10.99);
 var imgdata2 = ctx.getImageData(0, 0, 10.01, 10.99);
 is(imgdata1.width, imgdata2.width, "imgdata1.width == imgdata2.width");
 is(imgdata1.height, imgdata2.height, "imgdata1.height == imgdata2.height");
 
 
 }
 </script>
@@ -7556,34 +7243,26 @@ is(imgdata1.height, imgdata2.height, "im
 <canvas height="50" id="c260" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_imageData_create_tiny() {
 
 var canvas = document.getElementById('c260');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 var imgdata = ctx.createImageData(0.0001, 0.0001);
 ok(imgdata.data.length == imgdata.width*imgdata.height*4, "imgdata.data.length == imgdata.width*imgdata.height*4");
 ok(imgdata.width == 1, "imgdata.width == 1");
 ok(imgdata.height == 1, "imgdata.height == 1");
 var isTransparentBlack = true;
 for (var i = 0; i < imgdata.data.length; ++i)
     if (imgdata.data[i] !== 0)
         isTransparentBlack = false;
 ok(isTransparentBlack, "isTransparentBlack");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.imageData.create.type.html ]]] -->
 
 <p>Canvas test: 2d.imageData.create.type - bug 433004</p>
 <!-- Testing: createImageData() returns an ImageData object containing a Uint8ClampedArray object -->
@@ -8070,19 +7749,16 @@ ok(imgdata2.data[3] === 0, "imgdata2.dat
 <canvas height="50" id="c273" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_imageData_get_source_outside() {
 
 var canvas = document.getElementById('c273');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#08f';
 ctx.fillRect(0, 0, 100, 50);
 
 var imgdata1 = ctx.getImageData(-10, 5, 1, 1);
 ok(imgdata1.data[0] === 0, "imgdata1.data[\""+(0)+"\"] === 0");
 ok(imgdata1.data[1] === 0, "imgdata1.data[\""+(1)+"\"] === 0");
 ok(imgdata1.data[2] === 0, "imgdata1.data[\""+(2)+"\"] === 0");
 ok(imgdata1.data[3] === 0, "imgdata1.data[\""+(3)+"\"] === 0");
@@ -8134,21 +7810,16 @@ ok(imgdata7.data[19*4+0] === 0, "imgdata
 ok(imgdata7.data[19*4+1] === 136, "imgdata7.data[19*4+1] === 136");
 ok(imgdata7.data[19*4+2] === 255, "imgdata7.data[19*4+2] === 255");
 ok(imgdata7.data[19*4+3] === 255, "imgdata7.data[19*4+3] === 255");
 ok(imgdata7.data[20*4+0] === 0, "imgdata7.data[20*4+0] === 0");
 ok(imgdata7.data[20*4+1] === 0, "imgdata7.data[20*4+1] === 0");
 ok(imgdata7.data[20*4+2] === 0, "imgdata7.data[20*4+2] === 0");
 ok(imgdata7.data[20*4+3] === 0, "imgdata7.data[20*4+3] === 0");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.imageData.get.source.size.html ]]] -->
 
 <p>Canvas test: 2d.imageData.get.source.size</p>
 <!-- Testing: getImageData() returns bigger ImageData for bigger source rectangle -->
@@ -8176,29 +7847,21 @@ ok(imgdata2.height > imgdata1.height, "i
 <canvas height="50" id="c275" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_imageData_get_tiny() {
 
 var canvas = document.getElementById('c275');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 var imgdata = ctx.getImageData(0, 0, 0.0001, 0.0001);
 ok(imgdata.data.length == imgdata.width*imgdata.height*4, "imgdata.data.length == imgdata.width*imgdata.height*4");
 ok(imgdata.width == 1, "imgdata.width == 1");
 ok(imgdata.height == 1, "imgdata.height == 1");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.imageData.get.type.html ]]] -->
 
 <p>Canvas test: 2d.imageData.get.type</p>
 <!-- Testing: getImageData() returns an ImageData object containing a Uint8ClampedArray object -->
@@ -8224,17 +7887,16 @@ ok(imgdata.data.thisImplementsUint8Clamp
 
 <!-- [[[ test_2d.imageData.get.unaffected.html ]]] -->
 
 <p>Canvas test: 2d.imageData.get.unaffected</p>
 <!-- Testing: getImageData() is not affected by context state -->
 <canvas height="50" id="c277" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_get_unaffected() {
 
 var canvas = document.getElementById('c277');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 50, 50)
 ctx.fillStyle = '#f00';
@@ -8537,17 +8199,16 @@ ok(imgdata.data[0] === 0, "imgdata.data[
 
 <!-- [[[ test_2d.imageData.put.alpha.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.alpha</p>
 <!-- Testing: putImageData() puts non-solid image data correctly -->
 <canvas height="50" id="c288" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_alpha() {
 
 var canvas = document.getElementById('c288');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = 'rgba(0, 255, 0, 0.25)';
 ctx.fillRect(0, 0, 100, 50)
 var imgdata = ctx.getImageData(0, 0, 100, 50);
@@ -8562,17 +8223,16 @@ isPixel(ctx, 50,25, 0,255,0,64, 2);
 
 <!-- [[[ test_2d.imageData.put.basic.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.basic</p>
 <!-- Testing: putImageData() puts image data from getImageData() onto the canvas -->
 <canvas height="50" id="c289" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_basic() {
 
 var canvas = document.getElementById('c289');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50)
 var imgdata = ctx.getImageData(0, 0, 100, 50);
@@ -8587,18 +8247,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 
 <!-- [[[ test_2d.imageData.put.clip.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.clip - bug 433397</p>
 <!-- Testing: putImageData() is not affected by clipping regions -->
 <canvas height="50" id="c290" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_imageData_put_clip() {
 
 var canvas = document.getElementById('c290');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50)
 var imgdata = ctx.getImageData(0, 0, 100, 50);
@@ -8617,17 +8275,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 2);
 
 <!-- [[[ test_2d.imageData.put.created.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.created - bug 433004</p>
 <!-- Testing: putImageData() puts image data from createImageData() onto the canvas -->
 <canvas height="50" id="c291" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_created() {
 
 var canvas = document.getElementById('c291');
 var ctx = canvas.getContext('2d');
 
 var imgdata = ctx.createImageData(100, 50);
 for (var i = 0; i < imgdata.data.length; i += 4) {
     imgdata.data[i] = 0;
@@ -8646,17 +8303,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 
 <!-- [[[ test_2d.imageData.put.cross.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.cross</p>
 <!-- Testing: putImageData() accepts image data got from a different canvas -->
 <canvas height="50" id="c292" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_cross() {
 
 var canvas = document.getElementById('c292');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 var ctx2 = canvas2.getContext('2d');
 ctx2.fillStyle = '#0f0';
@@ -8673,25 +8329,21 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 
 <!-- [[[ test_2d.imageData.put.dirty.negative.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.dirty.negative</p>
 <!-- Testing: putImageData() handles negative-sized dirty rectangles correctly -->
 <canvas height="50" id="c293" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_dirty_negative() {
 
 var canvas = document.getElementById('c293');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50)
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 20, 20)
 
 var imgdata = ctx.getImageData(0, 0, 100, 50);
 
 ctx.fillStyle = '#0f0';
@@ -8701,41 +8353,32 @@ ctx.fillRect(40, 20, 20, 20)
 ctx.putImageData(imgdata, 40, 20, 20, 20, -20, -20);
 
 isPixel(ctx, 50,25, 0,255,0,255, 2);
 isPixel(ctx, 35,25, 0,255,0,255, 2);
 isPixel(ctx, 65,25, 0,255,0,255, 2);
 isPixel(ctx, 50,15, 0,255,0,255, 2);
 isPixel(ctx, 50,45, 0,255,0,255, 2);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.imageData.put.dirty.outside.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.dirty.outside</p>
 <!-- Testing: putImageData() handles dirty rectangles outside the canvas correctly -->
 <canvas height="50" id="c294" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_dirty_outside() {
 
 var canvas = document.getElementById('c294');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50)
 
 var imgdata = ctx.getImageData(0, 0, 100, 50);
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50)
 
@@ -8747,41 +8390,32 @@ ctx.putImageData(imgdata, -30, 20, 0, 0,
 isPixel(ctx, 50,25, 0,255,0,255, 2);
 isPixel(ctx, 98,15, 0,255,0,255, 2);
 isPixel(ctx, 98,25, 0,255,0,255, 2);
 isPixel(ctx, 98,45, 0,255,0,255, 2);
 isPixel(ctx, 1,5, 0,255,0,255, 2);
 isPixel(ctx, 1,25, 0,255,0,255, 2);
 isPixel(ctx, 1,45, 0,255,0,255, 2);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.imageData.put.dirty.rect1.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.dirty.rect1</p>
 <!-- Testing: putImageData() only modifies areas inside the dirty rectangle, using width and height -->
 <canvas height="50" id="c295" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_dirty_rect1() {
 
 var canvas = document.getElementById('c295');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50)
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 20, 20)
 
 var imgdata = ctx.getImageData(0, 0, 100, 50);
 
 ctx.fillStyle = '#0f0';
@@ -8791,41 +8425,32 @@ ctx.fillRect(40, 20, 20, 20)
 ctx.putImageData(imgdata, 40, 20, 0, 0, 20, 20);
 
 isPixel(ctx, 50,25, 0,255,0,255, 2);
 isPixel(ctx, 35,25, 0,255,0,255, 2);
 isPixel(ctx, 65,25, 0,255,0,255, 2);
 isPixel(ctx, 50,15, 0,255,0,255, 2);
 isPixel(ctx, 50,45, 0,255,0,255, 2);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.imageData.put.dirty.rect2.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.dirty.rect2</p>
 <!-- Testing: putImageData() only modifies areas inside the dirty rectangle, using x and y -->
 <canvas height="50" id="c296" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_dirty_rect2() {
 
 var canvas = document.getElementById('c296');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50)
 ctx.fillStyle = '#0f0';
 ctx.fillRect(60, 30, 20, 20)
 
 var imgdata = ctx.getImageData(0, 0, 100, 50);
 
 ctx.fillStyle = '#0f0';
@@ -8835,34 +8460,27 @@ ctx.fillRect(40, 20, 20, 20)
 ctx.putImageData(imgdata, -20, -10, 60, 30, 20, 20);
 
 isPixel(ctx, 50,25, 0,255,0,255, 2);
 isPixel(ctx, 35,25, 0,255,0,255, 2);
 isPixel(ctx, 65,25, 0,255,0,255, 2);
 isPixel(ctx, 50,15, 0,255,0,255, 2);
 isPixel(ctx, 50,45, 0,255,0,255, 2);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.imageData.put.dirty.zero.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.dirty.zero</p>
 <!-- Testing: putImageData() with zero-sized dirty rectangle puts nothing -->
 <canvas height="50" id="c297" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_imageData_put_dirty_zero() {
 
 var canvas = document.getElementById('c297');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50)
 var imgdata = ctx.getImageData(0, 0, 100, 50);
@@ -8877,17 +8495,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 
 <!-- [[[ test_2d.imageData.put.modified.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.modified</p>
 <!-- Testing: putImageData() puts modified image data correctly -->
 <canvas height="50" id="c298" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_modified() {
 
 var canvas = document.getElementById('c298');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50)
 ctx.fillStyle = '#f00';
@@ -9191,17 +8808,16 @@ ok(_thrown && _thrown.name == "TypeError
 
 <!-- [[[ test_2d.imageData.put.path.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.path</p>
 <!-- Testing: putImageData() does not affect the current path -->
 <canvas height="50" id="c301" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_path() {
 
 var canvas = document.getElementById('c301');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50)
 ctx.rect(0, 0, 100, 50);
@@ -9217,17 +8833,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 
 <!-- [[[ test_2d.imageData.put.unaffected.html ]]] -->
 
 <p>Canvas test: 2d.imageData.put.unaffected</p>
 <!-- Testing: putImageData() is not affected by context state -->
 <canvas height="50" id="c302" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_imageData_put_unaffected() {
 
 var canvas = document.getElementById('c302');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50)
 var imgdata = ctx.getImageData(0, 0, 100, 50);
@@ -9312,17 +8927,16 @@ ok(_thrown && _thrown.name == "TypeError
 
 <!-- [[[ test_2d.line.cap.butt.html ]]] -->
 
 <p>Canvas test: 2d.line.cap.butt</p>
 <!-- Testing: lineCap 'butt' is rendered correctly -->
 <canvas height="50" id="c305" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_cap_butt() {
 
 var canvas = document.getElementById('c305');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -9365,17 +8979,16 @@ isPixel(ctx, 75,36, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.cap.closed.html ]]] -->
 
 <p>Canvas test: 2d.line.cap.closed</p>
 <!-- Testing: Line caps are not drawn at the corners of an unclosed rectangle -->
 <canvas height="50" id="c306" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_cap_closed() {
 
 var canvas = document.getElementById('c306');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.strokeStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
@@ -9408,19 +9021,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 <canvas height="50" id="c307" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_line_cap_invalid() {
 
 var canvas = document.getElementById('c307');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.lineCap = 'butt'
 ok(ctx.lineCap === 'butt', "ctx.lineCap === 'butt'");
 
 ctx.lineCap = 'butt';
 ctx.lineCap = 'invalid';
 ok(ctx.lineCap === 'butt', "ctx.lineCap === 'butt'");
 
 ctx.lineCap = 'butt';
@@ -9438,33 +9048,27 @@ ok(ctx.lineCap === 'butt', "ctx.lineCap 
 ctx.lineCap = 'butt';
 ctx.lineCap = "";
 ok(ctx.lineCap === 'butt', "ctx.lineCap === 'butt'");
 
 ctx.lineCap = 'butt';
 ctx.lineCap = 'bevel';
 ok(ctx.lineCap === 'butt', "ctx.lineCap === 'butt'");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.line.cap.open.html ]]] -->
 
 <p>Canvas test: 2d.line.cap.open</p>
 <!-- Testing: Line caps are drawn at the corners of an unclosed rectangle -->
 <canvas height="50" id="c308" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_cap_open() {
 
 var canvas = document.getElementById('c308');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.strokeStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -9492,17 +9096,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.cap.round.html ]]] -->
 
 <p>Canvas test: 2d.line.cap.round</p>
 <!-- Testing: lineCap 'round' is rendered correctly -->
 <canvas height="50" id="c309" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_cap_round() {
 
 var canvas = document.getElementById('c309');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -9561,17 +9164,16 @@ isPixel(ctx, 82,43, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.cap.square.html ]]] -->
 
 <p>Canvas test: 2d.line.cap.square</p>
 <!-- Testing: lineCap 'square' is rendered correctly -->
 <canvas height="50" id="c310" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_cap_square() {
 
 var canvas = document.getElementById('c310');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -9613,17 +9215,16 @@ isPixel(ctx, 75,46, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.line.cross.html ]]] -->
 
 <p>Canvas test: 2d.line.cross</p>
 <canvas height="50" id="c311" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_cross() {
 
 var canvas = document.getElementById('c311');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -9668,17 +9269,16 @@ ok(ctx.miterLimit === 10, "ctx.miterLimi
 
 <!-- [[[ test_2d.line.join.bevel.html ]]] -->
 
 <p>Canvas test: 2d.line.join.bevel</p>
 <!-- Testing: lineJoin 'bevel' is rendered correctly -->
 <canvas height="50" id="c313" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_join_bevel() {
 
 var canvas = document.getElementById('c313');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -9740,17 +9340,16 @@ isPixel(ctx, 86,14, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.join.closed.html ]]] -->
 
 <p>Canvas test: 2d.line.join.closed</p>
 <!-- Testing: Line joins are drawn at the corner of a closed rectangle -->
 <canvas height="50" id="c314" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_join_closed() {
 
 var canvas = document.getElementById('c314');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.strokeStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -9782,19 +9381,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 <canvas height="50" id="c315" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_line_join_invalid() {
 
 var canvas = document.getElementById('c315');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.lineJoin = 'bevel'
 ok(ctx.lineJoin === 'bevel', "ctx.lineJoin === 'bevel'");
 
 ctx.lineJoin = 'bevel';
 ctx.lineJoin = 'invalid';
 ok(ctx.lineJoin === 'bevel', "ctx.lineJoin === 'bevel'");
 
 ctx.lineJoin = 'bevel';
@@ -9812,33 +9408,27 @@ ok(ctx.lineJoin === 'bevel', "ctx.lineJo
 ctx.lineJoin = 'bevel';
 ctx.lineJoin = "";
 ok(ctx.lineJoin === 'bevel', "ctx.lineJoin === 'bevel'");
 
 ctx.lineJoin = 'bevel';
 ctx.lineJoin = 'butt';
 ok(ctx.lineJoin === 'bevel', "ctx.lineJoin === 'bevel'");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.line.join.miter.html ]]] -->
 
 <p>Canvas test: 2d.line.join.miter</p>
 <!-- Testing: lineJoin 'miter' is rendered correctly -->
 <canvas height="50" id="c316" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_join_miter() {
 
 var canvas = document.getElementById('c316');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -9891,17 +9481,16 @@ isPixel(ctx, 92,8, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.join.open.html ]]] -->
 
 <p>Canvas test: 2d.line.join.open</p>
 <!-- Testing: Line joins are not drawn at the corner of an unclosed rectangle -->
 <canvas height="50" id="c317" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_join_open() {
 
 var canvas = document.getElementById('c317');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.strokeStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
@@ -9928,17 +9517,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.join.parallel.html ]]] -->
 
 <p>Canvas test: 2d.line.join.parallel</p>
 <!-- Testing: Line joins are drawn at 180-degree joins -->
 <canvas height="50" id="c318" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_join_parallel() {
 
 var canvas = document.getElementById('c318');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -9962,17 +9550,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.join.round.html ]]] -->
 
 <p>Canvas test: 2d.line.join.round</p>
 <!-- Testing: lineJoin 'round' is rendered correctly -->
 <canvas height="50" id="c319" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_join_round() {
 
 var canvas = document.getElementById('c319');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10032,17 +9619,16 @@ isPixel(ctx, 88,12, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.miter.acute.html ]]] -->
 
 <p>Canvas test: 2d.line.miter.acute</p>
 <!-- Testing: Miter joins are drawn correctly with acute angles -->
 <canvas height="50" id="c320" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_miter_acute() {
 
 var canvas = document.getElementById('c320');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10076,17 +9662,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.miter.exceeded.html ]]] -->
 
 <p>Canvas test: 2d.line.miter.exceeded</p>
 <!-- Testing: Miter joins are not drawn when the miter limit is exceeded -->
 <canvas height="50" id="c321" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_miter_exceeded() {
 
 var canvas = document.getElementById('c321');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10117,19 +9702,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 <canvas height="50" id="c322" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_line_miter_invalid() {
 
 var canvas = document.getElementById('c322');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.miterLimit = 1.5;
 ok(ctx.miterLimit === 1.5, "ctx.miterLimit === 1.5");
 
 ctx.miterLimit = 1.5;
 ctx.miterLimit = 0;
 ok(ctx.miterLimit === 1.5, "ctx.miterLimit === 1.5");
 
 ctx.miterLimit = 1.5;
@@ -10143,33 +9725,27 @@ ok(ctx.miterLimit === 1.5, "ctx.miterLim
 ctx.miterLimit = 1.5;
 ctx.miterLimit = -Infinity;
 ok(ctx.miterLimit === 1.5, "ctx.miterLimit === 1.5");
 
 ctx.miterLimit = 1.5;
 ctx.miterLimit = NaN;
 ok(ctx.miterLimit === 1.5, "ctx.miterLimit === 1.5");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.line.miter.lineedge.html ]]] -->
 
 <p>Canvas test: 2d.line.miter.lineedge - bug 401791</p>
 <!-- Testing: Miter joins are not drawn when the miter limit is exceeded at the corners of a zero-height rectangle -->
 <canvas height="50" id="c323" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_miter_lineedge() {
 
 var canvas = document.getElementById('c323');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10192,27 +9768,24 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.miter.obtuse.html ]]] -->
 
 <p>Canvas test: 2d.line.miter.obtuse</p>
 <!-- Testing: Miter joins are drawn correctly with obtuse angles -->
 <canvas height="50" id="c324" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_miter_obtuse() {
 
 var canvas = document.getElementById('c324');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
-var x=800;
-var y=300;
 ctx.lineWidth = 1600;
 ctx.lineJoin = 'miter';
 
 ctx.strokeStyle = '#0f0';
 ctx.miterLimit = 1.083;
 ctx.beginPath();
 ctx.moveTo(800, 10000);
 ctx.lineTo(800, 300);
@@ -10238,17 +9811,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.miter.rightangle.html ]]] -->
 
 <p>Canvas test: 2d.line.miter.rightangle - bug 401791</p>
 <!-- Testing: Miter joins are not drawn when the miter limit is exceeded, on exact right angles -->
 <canvas height="50" id="c325" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_miter_rightangle() {
 
 var canvas = document.getElementById('c325');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10274,17 +9846,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.miter.within.html ]]] -->
 
 <p>Canvas test: 2d.line.miter.within</p>
 <!-- Testing: Miter joins are drawn when the miter limit is not quite exceeded -->
 <canvas height="50" id="c326" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_miter_within() {
 
 var canvas = document.getElementById('c326');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10309,17 +9880,16 @@ isPixel(ctx, 1,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.line.union.html ]]] -->
 
 <p>Canvas test: 2d.line.union</p>
 <canvas height="50" id="c327" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_union() {
 
 var canvas = document.getElementById('c327');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10347,17 +9917,16 @@ isPixel(ctx, 48,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.line.width.basic.html ]]] -->
 
 <p>Canvas test: 2d.line.width.basic</p>
 <!-- Testing: lineWidth determines the width of line strokes -->
 <canvas height="50" id="c328" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_width_basic() {
 
 var canvas = document.getElementById('c328');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10407,19 +9976,16 @@ isPixel(ctx, 86,25, 0,255,0,255, 0);
 <canvas height="50" id="c329" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_line_width_invalid() {
 
 var canvas = document.getElementById('c329');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.lineWidth = 1.5;
 ok(ctx.lineWidth === 1.5, "ctx.lineWidth === 1.5");
 
 ctx.lineWidth = 1.5;
 ctx.lineWidth = 0;
 ok(ctx.lineWidth === 1.5, "ctx.lineWidth === 1.5");
 
 ctx.lineWidth = 1.5;
@@ -10433,33 +9999,27 @@ ok(ctx.lineWidth === 1.5, "ctx.lineWidth
 ctx.lineWidth = 1.5;
 ctx.lineWidth = -Infinity;
 ok(ctx.lineWidth === 1.5, "ctx.lineWidth === 1.5");
 
 ctx.lineWidth = 1.5;
 ctx.lineWidth = NaN;
 ok(ctx.lineWidth === 1.5, "ctx.lineWidth === 1.5");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.line.width.transformed.html ]]] -->
 
 <p>Canvas test: 2d.line.width.transformed</p>
 <!-- Testing: Line stroke widths are affected by scale transformations -->
 <canvas height="50" id="c330" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_line_width_transformed() {
 
 var canvas = document.getElementById('c330');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -10799,17 +10359,16 @@ var _thrown = undefined; try {
 
 <!-- [[[ test_2d.path.arc.angle.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.angle.1</p>
 <!-- Testing: arc() draws pi/2 .. -pi anticlockwise correctly -->
 <canvas height="50" id="c332" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_angle_1() {
 
 var canvas = document.getElementById('c332');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -10825,17 +10384,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.angle.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.angle.2</p>
 <!-- Testing: arc() draws -3pi/2 .. -pi anticlockwise correctly -->
 <canvas height="50" id="c333" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_angle_2() {
 
 var canvas = document.getElementById('c333');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -10851,17 +10409,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.angle.3.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.angle.3</p>
 <!-- Testing: arc() wraps angles mod 2pi when anticlockwise and end > start+2pi -->
 <canvas height="50" id="c334" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_angle_3() {
 
 var canvas = document.getElementById('c334');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -10877,17 +10434,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.angle.4.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.angle.4</p>
 <!-- Testing: arc() draws a full circle when clockwise and end > start+2pi -->
 <canvas height="50" id="c335" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_angle_4() {
 
 var canvas = document.getElementById('c335');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -10906,17 +10462,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.angle.5.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.angle.5</p>
 <!-- Testing: arc() wraps angles mod 2pi when clockwise and start > end+2pi -->
 <canvas height="50" id="c336" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_angle_5() {
 
 var canvas = document.getElementById('c336');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -10932,17 +10487,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.angle.6.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.angle.6</p>
 <!-- Testing: arc() draws a full circle when anticlockwise and start > end+2pi -->
 <canvas height="50" id="c337" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_angle_6() {
 
 var canvas = document.getElementById('c337');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -10961,17 +10515,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.empty.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.empty</p>
 <!-- Testing: arc() with an empty path does not draw a straight line to the start point -->
 <canvas height="50" id="c338" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_empty() {
 
 var canvas = document.getElementById('c338');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -10987,17 +10540,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.end.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.end</p>
 <!-- Testing: arc() adds the end point of the arc to the subpath -->
 <canvas height="50" id="c339" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_end() {
 
 var canvas = document.getElementById('c339');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11035,17 +10587,16 @@ var _thrown = undefined; try {
 
 <!-- [[[ test_2d.path.arc.nonempty.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.nonempty</p>
 <!-- Testing: arc() with a non-empty path does draw a straight line to the start point -->
 <canvas height="50" id="c341" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_nonempty() {
 
 var canvas = document.getElementById('c341');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11062,25 +10613,21 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.nonfinite</p>
 <!-- Testing: arc() with Infinity/NaN is ignored -->
 <canvas height="50" id="c342" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_nonfinite() {
 
 var canvas = document.getElementById('c342');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.moveTo(0, 0);
 ctx.lineTo(100, 0);
 ctx.arc(Infinity, 50, 0, 2*Math.PI, true);
 ctx.arc(-Infinity, 50, 0, 2*Math.PI, true);
 ctx.arc(NaN, 50, 0, 2*Math.PI, true);
 ctx.arc(0, Infinity, 0, 2*Math.PI, true);
@@ -11105,33 +10652,27 @@ ctx.arc(0, Infinity, 0, Infinity, true);
 ctx.arc(0, 50, Infinity, Infinity, true);
 ctx.lineTo(100, 50);
 ctx.lineTo(0, 50);
 ctx.fillStyle = '#0f0';
 ctx.fill();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 90,45, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.arc.scale.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.scale.1</p>
 <!-- Testing: Non-uniformly scaled arcs are the right shape -->
 <canvas height="50" id="c343" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_scale_1() {
 
 var canvas = document.getElementById('c343');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.scale(2, 0.5);
@@ -11170,17 +10711,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.scale.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.scale.2</p>
 <!-- Testing: Highly scaled arcs are the right shape -->
 <canvas height="50" id="c344" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_scale_2() {
 
 var canvas = document.getElementById('c344');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.scale(100, 100);
@@ -11206,17 +10746,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.selfintersect.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.selfintersect.1</p>
 <!-- Testing: arc() with lineWidth > 2*radius is drawn sensibly -->
 <canvas height="50" id="c345" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_selfintersect_1() {
 
 var canvas = document.getElementById('c345');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 200;
@@ -11235,17 +10774,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.selfintersect.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.selfintersect.2</p>
 <!-- Testing: arc() with lineWidth > 2*radius is drawn sensibly -->
 <canvas height="50" id="c346" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_selfintersect_2() {
 
 var canvas = document.getElementById('c346');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 180;
@@ -11269,17 +10807,16 @@ isPixel(ctx, 2,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.shape.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.shape.1</p>
 <!-- Testing: arc() from 0 to pi does not draw anything in the wrong half -->
 <canvas height="50" id="c347" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_shape_1() {
 
 var canvas = document.getElementById('c347');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11314,17 +10851,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.shape.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.shape.2</p>
 <!-- Testing: arc() from 0 to pi draws stuff in the right half -->
 <canvas height="50" id="c348" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_shape_2() {
 
 var canvas = document.getElementById('c348');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 100;
@@ -11345,18 +10881,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.shape.3.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.shape.3</p>
 <!-- Testing: arc() from 0 to -pi/2 does not draw anything in the wrong quadrant -->
 <canvas height="50" id="c349" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arc_shape_3() {
 
 var canvas = document.getElementById('c349');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 100;
@@ -11376,17 +10910,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.shape.4.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.shape.4</p>
 <!-- Testing: arc() from 0 to -pi/2 draws stuff in the right quadrant -->
 <canvas height="50" id="c350" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_shape_4() {
 
 var canvas = document.getElementById('c350');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 150;
@@ -11406,17 +10939,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.shape.5.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.shape.5</p>
 <!-- Testing: arc() from 0 to 5pi does not draw crazy things -->
 <canvas height="50" id="c351" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_shape_5() {
 
 var canvas = document.getElementById('c351');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 200;
@@ -11436,17 +10968,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.twopie.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.twopie.1</p>
 <!-- Testing: arc() draws nothing when end = start + 2pi-e and anticlockwise -->
 <canvas height="50" id="c352" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_twopie_1() {
 
 var canvas = document.getElementById('c352');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -11462,17 +10993,16 @@ isPixel(ctx, 50,20, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.twopie.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.twopie.2</p>
 <!-- Testing: arc() draws a full circle when end = start + 2pi-e and clockwise -->
 <canvas height="50" id="c353" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_twopie_2() {
 
 var canvas = document.getElementById('c353');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#0f0';
@@ -11488,17 +11018,16 @@ isPixel(ctx, 50,20, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.twopie.3.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.twopie.3</p>
 <!-- Testing: arc() draws a full circle when end = start + 2pi+e and anticlockwise -->
 <canvas height="50" id="c354" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_twopie_3() {
 
 var canvas = document.getElementById('c354');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#0f0';
@@ -11514,17 +11043,16 @@ isPixel(ctx, 50,20, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.twopie.4.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.twopie.4</p>
 <!-- Testing: arc() draws nothing when end = start + 2pi+e and clockwise -->
 <canvas height="50" id="c355" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_twopie_4() {
 
 var canvas = document.getElementById('c355');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#0f0';
@@ -11540,17 +11068,16 @@ isPixel(ctx, 50,20, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.zero.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.zero.1</p>
 <!-- Testing: arc() draws nothing when startAngle = endAngle and anticlockwise -->
 <canvas height="50" id="c356" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_zero_1() {
 
 var canvas = document.getElementById('c356');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -11566,17 +11093,16 @@ isPixel(ctx, 50,20, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.zero.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.zero.2</p>
 <!-- Testing: arc() draws nothing when startAngle = endAngle and clockwise -->
 <canvas height="50" id="c357" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arc_zero_2() {
 
 var canvas = document.getElementById('c357');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -11592,45 +11118,42 @@ isPixel(ctx, 50,20, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arc.zeroradius.html ]]] -->
 
 <p>Canvas test: 2d.path.arc.zeroradius</p>
 <!-- Testing: arc() with zero radius draws a line to the start point -->
 <canvas height="50" id="c358" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arc_zeroradius() {
 
 var canvas = document.getElementById('c358');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00'
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
 ctx.strokeStyle = '#0f0';
 ctx.beginPath();
 ctx.moveTo(0, 25);
 ctx.arc(200, 25, 0, 0, Math.PI, true);
 ctx.stroke();
-
-isPixel(ctx, 50,25, 0,255,0,255, 0);
+isPixel(ctx, 50,25, 0,255,0,255, 0);
+
+
 }
 </script>
 
 <!-- [[[ test_2d.path.arcTo.coincide.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.coincide.1</p>
 <!-- Testing: arcTo() has no effect if P0 = P1 -->
 <canvas height="50" id="c359" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_coincide_1() {
 
 var canvas = document.getElementById('c359');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11658,17 +11181,16 @@ isPixel(ctx, 50,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.coincide.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.coincide.2</p>
 <!-- Testing: arcTo() draws a straight line to P1 if P1 = P2 -->
 <canvas height="50" id="c360" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arcTo_coincide_2() {
 
 var canvas = document.getElementById('c360');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11686,18 +11208,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.collinear.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.collinear.1</p>
 <!-- Testing: arcTo() with all points on a line, and P1 between P0/P2, draws a straight line to P1 -->
 <canvas height="50" id="c361" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_collinear_1() {
 
 var canvas = document.getElementById('c361');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11722,18 +11242,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.collinear.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.collinear.2</p>
 <!-- Testing: arcTo() with all points on a line, and P2 between P0/P1, draws an infinite line along P1..P2 -->
 <canvas height="50" id="c362" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_collinear_2() {
 
 var canvas = document.getElementById('c362');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11758,18 +11276,16 @@ todo_isPixel(ctx, 50,25, 0,255,0,255, 0)
 
 <!-- [[[ test_2d.path.arcTo.collinear.3.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.collinear.3</p>
 <!-- Testing: arcTo() with all points on a line, and P0 between P1/P2, draws an infinite line along P1..P2 -->
 <canvas height="50" id="c363" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_collinear_3() {
 
 var canvas = document.getElementById('c363');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11794,18 +11310,16 @@ todo_isPixel(ctx, 50,25, 0,255,0,255, 0)
 
 <!-- [[[ test_2d.path.arcTo.emptysubpath.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.emptysubpath</p>
 <!-- Testing: arcTo() does nothing if there are no subpaths -->
 <canvas height="50" id="c364" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_emptysubpath() {
 
 var canvas = document.getElementById('c364');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
@@ -11842,25 +11356,21 @@ var _thrown = undefined; try {
 
 <!-- [[[ test_2d.path.arcTo.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.nonfinite</p>
 <!-- Testing: arcTo() with Infinity/NaN is ignored -->
 <canvas height="50" id="c366" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arcTo_nonfinite() {
 
 var canvas = document.getElementById('c366');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.moveTo(0, 0);
 ctx.lineTo(100, 0);
 ctx.arcTo(Infinity, 50, 0, 50, 0);
 ctx.arcTo(-Infinity, 50, 0, 50, 0);
 ctx.arcTo(NaN, 50, 0, 50, 0);
 ctx.arcTo(0, Infinity, 0, 50, 0);
 ctx.arcTo(0, -Infinity, 0, 50, 0);
 ctx.arcTo(0, NaN, 0, 50, 0);
@@ -11901,33 +11411,27 @@ ctx.arcTo(0, 50, Infinity, 50, Infinity)
 ctx.arcTo(0, 50, 0, Infinity, Infinity);
 ctx.lineTo(100, 50);
 ctx.lineTo(0, 50);
 ctx.fillStyle = '#0f0';
 ctx.fill();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 90,45, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.arcTo.scale.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.scale</p>
 <!-- Testing: arcTo scales the curve, not just the control points -->
 <canvas height="50" id="c367" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arcTo_scale() {
 
 var canvas = document.getElementById('c367');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -11956,18 +11460,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.shape.curve1.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.shape.curve1</p>
 <!-- Testing: arcTo() curves in the right kind of shape -->
 <canvas height="50" id="c368" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_shape_curve1() {
 
 var canvas = document.getElementById('c368');
 var ctx = canvas.getContext('2d');
 
 var tol = 1.5; // tolerance to avoid antialiasing artifacts
 
 ctx.fillStyle = '#0f0';
@@ -12008,18 +11510,16 @@ isPixel(ctx, 80,46, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.shape.curve2.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.shape.curve2</p>
 <!-- Testing: arcTo() curves in the right kind of shape -->
 <canvas height="50" id="c369" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_shape_curve2() {
 
 var canvas = document.getElementById('c369');
 var ctx = canvas.getContext('2d');
 
 var tol = 1.5; // tolerance to avoid antialiasing artifacts
 
 ctx.fillStyle = '#0f0';
@@ -12060,18 +11560,16 @@ isPixel(ctx, 80,46, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.shape.end.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.shape.end</p>
 <!-- Testing: arcTo() does not draw anything from P1 to P2 -->
 <canvas height="50" id="c370" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_shape_end() {
 
 var canvas = document.getElementById('c370');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -12093,18 +11591,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.shape.start.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.shape.start</p>
 <!-- Testing: arcTo() draws a straight line from P0 to P1 -->
 <canvas height="50" id="c371" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_arcTo_shape_start() {
 
 var canvas = document.getElementById('c371');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#0f0';
@@ -12126,17 +11622,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.transformation.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.transformation</p>
 <!-- Testing: arcTo joins up to the last subpath point correctly -->
 <canvas height="50" id="c372" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arcTo_transformation() {
 
 var canvas = document.getElementById('c372');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12164,25 +11659,21 @@ isPixel(ctx, 99,49, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.arcTo.zero.1.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.zero.1</p>
 <!-- Testing: arcTo() with zero radius draws a straight line from P0 to P1 -->
 <canvas height="50" id="c373" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arcTo_zero_1() {
 
 var canvas = document.getElementById('c373');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
 
 ctx.strokeStyle = '#0f0';
 ctx.beginPath();
 ctx.moveTo(0, 25);
 ctx.arcTo(100, 25, 100, 100, 0);
@@ -12191,41 +11682,32 @@ ctx.stroke();
 ctx.strokeStyle = '#f00';
 ctx.beginPath();
 ctx.moveTo(0, -25);
 ctx.arcTo(50, -25, 50, 50, 0);
 ctx.stroke();
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.arcTo.zero.2.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.zero.2</p>
 <!-- Testing: arcTo() with zero radius draws a straight line from P0 to P1, even when all points are collinear -->
 <canvas height="50" id="c374" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_arcTo_zero_2() {
 
 var canvas = document.getElementById('c374');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
 
 ctx.strokeStyle = '#0f0';
 ctx.beginPath();
 ctx.moveTo(0, 25);
 ctx.arcTo(100, 25, -100, 25, 0);
@@ -12234,32 +11716,26 @@ ctx.stroke();
 ctx.strokeStyle = '#f00';
 ctx.beginPath();
 ctx.moveTo(100, 25);
 ctx.arcTo(200, 25, 50, 25, 0);
 ctx.stroke();
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.beginPath.html ]]] -->
 
 <p>Canvas test: 2d.path.beginPath</p>
 <canvas height="50" id="c375" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_beginPath() {
 
 var canvas = document.getElementById('c375');
 var ctx = canvas.getContext('2d');
 
 ctx.rect(0, 0, 100, 50);
 ctx.beginPath();
 ctx.fillStyle = '#f00';
@@ -12271,17 +11747,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.path.bezierCurveTo.basic.html ]]] -->
 
 <p>Canvas test: 2d.path.bezierCurveTo.basic</p>
 <canvas height="50" id="c376" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_bezierCurveTo_basic() {
 
 var canvas = document.getElementById('c376');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.beginPath();
@@ -12295,18 +11770,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.bezierCurveTo.emptysubpath.html ]]] -->
 
 <p>Canvas test: 2d.path.bezierCurveTo.emptysubpath</p>
 <canvas height="50" id="c377" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_bezierCurveTo_emptysubpath() {
 
 var canvas = document.getElementById('c377');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
 ctx.beginPath();
@@ -12321,25 +11794,21 @@ todo_isPixel(ctx, 50,25, 0,0,0,0, 0);
 
 <!-- [[[ test_2d.path.bezierCurveTo.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.bezierCurveTo.nonfinite</p>
 <!-- Testing: bezierCurveTo() with Infinity/NaN is ignored -->
 <canvas height="50" id="c378" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_bezierCurveTo_nonfinite() {
 
 var canvas = document.getElementById('c378');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.moveTo(0, 0);
 ctx.lineTo(100, 0);
 ctx.bezierCurveTo(Infinity, 50, 0, 50, 0, 50);
 ctx.bezierCurveTo(-Infinity, 50, 0, 50, 0, 50);
 ctx.bezierCurveTo(NaN, 50, 0, 50, 0, 50);
 ctx.bezierCurveTo(0, Infinity, 0, 50, 0, 50);
 ctx.bezierCurveTo(0, -Infinity, 0, 50, 0, 50);
 ctx.bezierCurveTo(0, NaN, 0, 50, 0, 50);
@@ -12414,32 +11883,26 @@ ctx.bezierCurveTo(0, 50, 0, Infinity, 0,
 ctx.bezierCurveTo(0, 50, 0, 50, Infinity, Infinity);
 ctx.lineTo(100, 50);
 ctx.lineTo(0, 50);
 ctx.fillStyle = '#0f0';
 ctx.fill();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 90,45, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.bezierCurveTo.scaled.html ]]] -->
 
 <p>Canvas test: 2d.path.bezierCurveTo.scaled</p>
 <canvas height="50" id="c379" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_bezierCurveTo_scaled() {
 
 var canvas = document.getElementById('c379');
 var ctx = canvas.getContext('2d');
 
 ctx.scale(1000, 1000);
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 0.055;
@@ -12458,17 +11921,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.bezierCurveTo.shape.html ]]] -->
 
 <p>Canvas test: 2d.path.bezierCurveTo.shape</p>
 <canvas height="50" id="c380" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_bezierCurveTo_shape() {
 
 var canvas = document.getElementById('c380');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 55;
 ctx.beginPath();
@@ -12486,17 +11948,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.clip.basic.1.html ]]] -->
 
 <p>Canvas test: 2d.path.clip.basic.1</p>
 <canvas height="50" id="c381" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_clip_basic_1() {
 
 var canvas = document.getElementById('c381');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12514,17 +11975,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.clip.basic.2.html ]]] -->
 
 <p>Canvas test: 2d.path.clip.basic.2</p>
 <canvas height="50" id="c382" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_clip_basic_2() {
 
 var canvas = document.getElementById('c382');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12542,17 +12002,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.clip.empty.html ]]] -->
 
 <p>Canvas test: 2d.path.clip.empty</p>
 <canvas height="50" id="c383" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_clip_empty() {
 
 var canvas = document.getElementById('c383');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12569,17 +12028,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.clip.intersect.html ]]] -->
 
 <p>Canvas test: 2d.path.clip.intersect</p>
 <canvas height="50" id="c384" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_clip_intersect() {
 
 var canvas = document.getElementById('c384');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12600,17 +12058,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.clip.unaffected.html ]]] -->
 
 <p>Canvas test: 2d.path.clip.unaffected</p>
 <canvas height="50" id="c385" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_clip_unaffected() {
 
 var canvas = document.getElementById('c385');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12633,17 +12090,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.clip.winding.1.html ]]] -->
 
 <p>Canvas test: 2d.path.clip.winding.1</p>
 <canvas height="50" id="c386" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_clip_winding_1() {
 
 var canvas = document.getElementById('c386');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12669,17 +12125,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.clip.winding.2.html ]]] -->
 
 <p>Canvas test: 2d.path.clip.winding.2</p>
 <canvas height="50" id="c387" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_clip_winding_2() {
 
 var canvas = document.getElementById('c387');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12709,17 +12164,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.closePath.empty.html ]]] -->
 
 <p>Canvas test: 2d.path.closePath.empty</p>
 <canvas height="50" id="c388" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_closePath_empty() {
 
 var canvas = document.getElementById('c388');
 var ctx = canvas.getContext('2d');
 
 ctx.closePath();
 ctx.fillStyle = '#f00';
 ctx.fill();
@@ -12730,17 +12184,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.path.closePath.newline.html ]]] -->
 
 <p>Canvas test: 2d.path.closePath.newline</p>
 <canvas height="50" id="c389" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_closePath_newline() {
 
 var canvas = document.getElementById('c389');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.moveTo(-100, 25);
@@ -12756,17 +12209,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.closePath.nextpoint.html ]]] -->
 
 <p>Canvas test: 2d.path.closePath.nextpoint</p>
 <canvas height="50" id="c390" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_closePath_nextpoint() {
 
 var canvas = document.getElementById('c390');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.moveTo(-100, 25);
@@ -12781,17 +12233,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.fill.closed.basic.html ]]] -->
 
 <p>Canvas test: 2d.path.fill.closed.basic</p>
 <canvas height="50" id="c391" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_fill_closed_basic() {
 
 var canvas = document.getElementById('c391');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12809,17 +12260,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.fill.closed.unaffected.html ]]] -->
 
 <p>Canvas test: 2d.path.fill.closed.unaffected</p>
 <canvas height="50" id="c392" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_fill_closed_unaffected() {
 
 var canvas = document.getElementById('c392');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#00f';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12840,17 +12290,16 @@ isPixel(ctx, 10,40, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.fill.overlap.html ]]] -->
 
 <p>Canvas test: 2d.path.fill.overlap</p>
 <canvas height="50" id="c393" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_fill_overlap() {
 
 var canvas = document.getElementById('c393');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#000';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12867,17 +12316,16 @@ isPixel(ctx, 50,25, 0,127,0,255, 1);
 </script>
 
 <!-- [[[ test_2d.path.fill.winding.add.html ]]] -->
 
 <p>Canvas test: 2d.path.fill.winding.add</p>
 <canvas height="50" id="c394" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_fill_winding_add() {
 
 var canvas = document.getElementById('c394');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12900,17 +12348,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.fill.winding.subtract.1.html ]]] -->
 
 <p>Canvas test: 2d.path.fill.winding.subtract.1</p>
 <canvas height="50" id="c395" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_fill_winding_subtract_1() {
 
 var canvas = document.getElementById('c395');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12933,17 +12380,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.fill.winding.subtract.2.html ]]] -->
 
 <p>Canvas test: 2d.path.fill.winding.subtract.2</p>
 <canvas height="50" id="c396" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_fill_winding_subtract_2() {
 
 var canvas = document.getElementById('c396');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -12965,17 +12411,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.fill.winding.subtract.3.html ]]] -->
 
 <p>Canvas test: 2d.path.fill.winding.subtract.3</p>
 <canvas height="50" id="c397" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_fill_winding_subtract_3() {
 
 var canvas = document.getElementById('c397');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -13003,18 +12448,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.initial.html ]]] -->
 
 <p>Canvas test: 2d.path.initial</p>
 <canvas height="50" id="c398" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_initial() {
 
 var canvas = document.getElementById('c398');
 var ctx = canvas.getContext('2d');
 
 ctx.lineTo(0, 0);
 ctx.lineTo(100, 0);
 ctx.lineTo(100, 50);
@@ -13167,30 +12610,30 @@ ok(ctx.isPointInPath(70, 30) === false, 
 <script>
 
 function test_2d_path_isPointInPath_edge() {
 
 var canvas = document.getElementById('c404');
 var ctx = canvas.getContext('2d');
 
 ctx.rect(0, 0, 20, 20);
-
 ok(ctx.isPointInPath(0, 0) === true, "ctx.isPointInPath(0, 0) === true");
 ok(ctx.isPointInPath(10, 0) === true, "ctx.isPointInPath(10, 0) === true");
 ok(ctx.isPointInPath(20, 0) === true, "ctx.isPointInPath(20, 0) === true");
 ok(ctx.isPointInPath(20, 10) === true, "ctx.isPointInPath(20, 10) === true");
 ok(ctx.isPointInPath(20, 20) === true, "ctx.isPointInPath(20, 20) === true");
 ok(ctx.isPointInPath(10, 20) === true, "ctx.isPointInPath(10, 20) === true");
 ok(ctx.isPointInPath(0, 20) === true, "ctx.isPointInPath(0, 20) === true");
 ok(ctx.isPointInPath(0, 10) === true, "ctx.isPointInPath(0, 10) === true");
 ok(ctx.isPointInPath(10, -0.01) === false, "ctx.isPointInPath(10, -0.01) === false");
 ok(ctx.isPointInPath(10, 20.01) === false, "ctx.isPointInPath(10, 20.01) === false");
 ok(ctx.isPointInPath(-0.01, 10) === false, "ctx.isPointInPath(-0.01, 10) === false");
 ok(ctx.isPointInPath(20.01, 10) === false, "ctx.isPointInPath(20.01, 10) === false");
 
+
 }
 </script>
 
 <!-- [[[ test_2d.path.isPointInPath.empty.html ]]] -->
 
 <p>Canvas test: 2d.path.isPointInPath.empty</p>
 <!-- Testing: isPointInPath() works when there is no path -->
 <canvas height="50" id="c405" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
@@ -13214,33 +12657,25 @@ ok(ctx.isPointInPath(0, 0) === false, "c
 <canvas height="50" id="c406" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_path_isPointInPath_nonfinite() {
 
 var canvas = document.getElementById('c406');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.rect(-100, -50, 200, 100);
 ok(ctx.isPointInPath(Infinity, 0) === false, "ctx.isPointInPath(Infinity, 0) === false");
 ok(ctx.isPointInPath(-Infinity, 0) === false, "ctx.isPointInPath(-Infinity, 0) === false");
 ok(ctx.isPointInPath(NaN, 0) === false, "ctx.isPointInPath(NaN, 0) === false");
 ok(ctx.isPointInPath(0, Infinity) === false, "ctx.isPointInPath(0, Infinity) === false");
 ok(ctx.isPointInPath(0, -Infinity) === false, "ctx.isPointInPath(0, -Infinity) === false");
 ok(ctx.isPointInPath(0, NaN) === false, "ctx.isPointInPath(0, NaN) === false");
 ok(ctx.isPointInPath(NaN, NaN) === false, "ctx.isPointInPath(NaN, NaN) === false");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.isPointInPath.outside.html ]]] -->
 
 <p>Canvas test: 2d.path.isPointInPath.outside</p>
 <!-- Testing: isPointInPath() works on paths outside the canvas -->
@@ -13427,17 +12862,16 @@ ok(ctx.isPointInPath(45, 45) === true, "
 </script>
 
 <!-- [[[ test_2d.path.lineTo.basic.html ]]] -->
 
 <p>Canvas test: 2d.path.lineTo.basic</p>
 <canvas height="50" id="c414" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_lineTo_basic() {
 
 var canvas = document.getElementById('c414');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.beginPath();
@@ -13451,18 +12885,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.lineTo.emptysubpath.html ]]] -->
 
 <p>Canvas test: 2d.path.lineTo.emptysubpath</p>
 <canvas height="50" id="c415" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_lineTo_emptysubpath() {
 
 var canvas = document.getElementById('c415');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
 ctx.beginPath();
@@ -13476,17 +12908,16 @@ todo_isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.path.lineTo.nextpoint.html ]]] -->
 
 <p>Canvas test: 2d.path.lineTo.nextpoint</p>
 <canvas height="50" id="c416" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_lineTo_nextpoint() {
 
 var canvas = document.getElementById('c416');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.beginPath();
@@ -13502,57 +12933,47 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.lineTo.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.lineTo.nonfinite</p>
 <!-- Testing: lineTo() with Infinity/NaN is ignored -->
 <canvas height="50" id="c417" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_lineTo_nonfinite() {
 
 var canvas = document.getElementById('c417');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.moveTo(0, 0);
 ctx.lineTo(100, 0);
 ctx.lineTo(Infinity, 50);
 ctx.lineTo(-Infinity, 50);
 ctx.lineTo(NaN, 50);
 ctx.lineTo(0, Infinity);
 ctx.lineTo(0, -Infinity);
 ctx.lineTo(0, NaN);
 ctx.lineTo(Infinity, Infinity);
 ctx.lineTo(100, 50);
 ctx.lineTo(0, 50);
 ctx.fillStyle = '#0f0';
 ctx.fill();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 90,45, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.moveTo.basic.html ]]] -->
 
 <p>Canvas test: 2d.path.moveTo.basic</p>
 <canvas height="50" id="c418" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_moveTo_basic() {
 
 var canvas = document.getElementById('c418');
 var ctx = canvas.getContext('2d');
 
 ctx.rect(0, 0, 10, 50);
 ctx.moveTo(100, 0);
 ctx.lineTo(10, 0);
@@ -13567,17 +12988,16 @@ isPixel(ctx, 90,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.moveTo.multiple.html ]]] -->
 
 <p>Canvas test: 2d.path.moveTo.multiple</p>
 <canvas height="50" id="c419" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_moveTo_multiple() {
 
 var canvas = document.getElementById('c419');
 var ctx = canvas.getContext('2d');
 
 ctx.moveTo(0, 25);
 ctx.moveTo(100, 25);
 ctx.moveTo(0, 25);
@@ -13592,17 +13012,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.moveTo.newsubpath.html ]]] -->
 
 <p>Canvas test: 2d.path.moveTo.newsubpath</p>
 <canvas height="50" id="c420" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_moveTo_newsubpath() {
 
 var canvas = document.getElementById('c420');
 var ctx = canvas.getContext('2d');
 
 ctx.beginPath();
 ctx.moveTo(0, 0);
 ctx.moveTo(100, 0);
@@ -13618,56 +13037,46 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 
 <!-- [[[ test_2d.path.moveTo.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.moveTo.nonfinite</p>
 <!-- Testing: moveTo() with Infinity/NaN is ignored -->
 <canvas height="50" id="c421" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_moveTo_nonfinite() {
 
 var canvas = document.getElementById('c421');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.moveTo(0, 0);
 ctx.lineTo(100, 0);
 ctx.moveTo(Infinity, 50);
 ctx.moveTo(-Infinity, 50);
 ctx.moveTo(NaN, 50);
 ctx.moveTo(0, Infinity);
 ctx.moveTo(0, -Infinity);
 ctx.moveTo(0, NaN);
 ctx.moveTo(Infinity, Infinity);
 ctx.lineTo(100, 50);
 ctx.lineTo(0, 50);
 ctx.fillStyle = '#0f0';
 ctx.fill();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.quadraticCurveTo.basic.html ]]] -->
 
 <p>Canvas test: 2d.path.quadraticCurveTo.basic</p>
 <canvas height="50" id="c422" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_quadraticCurveTo_basic() {
 
 var canvas = document.getElementById('c422');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.beginPath();
@@ -13681,18 +13090,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.quadraticCurveTo.emptysubpath.html ]]] -->
 
 <p>Canvas test: 2d.path.quadraticCurveTo.emptysubpath</p>
 <canvas height="50" id="c423" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_quadraticCurveTo_emptysubpath() {
 
 var canvas = document.getElementById('c423');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
 ctx.beginPath();
@@ -13707,25 +13114,21 @@ todo_isPixel(ctx, 50,25, 0,0,0,0, 0);
 
 <!-- [[[ test_2d.path.quadraticCurveTo.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.quadraticCurveTo.nonfinite</p>
 <!-- Testing: quadraticCurveTo() with Infinity/NaN is ignored -->
 <canvas height="50" id="c424" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_quadraticCurveTo_nonfinite() {
 
 var canvas = document.getElementById('c424');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.moveTo(0, 0);
 ctx.lineTo(100, 0);
 ctx.quadraticCurveTo(Infinity, 50, 0, 50);
 ctx.quadraticCurveTo(-Infinity, 50, 0, 50);
 ctx.quadraticCurveTo(NaN, 50, 0, 50);
 ctx.quadraticCurveTo(0, Infinity, 0, 50);
 ctx.quadraticCurveTo(0, -Infinity, 0, 50);
 ctx.quadraticCurveTo(0, NaN, 0, 50);
@@ -13748,32 +13151,26 @@ ctx.quadraticCurveTo(0, Infinity, 0, Inf
 ctx.quadraticCurveTo(0, 50, Infinity, Infinity);
 ctx.lineTo(100, 50);
 ctx.lineTo(0, 50);
 ctx.fillStyle = '#0f0';
 ctx.fill();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 90,45, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.quadraticCurveTo.scaled.html ]]] -->
 
 <p>Canvas test: 2d.path.quadraticCurveTo.scaled</p>
 <canvas height="50" id="c425" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_quadraticCurveTo_scaled() {
 
 var canvas = document.getElementById('c425');
 var ctx = canvas.getContext('2d');
 
 ctx.scale(1000, 1000);
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 0.055;
@@ -13792,17 +13189,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.quadraticCurveTo.shape.html ]]] -->
 
 <p>Canvas test: 2d.path.quadraticCurveTo.shape</p>
 <canvas height="50" id="c426" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_quadraticCurveTo_shape() {
 
 var canvas = document.getElementById('c426');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 55;
 ctx.beginPath();
@@ -13820,17 +13216,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.basic.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.basic</p>
 <canvas height="50" id="c427" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_basic() {
 
 var canvas = document.getElementById('c427');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.rect(0, 0, 100, 50);
 ctx.fill();
@@ -13841,17 +13236,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.closed.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.closed</p>
 <canvas height="50" id="c428" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_closed() {
 
 var canvas = document.getElementById('c428');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 200;
 ctx.lineJoin = 'miter';
@@ -13864,17 +13258,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.end.1.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.end.1</p>
 <canvas height="50" id="c429" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_end_1() {
 
 var canvas = document.getElementById('c429');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 100;
 ctx.rect(200, 100, 400, 1000);
@@ -13887,17 +13280,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.end.2.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.end.2</p>
 <canvas height="50" id="c430" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_end_2() {
 
 var canvas = document.getElementById('c430');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 450;
 ctx.lineCap = 'round';
@@ -13915,17 +13307,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.negative.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.negative</p>
 <canvas height="50" id="c431" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_negative() {
 
 var canvas = document.getElementById('c431');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.beginPath();
@@ -13945,17 +13336,16 @@ isPixel(ctx, 75,37, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.newsubpath.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.newsubpath</p>
 <canvas height="50" id="c432" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_newsubpath() {
 
 var canvas = document.getElementById('c432');
 var ctx = canvas.getContext('2d');
 
 ctx.beginPath();
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
@@ -13971,25 +13361,21 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 
 <!-- [[[ test_2d.path.rect.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.nonfinite</p>
 <!-- Testing: rect() with Infinity/NaN is ignored -->
 <canvas height="50" id="c433" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_nonfinite() {
 
 var canvas = document.getElementById('c433');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.moveTo(0, 0);
 ctx.lineTo(100, 0);
 ctx.rect(Infinity, 50, 1, 1);
 ctx.rect(-Infinity, 50, 1, 1);
 ctx.rect(NaN, 50, 1, 1);
 ctx.rect(0, Infinity, 1, 1);
 ctx.rect(0, -Infinity, 1, 1);
 ctx.rect(0, NaN, 1, 1);
@@ -14012,33 +13398,26 @@ ctx.rect(0, Infinity, 1, Infinity);
 ctx.rect(0, 50, Infinity, Infinity);
 ctx.lineTo(100, 50);
 ctx.lineTo(0, 50);
 ctx.fillStyle = '#0f0';
 ctx.fill();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 90,45, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.path.rect.selfintersect.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.selfintersect</p>
 <canvas height="50" id="c434" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_rect_selfintersect() {
 
 var canvas = document.getElementById('c434');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 90;
 ctx.beginPath();
@@ -14051,17 +13430,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.winding.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.winding</p>
 <canvas height="50" id="c435" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_winding() {
 
 var canvas = document.getElementById('c435');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.beginPath();
@@ -14081,17 +13459,16 @@ isPixel(ctx, 75,37, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.zero.1.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.zero.1</p>
 <canvas height="50" id="c436" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_zero_1() {
 
 var canvas = document.getElementById('c436');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 100;
 ctx.beginPath();
@@ -14104,17 +13481,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.zero.2.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.zero.2</p>
 <canvas height="50" id="c437" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_zero_2() {
 
 var canvas = document.getElementById('c437');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 100;
 ctx.beginPath();
@@ -14127,17 +13503,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.zero.3.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.zero.3</p>
 <canvas height="50" id="c438" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_zero_3() {
 
 var canvas = document.getElementById('c438');
 var ctx = canvas.getContext('2d');
 
 if (!IsD2DEnabled()) {
     // Disabled for D2D until we can figure out Bug 587554.
     ctx.strokeStyle = '#f00';
@@ -14152,17 +13527,16 @@ if (!IsD2DEnabled()) {
 </script>
 
 <!-- [[[ test_2d.path.rect.zero.4.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.zero.4</p>
 <canvas height="50" id="c439" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_zero_4() {
 
 var canvas = document.getElementById('c439');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.rect(100, 25, 0, 0);
@@ -14175,17 +13549,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.zero.5.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.zero.5</p>
 <canvas height="50" id="c440" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_rect_zero_5() {
 
 var canvas = document.getElementById('c440');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
 ctx.moveTo(0, 0);
@@ -14198,18 +13571,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.path.rect.zero.6.html ]]] -->
 
 <p>Canvas test: 2d.path.rect.zero.6</p>
 <canvas height="50" id="c441" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_rect_zero_6() {
 
 var canvas = document.getElementById('c441');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#f00';
 ctx.lineJoin = 'miter';
 ctx.miterLimit = 1.5;
@@ -14225,17 +13596,16 @@ todo_isPixel(ctx, 50,25, 0,0,0,0, 0);
 
 <!-- [[[ test_2d.path.stroke.empty.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.empty</p>
 <!-- Testing: Empty subpaths are not stroked -->
 <canvas height="50" id="c442" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_stroke_empty() {
 
 var canvas = document.getElementById('c442');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14257,17 +13627,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.stroke.overlap.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.overlap</p>
 <!-- Testing: Stroked subpaths are combined before being drawn -->
 <canvas height="50" id="c443" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_stroke_overlap() {
 
 var canvas = document.getElementById('c443');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#000';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14287,18 +13656,16 @@ isPixel(ctx, 50,25, 0,127,0,255, 1);
 
 <!-- [[[ test_2d.path.stroke.prune.arc.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.prune.arc</p>
 <!-- Testing: Zero-length line segments from arcTo and arc are removed before stroking -->
 <canvas height="50" id="c444" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_stroke_prune_arc() {
 
 var canvas = document.getElementById('c444');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14325,18 +13692,16 @@ todo_isPixel(ctx, 50,25, 0,255,0,255, 0)
 
 <!-- [[[ test_2d.path.stroke.prune.closed.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.prune.closed</p>
 <!-- Testing: Zero-length line segments from closed paths are removed before stroking -->
 <canvas height="50" id="c445" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_stroke_prune_closed() {
 
 var canvas = document.getElementById('c445');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14362,17 +13727,16 @@ if (IsAzureSkia()) {
 
 <!-- [[[ test_2d.path.stroke.prune.corner.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.prune.corner</p>
 <!-- Testing: Zero-length line segments are removed before stroking with miters -->
 <canvas height="50" id="c446" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_stroke_prune_corner() {
 
 var canvas = document.getElementById('c446');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14397,18 +13761,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.stroke.prune.curve.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.prune.curve</p>
 <!-- Testing: Zero-length line segments from quadraticCurveTo and bezierCurveTo are removed before stroking -->
 <canvas height="50" id="c447" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_stroke_prune_curve() {
 
 var canvas = document.getElementById('c447');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14439,18 +13801,16 @@ if (IsAzureSkia()) {
 
 <!-- [[[ test_2d.path.stroke.prune.line.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.prune.line</p>
 <!-- Testing: Zero-length line segments from lineTo are removed before stroking -->
 <canvas height="50" id="c448" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_stroke_prune_line() {
 
 var canvas = document.getElementById('c448');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14475,18 +13835,16 @@ if (IsAzureSkia()) {
 
 <!-- [[[ test_2d.path.stroke.prune.rect.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.prune.rect</p>
 <!-- Testing: Zero-length line segments from rect and strokeRect are removed before stroking -->
 <canvas height="50" id="c449" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_path_stroke_prune_rect() {
 
 var canvas = document.getElementById('c449');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14512,17 +13870,16 @@ if (IsAzureSkia()) {
 
 <!-- [[[ test_2d.path.stroke.scale1.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.scale1</p>
 <!-- Testing: Stroke line widths are scaled by the current transformation matrix -->
 <canvas height="50" id="c450" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_stroke_scale1() {
 
 var canvas = document.getElementById('c450');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14558,17 +13915,16 @@ isPixel(ctx, 99,49, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.stroke.scale2.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.scale2</p>
 <!-- Testing: Stroke line widths are scaled by the current transformation matrix -->
 <canvas height="50" id="c451" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_stroke_scale2() {
 
 var canvas = document.getElementById('c451');
 var ctx = canvas.getContext('2d');
 
 if (!IsD2DEnabled()) {
     // On D2D a rasterization bug causes a small discrepancy here. See bug 587316
     ctx.fillStyle = '#f00';
@@ -14608,17 +13964,16 @@ if (!IsD2DEnabled()) {
 
 <!-- [[[ test_2d.path.stroke.skew.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.skew</p>
 <!-- Testing: Strokes lines are skewed by the current transformation matrix -->
 <canvas height="50" id="c452" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_stroke_skew() {
 
 var canvas = document.getElementById('c452');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14659,27 +14014,27 @@ isPixel(ctx, 50,0, 0,255,0,255, 0);
 isPixel(ctx, 99,0, 0,255,0,255, 0);
 isPixel(ctx, 0,25, 0,255,0,255, 0);
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 isPixel(ctx, 99,25, 0,255,0,255, 0);
 isPixel(ctx, 0,49, 0,255,0,255, 0);
 isPixel(ctx, 50,49, 0,255,0,255, 0);
 isPixel(ctx, 99,49, 0,255,0,255, 0);
 
+
 }
 </script>
 
 <!-- [[[ test_2d.path.stroke.unaffected.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.unaffected</p>
 <!-- Testing: Stroking does not start a new path or subpath -->
 <canvas height="50" id="c453" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_stroke_unaffected() {
 
 var canvas = document.getElementById('c453');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14703,17 +14058,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.stroke.union.html ]]] -->
 
 <p>Canvas test: 2d.path.stroke.union</p>
 <!-- Testing: Strokes in opposite directions are unioned, not subtracted -->
 <canvas height="50" id="c454" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_stroke_union() {
 
 var canvas = document.getElementById('c454');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14732,17 +14086,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.transformation.basic.html ]]] -->
 
 <p>Canvas test: 2d.path.transformation.basic</p>
 <canvas height="50" id="c455" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_transformation_basic() {
 
 var canvas = document.getElementById('c455');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14760,17 +14113,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.path.transformation.changing.html ]]] -->
 
 <p>Canvas test: 2d.path.transformation.changing</p>
 <!-- Testing: Transformations are applied while building paths, not when drawing -->
 <canvas height="50" id="c456" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_transformation_changing() {
 
 var canvas = document.getElementById('c456');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -14793,17 +14145,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.path.transformation.multiple.html ]]] -->
 
 <p>Canvas test: 2d.path.transformation.multiple</p>
 <canvas height="50" id="c457" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_path_transformation_multiple() {
 
 var canvas = document.getElementById('c457');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14851,17 +14202,16 @@ setTimeout(function () {
 <img class="resource" id="anim-gr_2.gif" src="image_anim-gr.gif">
 
 <!-- [[[ test_2d.pattern.basic.canvas.html ]]] -->
 
 <p>Canvas test: 2d.pattern.basic.canvas</p>
 <canvas height="50" id="c459" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_basic_canvas() {
 
 var canvas = document.getElementById('c459');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -14891,17 +14241,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.pattern.basic.image.html ]]] -->
 
 <p>Canvas test: 2d.pattern.basic.image</p>
 <canvas height="50" id="c460" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_basic_image() {
 
 var canvas = document.getElementById('c460');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 var img = document.getElementById('green_8.png');
@@ -14920,17 +14269,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green_8.png" src="image_green.png">
 
 <!-- [[[ test_2d.pattern.basic.nocontext.html ]]] -->
 
 <p>Canvas test: 2d.pattern.basic.nocontext</p>
 <canvas height="50" id="c461" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_basic_nocontext() {
 
 var canvas = document.getElementById('c461');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -14975,18 +14323,16 @@ ok(pattern.thisImplementsCanvasPattern, 
 <img class="resource" id="green_9.png" src="image_green.png">
 
 <!-- [[[ test_2d.pattern.basic.zerocanvas.html ]]] -->
 
 <p>Canvas test: 2d.pattern.basic.zerocanvas</p>
 <canvas height="50" id="c463" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_pattern_basic_zerocanvas() {
 
 var canvas = document.getElementById('c463');
 var ctx = canvas.getContext('2d');
 
 canvas.width = 0;
 canvas.height = 10;
 ok(canvas.width === 0, "canvas.width === 0");
@@ -15016,17 +14362,16 @@ var _thrown = undefined; try {
 </script>
 
 <!-- [[[ test_2d.pattern.crosscanvas.html ]]] -->
 
 <p>Canvas test: 2d.pattern.crosscanvas</p>
 <canvas height="50" id="c464" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_crosscanvas() {
 
 var canvas = document.getElementById('c464');
 var ctx = canvas.getContext('2d');
 
 var img = document.getElementById('green_10.png');
 
 var pattern = document.createElement('canvas').getContext('2d').createPattern(img, 'no-repeat');
@@ -15140,17 +14485,16 @@ ok(_thrown && _thrown.name == "TypeError
 </script>
 
 <!-- [[[ test_2d.pattern.modify.canvas1.html ]]] -->
 
 <p>Canvas test: 2d.pattern.modify.canvas1</p>
 <canvas height="50" id="c470" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_modify_canvas1() {
 
 var canvas = document.getElementById('c470');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -15176,17 +14520,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.pattern.modify.canvas2.html ]]] -->
 
 <p>Canvas test: 2d.pattern.modify.canvas2</p>
 <canvas height="50" id="c471" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_modify_canvas2() {
 
 var canvas = document.getElementById('c471');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -15283,17 +14626,16 @@ img.src = 'image_red.png';
 <img class="resource" id="green_12.png" src="image_green.png">
 
 <!-- [[[ test_2d.pattern.paint.norepeat.basic.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.norepeat.basic</p>
 <canvas height="50" id="c474" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_norepeat_basic() {
 
 var canvas = document.getElementById('c474');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15313,17 +14655,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green_13.png" src="image_green.png">
 
 <!-- [[[ test_2d.pattern.paint.norepeat.coord1.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.norepeat.coord1</p>
 <canvas height="50" id="c475" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_norepeat_coord1() {
 
 var canvas = document.getElementById('c475');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 50, 50);
 ctx.fillStyle = '#f00';
@@ -15346,17 +14687,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green_14.png" src="image_green.png">
 
 <!-- [[[ test_2d.pattern.paint.norepeat.coord2.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.norepeat.coord2</p>
 <canvas height="50" id="c476" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_norepeat_coord2() {
 
 var canvas = document.getElementById('c476');
 var ctx = canvas.getContext('2d');
 
 var img = document.getElementById('green_15.png');
 var pattern = ctx.createPattern(img, 'no-repeat');
 ctx.fillStyle = pattern;
@@ -15380,17 +14720,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green_15.png" src="image_green.png">
 
 <!-- [[[ test_2d.pattern.paint.norepeat.coord3.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.norepeat.coord3</p>
 <canvas height="50" id="c477" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_norepeat_coord3() {
 
 var canvas = document.getElementById('c477');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15414,17 +14753,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="red_15.png" src="image_red.png">
 
 <!-- [[[ test_2d.pattern.paint.norepeat.outside.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.norepeat.outside</p>
 <canvas height="50" id="c478" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_norepeat_outside() {
 
 var canvas = document.getElementById('c478');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15451,17 +14789,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.pattern.paint.orientation.canvas.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.orientation.canvas</p>
 <!-- Testing: Canvas patterns do not get flipped when painted -->
 <canvas height="50" id="c479" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_orientation_canvas() {
 
 var canvas = document.getElementById('c479');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15491,17 +14828,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.pattern.paint.orientation.image.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.orientation.image</p>
 <!-- Testing: Image patterns do not get flipped when painted -->
 <canvas height="50" id="c480" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_orientation_image() {
 
 var canvas = document.getElementById('c480');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15527,17 +14863,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="rrgg-256x256_1.png" src="image_rrgg-256x256.png">
 
 <!-- [[[ test_2d.pattern.paint.repeat.basic.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeat.basic</p>
 <canvas height="50" id="c481" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_repeat_basic() {
 
 var canvas = document.getElementById('c481');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15557,17 +14892,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green-16x16_1.png" src="image_green-16x16.png">
 
 <!-- [[[ test_2d.pattern.paint.repeat.coord1.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeat.coord1</p>
 <canvas height="50" id="c482" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_repeat_coord1() {
 
 var canvas = document.getElementById('c482');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15588,17 +14922,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="rgrg-256x256_3.png" src="image_rgrg-256x256.png">
 
 <!-- [[[ test_2d.pattern.paint.repeat.coord2.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeat.coord2</p>
 <canvas height="50" id="c483" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_repeat_coord2() {
 
 var canvas = document.getElementById('c483');
 var ctx = canvas.getContext('2d');
 
 var img = document.getElementById('ggrr-256x256_3.png');
 var pattern = ctx.createPattern(img, 'repeat');
 ctx.fillStyle = pattern;
@@ -15615,18 +14948,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="ggrr-256x256_3.png" src="image_ggrr-256x256.png">
 
 <!-- [[[ test_2d.pattern.paint.repeat.coord3.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeat.coord3</p>
 <canvas height="50" id="c484" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_pattern_paint_repeat_coord3() {
 
 var canvas = document.getElementById('c484');
 var ctx = canvas.getContext('2d');
 
 var img = document.getElementById('rgrg-256x256_4.png');
 var pattern = ctx.createPattern(img, 'repeat');
 ctx.fillStyle = pattern;
@@ -15634,27 +14965,28 @@ ctx.fillRect(0, 0, 100, 50);
 
 ctx.translate(-128, -78);
 ctx.fillRect(128, 78, 100, 50);
 
 isPixel(ctx, 1,1, 0,255,0,255, 0);
 isPixel(ctx, 98,1, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 isPixel(ctx, 98,48, 0,255,0,255, 0);
+
+
 }
 </script>
 <img class="resource" id="rgrg-256x256_4.png" src="image_rgrg-256x256.png">
 
 <!-- [[[ test_2d.pattern.paint.repeat.outside.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeat.outside</p>
 <canvas height="50" id="c485" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_repeat_outside() {
 
 var canvas = document.getElementById('c485');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15675,17 +15007,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green-16x16_2.png" src="image_green-16x16.png">
 
 <!-- [[[ test_2d.pattern.paint.repeatx.basic.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeatx.basic</p>
 <canvas height="50" id="c486" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_repeatx_basic() {
 
 var canvas = document.getElementById('c486');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -15707,18 +15038,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green-16x16_3.png" src="image_green-16x16.png">
 
 <!-- [[[ test_2d.pattern.paint.repeatx.coord1.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeatx.coord1</p>
 <canvas height="50" id="c487" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_pattern_paint_repeatx_coord1() {
 
 var canvas = document.getElementById('c487');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15732,28 +15061,28 @@ ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 16);
 
 isPixel(ctx, 1,1, 0,255,0,255, 0);
 isPixel(ctx, 98,1, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 isPixel(ctx, 98,48, 0,255,0,255, 0);
 isPixel(ctx, 1,25, 0,255,0,255, 0);
 isPixel(ctx, 98,25, 0,255,0,255, 0);
+
+
 }
 </script>
 <img class="resource" id="red-16x16_1.png" src="image_red-16x16.png">
 
 <!-- [[[ test_2d.pattern.paint.repeatx.outside.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeatx.outside</p>
 <canvas height="50" id="c488" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_pattern_paint_repeatx_outside() {
 
 var canvas = document.getElementById('c488');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15764,27 +15093,28 @@ ctx.fillRect(0, 0, 100, 50);
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 16);
 
 isPixel(ctx, 1,1, 0,255,0,255, 0);
 isPixel(ctx, 98,1, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 isPixel(ctx, 98,48, 0,255,0,255, 0);
+
+
 }
 </script>
 <img class="resource" id="red-16x16_2.png" src="image_red-16x16.png">
 
 <!-- [[[ test_2d.pattern.paint.repeaty.basic.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeaty.basic</p>
 <canvas height="50" id="c489" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_paint_repeaty_basic() {
 
 var canvas = document.getElementById('c489');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -15806,18 +15136,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green-16x16_4.png" src="image_green-16x16.png">
 
 <!-- [[[ test_2d.pattern.paint.repeaty.coord1.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeaty.coord1</p>
 <canvas height="50" id="c490" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_pattern_paint_repeaty_coord1() {
 
 var canvas = document.getElementById('c490');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15832,28 +15160,28 @@ ctx.fillRect(0, 0, 16, 50);
 
 isPixel(ctx, 50,1, 0,255,0,255, 0);
 isPixel(ctx, 50,48, 0,255,0,255, 0);
 
 isPixel(ctx, 1,1, 0,255,0,255, 0);
 isPixel(ctx, 98,1, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 isPixel(ctx, 98,48, 0,255,0,255, 0);
+
+
 }
 </script>
 <img class="resource" id="red-16x16_3.png" src="image_red-16x16.png">
 
 <!-- [[[ test_2d.pattern.paint.repeaty.outside.html ]]] -->
 
 <p>Canvas test: 2d.pattern.paint.repeaty.outside</p>
 <canvas height="50" id="c491" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_pattern_paint_repeaty_outside() {
 
 var canvas = document.getElementById('c491');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -15864,16 +15192,18 @@ ctx.fillRect(0, 0, 100, 50);
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 16, 50);
 
 isPixel(ctx, 1,1, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 isPixel(ctx, 98,1, 0,255,0,255, 0);
 isPixel(ctx, 98,48, 0,255,0,255, 0);
+
+
 }
 </script>
 <img class="resource" id="red-16x16_4.png" src="image_red-16x16.png">
 
 <!-- [[[ test_2d.pattern.repeat.case.html ]]] -->
 
 <p>Canvas test: 2d.pattern.repeat.case</p>
 <canvas height="50" id="c492" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
@@ -15893,17 +15223,16 @@ var _thrown = undefined; try {
 </script>
 
 <!-- [[[ test_2d.pattern.repeat.empty.html ]]] -->
 
 <p>Canvas test: 2d.pattern.repeat.empty</p>
 <canvas height="50" id="c493" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_repeat_empty() {
 
 var canvas = document.getElementById('c493');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 var img = document.getElementById('green-1x1_1.png');
@@ -15922,17 +15251,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 <img class="resource" id="green-1x1_1.png" src="image_green-1x1.png">
 
 <!-- [[[ test_2d.pattern.repeat.null.html ]]] -->
 
 <p>Canvas test: 2d.pattern.repeat.null</p>
 <canvas height="50" id="c494" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_pattern_repeat_null() {
 
 var canvas = document.getElementById('c494');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 var img = document.getElementById('green-1x1_2.png');
@@ -16021,26 +15349,26 @@ var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#00f';
 ctx.fillRect(0, 0, 50, 25);
 ctx.fillStyle = '#0ff';
 ctx.fillRect(0, 0, 25, 10);
 
 todo(false, "test completed successfully"); // (Bug 483989)
 
-}
-
-</script>
+
+}
+</script>
+
 <!-- [[[ test_2d.shadow.alpha.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.alpha.1</p>
 <canvas height="50" id="c499" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_alpha_1() {
 
 var canvas = document.getElementById('c499');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowColor = 'rgba(255, 0, 0, 0.01)';
@@ -16054,18 +15382,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 4);
 </script>
 
 <!-- [[[ test_2d.shadow.alpha.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.alpha.2</p>
 <canvas height="50" id="c500" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_alpha_2() {
 
 var canvas = document.getElementById('c500');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowColor = 'rgba(0, 0, 255, 0.5)';
@@ -16079,18 +15405,16 @@ isPixel(ctx, 50,25, 127,0,127,255, 2);
 </script>
 
 <!-- [[[ test_2d.shadow.alpha.3.html ]]] -->
 
 <p>Canvas test: 2d.shadow.alpha.3</p>
 <canvas height="50" id="c501" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_alpha_3() {
 
 var canvas = document.getElementById('c501');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00'; // (work around broken Firefox globalAlpha caching)
@@ -16106,18 +15430,16 @@ isPixel(ctx, 50,25, 127,0,127,255, 2);
 </script>
 
 <!-- [[[ test_2d.shadow.alpha.4.html ]]] -->
 
 <p>Canvas test: 2d.shadow.alpha.4</p>
 <canvas height="50" id="c502" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_alpha_4() {
 
 var canvas = document.getElementById('c502');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00'; // (work around broken Firefox globalAlpha caching)
@@ -16133,18 +15455,16 @@ isPixel(ctx, 50,25, 127,0,127,255, 2);
 </script>
 
 <!-- [[[ test_2d.shadow.alpha.5.html ]]] -->
 
 <p>Canvas test: 2d.shadow.alpha.5</p>
 <canvas height="50" id="c503" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_alpha_5() {
 
 var canvas = document.getElementById('c503');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = 'rgba(64, 0, 0, 0.5)';
@@ -16326,17 +15646,16 @@ ok(ctx.shadowOffsetY === 2, "ctx.shadowO
 </script>
 
 <!-- [[[ test_2d.shadow.basic.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.basic.1</p>
 <canvas height="50" id="c510" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_basic_1() {
 
 var canvas = document.getElementById('c510');
 var ctx = canvas.getContext('2d');
 
 ctx.shadowColor = '#f00';
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -16347,17 +15666,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.basic.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.basic.2</p>
 <canvas height="50" id="c511" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_basic_2() {
 
 var canvas = document.getElementById('c511');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#f00';
@@ -16384,19 +15702,20 @@ ctx.fillStyle = '#ff0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowColor = '#00f';
 ctx.shadowOffsetY = 0;
 ctx.shadowBlur = 555.6;
 ctx.fillRect(-200, -200, 200, 400);
 
 todo(false, "test completed successfully"); // (Bug 483989)
 
-}
-
-</script>
+
+}
+</script>
+
 <!-- [[[ test_2d.shadow.blur.low.html ]]] -->
 
 <p>Canvas test: 2d.shadow.blur.low</p>
 <canvas height="50" id="c513" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_shadow_blur_low() {
 
@@ -16414,26 +15733,26 @@ for (var x = 0; x < 100; ++x) {
     ctx.clip();
     ctx.shadowBlur = x;
     ctx.fillRect(-200, -200, 500, 200);
     ctx.restore();
 }
 
 todo(false, "test completed successfully"); // (Bug 483989)
 
-}
-</script>
+
+}
+</script>
+
 <!-- [[[ test_2d.shadow.canvas.alpha.html ]]] -->
 
 <p>Canvas test: 2d.shadow.canvas.alpha</p>
 <canvas height="50" id="c514" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_canvas_alpha() {
 
 var canvas = document.getElementById('c514');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -16455,18 +15774,16 @@ isPixel(ctx, 50,25, 127,0,127,255, 2);
 <img class="resource" id="transparent50_1.png" src="image_transparent50.png">
 
 <!-- [[[ test_2d.shadow.canvas.basic.html ]]] -->
 
 <p>Canvas test: 2d.shadow.canvas.basic</p>
 <canvas height="50" id="c515" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_canvas_basic() {
 
 var canvas = document.getElementById('c515');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -16487,17 +15804,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.canvas.transparent.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.canvas.transparent.1</p>
 <canvas height="50" id="c516" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_canvas_transparent_1() {
 
 var canvas = document.getElementById('c516');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -16516,18 +15832,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.canvas.transparent.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.canvas.transparent.2</p>
 <canvas height="50" id="c517" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_canvas_transparent_2() {
 
 var canvas = document.getElementById('c517');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
 canvas2.width = 100;
 canvas2.height = 50;
@@ -16554,18 +15868,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.clip.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.clip.1</p>
 <canvas height="50" id="c518" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_clip_1() {
 
 var canvas = document.getElementById('c518');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 50, 50);
 ctx.fillStyle = '#f00';
@@ -16588,17 +15900,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.clip.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.clip.2</p>
 <canvas height="50" id="c519" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_clip_2() {
 
 var canvas = document.getElementById('c519');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 50, 50);
 ctx.fillStyle = '#0f0';
@@ -16621,18 +15932,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.clip.3.html ]]] -->
 
 <p>Canvas test: 2d.shadow.clip.3</p>
 <canvas height="50" id="c520" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_clip_3() {
 
 var canvas = document.getElementById('c520');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 50, 50);
 ctx.fillStyle = '#0f0';
@@ -16656,70 +15965,66 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.composite.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.composite.1</p>
 <canvas height="50" id="c521" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_composite_1() {
 
 var canvas = document.getElementById('c521');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalCompositeOperation = 'xor';
 ctx.shadowColor = '#f00';
 ctx.shadowOffsetX = 100;
 ctx.fillStyle = '#0f0';
 ctx.fillRect(-100, 0, 200, 50);
 
 isPixel(ctx, 50, 25, 0, 255, 0, 255, 2);
 
+
 }
 </script>
 
 <!-- [[[ test_2d.shadow.composite.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.composite.2</p>
 <canvas height="50" id="c522" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_composite_2() {
 
 var canvas = document.getElementById('c522');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalCompositeOperation = 'xor';
 ctx.shadowColor = '#f00';
 ctx.shadowBlur = 1;
 ctx.fillStyle = '#0f0';
 ctx.fillRect(-10, -10, 120, 70);
 
 isPixel(ctx, 50, 25, 0, 255, 0, 255, 2);
 
+
 }
 </script>
 
 <!-- [[[ test_2d.shadow.composite.3.html ]]] -->
 
 <p>Canvas test: 2d.shadow.composite.3</p>
 <canvas height="50" id="c523" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_composite_3() {
 
 var canvas = document.getElementById('c523');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.globalCompositeOperation = 'xor';
@@ -16734,18 +16039,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.shadow.composite.4.html ]]] -->
 
 <p>Canvas test: 2d.shadow.composite.4</p>
 <canvas height="50" id="c524" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_composite_4() {
 
 var canvas = document.getElementById('c524');
 var ctx = canvas.getContext('2d');
 
 ctx.globalCompositeOperation = 'destination-over';
 ctx.shadowColor = '#0f0';
 ctx.fillStyle = '#f00';
@@ -16758,18 +16061,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 2);
 </script>
 
 <!-- [[[ test_2d.shadow.gradient.alpha.html ]]] -->
 
 <p>Canvas test: 2d.shadow.gradient.alpha</p>
 <canvas height="50" id="c525" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_gradient_alpha() {
 
 var canvas = document.getElementById('c525');
 var ctx = canvas.getContext('2d');
 
 var gradient = ctx.createLinearGradient(0, 0, 100, 0);
 gradient.addColorStop(0, 'rgba(255,0,0,0.5)');
 gradient.addColorStop(1, 'rgba(255,0,0,0.5)');
@@ -16787,18 +16088,16 @@ isPixel(ctx, 50,25, 127,0,127,255, 2);
 </script>
 
 <!-- [[[ test_2d.shadow.gradient.basic.html ]]] -->
 
 <p>Canvas test: 2d.shadow.gradient.basic</p>
 <canvas height="50" id="c526" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_gradient_basic() {
 
 var canvas = document.getElementById('c526');
 var ctx = canvas.getContext('2d');
 
 var gradient = ctx.createLinearGradient(0, 0, 100, 0);
 gradient.addColorStop(0, '#f00');
 gradient.addColorStop(1, '#f00');
@@ -16816,17 +16115,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.gradient.transparent.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.gradient.transparent.1</p>
 <canvas height="50" id="c527" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_gradient_transparent_1() {
 
 var canvas = document.getElementById('c527');
 var ctx = canvas.getContext('2d');
 
 var gradient = ctx.createLinearGradient(0, 0, 100, 0);
 gradient.addColorStop(0, 'rgba(0,0,0,0)');
 gradient.addColorStop(1, 'rgba(0,0,0,0)');
@@ -16844,18 +16142,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.gradient.transparent.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.gradient.transparent.2</p>
 <canvas height="50" id="c528" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_gradient_transparent_2() {
 
 var canvas = document.getElementById('c528');
 var ctx = canvas.getContext('2d');
 
 var gradient = ctx.createLinearGradient(0, 0, 100, 0);
 gradient.addColorStop(0, '#f00');
 gradient.addColorStop(0.499, '#f00');
@@ -16879,18 +16175,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.image.alpha.html ]]] -->
 
 <p>Canvas test: 2d.shadow.image.alpha</p>
 <canvas height="50" id="c529" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_image_alpha() {
 
 var canvas = document.getElementById('c529');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowOffsetY = 50;
@@ -16905,18 +16199,16 @@ isPixel(ctx, 50,25, 127,0,127,255, 2);
 <img class="resource" id="transparent50_2.png" src="image_transparent50.png">
 
 <!-- [[[ test_2d.shadow.image.basic.html ]]] -->
 
 <p>Canvas test: 2d.shadow.image.basic</p>
 <canvas height="50" id="c530" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_image_basic() {
 
 var canvas = document.getElementById('c530');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowColor = '#0f0';
@@ -16931,18 +16223,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 <img class="resource" id="red_17.png" src="image_red.png">
 
 <!-- [[[ test_2d.shadow.image.scale.html ]]] -->
 
 <p>Canvas test: 2d.shadow.image.scale</p>
 <canvas height="50" id="c531" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_image_scale() {
 
 var canvas = document.getElementById('c531');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowOffsetY = 50;
@@ -16959,17 +16249,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 2);
 <img class="resource" id="redtransparent_2.png" src="image_redtransparent.png">
 
 <!-- [[[ test_2d.shadow.image.section.html ]]] -->
 
 <p>Canvas test: 2d.shadow.image.section</p>
 <canvas height="50" id="c532" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_image_section() {
 
 var canvas = document.getElementById('c532');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowOffsetY = 50;
@@ -16986,17 +16275,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 2);
 <img class="resource" id="redtransparent_3.png" src="image_redtransparent.png">
 
 <!-- [[[ test_2d.shadow.image.transparent.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.image.transparent.1</p>
 <canvas height="50" id="c533" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_image_transparent_1() {
 
 var canvas = document.getElementById('c533');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowColor = '#f00';
@@ -17011,18 +16299,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 <img class="resource" id="transparent_1.png" src="image_transparent.png">
 
 <!-- [[[ test_2d.shadow.image.transparent.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.image.transparent.2</p>
 <canvas height="50" id="c534" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_image_transparent_2() {
 
 var canvas = document.getElementById('c534');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 50, 50);
 ctx.fillStyle = '#f00';
@@ -17043,18 +16329,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 <img class="resource" id="redtransparent_4.png" src="image_redtransparent.png">
 
 <!-- [[[ test_2d.shadow.offset.negativeX.html ]]] -->
 
 <p>Canvas test: 2d.shadow.offset.negativeX</p>
 <canvas height="50" id="c535" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_offset_negativeX() {
 
 var canvas = document.getElementById('c535');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -17069,18 +16353,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.offset.negativeY.html ]]] -->
 
 <p>Canvas test: 2d.shadow.offset.negativeY</p>
 <canvas height="50" id="c536" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_offset_negativeY() {
 
 var canvas = document.getElementById('c536');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -17095,18 +16377,16 @@ isPixel(ctx, 50,37, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.offset.positiveX.html ]]] -->
 
 <p>Canvas test: 2d.shadow.offset.positiveX</p>
 <canvas height="50" id="c537" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_offset_positiveX() {
 
 var canvas = document.getElementById('c537');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -17121,18 +16401,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.offset.positiveY.html ]]] -->
 
 <p>Canvas test: 2d.shadow.offset.positiveY</p>
 <canvas height="50" id="c538" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_offset_positiveY() {
 
 var canvas = document.getElementById('c538');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.fillStyle = '#0f0';
@@ -17147,18 +16425,16 @@ isPixel(ctx, 50,37, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.outside.html ]]] -->
 
 <p>Canvas test: 2d.shadow.outside</p>
 <canvas height="50" id="c539" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_outside() {
 
 var canvas = document.getElementById('c539');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowColor = '#0f0';
@@ -17181,18 +16457,16 @@ isPixel(ctx, 50,37, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.pattern.alpha.html ]]] -->
 
 <p>Canvas test: 2d.shadow.pattern.alpha</p>
 <canvas height="50" id="c540" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_pattern_alpha() {
 
 var canvas = document.getElementById('c540');
 var ctx = canvas.getContext('2d');
 
 var pattern = ctx.createPattern(document.getElementById('transparent50_3.png'), 'repeat');
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
@@ -17209,18 +16483,16 @@ isPixel(ctx, 50,25, 127,0,127,255, 2);
 <img class="resource" id="transparent50_3.png" src="image_transparent50.png">
 
 <!-- [[[ test_2d.shadow.pattern.basic.html ]]] -->
 
 <p>Canvas test: 2d.shadow.pattern.basic</p>
 <canvas height="50" id="c541" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_pattern_basic() {
 
 var canvas = document.getElementById('c541');
 var ctx = canvas.getContext('2d');
 
 var pattern = ctx.createPattern(document.getElementById('red_18.png'), 'repeat');
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
@@ -17237,17 +16509,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 <img class="resource" id="red_18.png" src="image_red.png">
 
 <!-- [[[ test_2d.shadow.pattern.transparent.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.pattern.transparent.1</p>
 <canvas height="50" id="c542" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_pattern_transparent_1() {
 
 var canvas = document.getElementById('c542');
 var ctx = canvas.getContext('2d');
 
 var pattern = ctx.createPattern(document.getElementById('transparent_2.png'), 'repeat');
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -17264,18 +16535,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 <img class="resource" id="transparent_2.png" src="image_transparent.png">
 
 <!-- [[[ test_2d.shadow.pattern.transparent.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.pattern.transparent.2</p>
 <canvas height="50" id="c543" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_pattern_transparent_2() {
 
 var canvas = document.getElementById('c543');
 var ctx = canvas.getContext('2d');
 
 var pattern = ctx.createPattern(document.getElementById('redtransparent_5.png'), 'repeat');
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 50, 50);
@@ -17296,18 +16565,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 <img class="resource" id="redtransparent_5.png" src="image_redtransparent.png">
 
 <!-- [[[ test_2d.shadow.stroke.basic.html ]]] -->
 
 <p>Canvas test: 2d.shadow.stroke.basic</p>
 <canvas height="50" id="c544" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_stroke_basic() {
 
 var canvas = document.getElementById('c544');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -17328,17 +16595,16 @@ isPixel(ctx, 98,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.stroke.cap.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.stroke.cap.1</p>
 <canvas height="50" id="c545" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_stroke_cap_1() {
 
 var canvas = document.getElementById('c545');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -17362,18 +16628,16 @@ isPixel(ctx, 98,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.stroke.cap.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.stroke.cap.2</p>
 <canvas height="50" id="c546" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_stroke_cap_2() {
 
 var canvas = document.getElementById('c546');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -17395,17 +16659,16 @@ isPixel(ctx, 98,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.stroke.join.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.stroke.join.1</p>
 <canvas height="50" id="c547" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_stroke_join_1() {
 
 var canvas = document.getElementById('c547');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -17429,18 +16692,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.stroke.join.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.stroke.join.2</p>
 <canvas height="50" id="c548" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_stroke_join_2() {
 
 var canvas = document.getElementById('c548');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 50, 50);
 ctx.fillStyle = '#0f0';
@@ -17466,17 +16727,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.stroke.join.3.html ]]] -->
 
 <p>Canvas test: 2d.shadow.stroke.join.3</p>
 <canvas height="50" id="c549" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_shadow_stroke_join_3() {
 
 var canvas = document.getElementById('c549');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -17501,18 +16761,16 @@ isPixel(ctx, 98,48, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.transform.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.transform.1</p>
 <canvas height="50" id="c550" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_transform_1() {
 
 var canvas = document.getElementById('c550');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowOffsetY = 50;
@@ -17527,18 +16785,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.shadow.transform.2.html ]]] -->
 
 <p>Canvas test: 2d.shadow.transform.2</p>
 <canvas height="50" id="c551" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_shadow_transform_2() {
 
 var canvas = document.getElementById('c551');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.shadowOffsetY = 50;
@@ -17554,17 +16810,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.state.saverestore.bitmap.html ]]] -->
 
 <p>Canvas test: 2d.state.saverestore.bitmap</p>
 <!-- Testing: save()/restore() does not affect the current bitmap -->
 <canvas height="50" id="c552" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_state_saverestore_bitmap() {
 
 var canvas = document.getElementById('c552');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.save();
@@ -17579,17 +16834,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.state.saverestore.clip.html ]]] -->
 
 <p>Canvas test: 2d.state.saverestore.clip</p>
 <!-- Testing: save()/restore() affects the clipping path -->
 <canvas height="50" id="c553" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_state_saverestore_clip() {
 
 var canvas = document.getElementById('c553');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.save();
@@ -17830,17 +17084,16 @@ ctx.restore();
 
 <!-- [[[ test_2d.state.saverestore.path.html ]]] -->
 
 <p>Canvas test: 2d.state.saverestore.path</p>
 <!-- Testing: save()/restore() does not affect the current path -->
 <canvas height="50" id="c561" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_state_saverestore_path() {
 
 var canvas = document.getElementById('c561');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.save();
@@ -18071,17 +17324,16 @@ ctx.restore();
 
 <!-- [[[ test_2d.state.saverestore.transformation.html ]]] -->
 
 <p>Canvas test: 2d.state.saverestore.transformation</p>
 <!-- Testing: save()/restore() affects the current transformation matrix -->
 <canvas height="50" id="c569" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_state_saverestore_transformation() {
 
 var canvas = document.getElementById('c569');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.save();
@@ -18118,17 +17370,16 @@ ok(ctx.lineWidth == 0.5, "ctx.lineWidth 
 </script>
 
 <!-- [[[ test_2d.strokeRect.basic.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.basic</p>
 <canvas height="50" id="c571" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_basic() {
 
 var canvas = document.getElementById('c571');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.strokeRect(25, 24, 50, 2);
@@ -18139,17 +17390,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.clip.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.clip</p>
 <canvas height="50" id="c572" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_clip() {
 
 var canvas = document.getElementById('c572');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18171,17 +17421,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.globalalpha.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.globalalpha</p>
 <canvas height="50" id="c573" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_globalalpha() {
 
 var canvas = document.getElementById('c573');
 var ctx = canvas.getContext('2d');
 
 ctx.globalAlpha = 0;
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
@@ -18193,17 +17442,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.globalcomposite.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.globalcomposite</p>
 <canvas height="50" id="c574" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_globalcomposite() {
 
 var canvas = document.getElementById('c574');
 var ctx = canvas.getContext('2d');
 
 ctx.globalCompositeOperation = 'source-in';
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
@@ -18215,17 +17463,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.negative.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.negative</p>
 <canvas height="50" id="c575" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_negative() {
 
 var canvas = document.getElementById('c575');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#0f0';
@@ -18245,25 +17492,21 @@ isPixel(ctx, 75,37, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.strokeRect.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.nonfinite</p>
 <!-- Testing: strokeRect() with Infinity/NaN is ignored -->
 <canvas height="50" id="c576" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_nonfinite() {
 
 var canvas = document.getElementById('c576');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 150;
 ctx.strokeRect(Infinity, 0, 100, 50);
 ctx.strokeRect(-Infinity, 0, 100, 50);
 ctx.strokeRect(NaN, 0, 100, 50);
@@ -18285,32 +17528,26 @@ ctx.strokeRect(Infinity, 0, Infinity, In
 ctx.strokeRect(Infinity, 0, 100, Infinity);
 ctx.strokeRect(0, Infinity, Infinity, 50);
 ctx.strokeRect(0, Infinity, Infinity, Infinity);
 ctx.strokeRect(0, Infinity, 100, Infinity);
 ctx.strokeRect(0, 0, Infinity, Infinity);
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.strokeRect.path.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.path</p>
 <canvas height="50" id="c577" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_path() {
 
 var canvas = document.getElementById('c577');
 var ctx = canvas.getContext('2d');
 
 ctx.beginPath();
 ctx.rect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
@@ -18325,17 +17562,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.shadow.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.shadow</p>
 <canvas height="50" id="c578" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_shadow() {
 
 var canvas = document.getElementById('c578');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18362,17 +17598,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.transform.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.transform</p>
 <canvas height="50" id="c579" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_transform() {
 
 var canvas = document.getElementById('c579');
 var ctx = canvas.getContext('2d');
 
 ctx.scale(10, 10);
 ctx.translate(0, 5);
 ctx.strokeStyle = '#0f0';
@@ -18385,17 +17620,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.zero.1.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.zero.1</p>
 <canvas height="50" id="c580" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_zero_1() {
 
 var canvas = document.getElementById('c580');
 var ctx = canvas.getContext('2d');
 
 if (!IsD2DEnabled()) {
     // Disabled for D2D until we can figure out Bug 587554.
     ctx.strokeStyle = '#f00';
@@ -18408,18 +17642,16 @@ if (!IsD2DEnabled()) {
 </script>
 
 <!-- [[[ test_2d.strokeRect.zero.2.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.zero.2</p>
 <canvas height="50" id="c581" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
-
 function test_2d_strokeRect_zero_2() {
 
 var canvas = document.getElementById('c581');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 250;
 ctx.lineCap = 'round';
@@ -18432,17 +17664,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.zero.3.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.zero.3</p>
 <canvas height="50" id="c582" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_zero_3() {
 
 var canvas = document.getElementById('c582');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.strokeRect(0, 25, 100, 0);
@@ -18453,17 +17684,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.zero.4.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.zero.4</p>
 <canvas height="50" id="c583" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_zero_4() {
 
 var canvas = document.getElementById('c583');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 250;
 ctx.lineCap = 'round';
@@ -18475,17 +17705,16 @@ isPixel(ctx, 50,25, 0,0,0,0, 0);
 </script>
 
 <!-- [[[ test_2d.strokeRect.zero.5.html ]]] -->
 
 <p>Canvas test: 2d.strokeRect.zero.5</p>
 <canvas height="50" id="c584" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_strokeRect_zero_5() {
 
 var canvas = document.getElementById('c584');
 var ctx = canvas.getContext('2d');
 
 ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 250;
 ctx.lineJoin = 'round';
@@ -18611,17 +17840,16 @@ ok(ctx.textBaseline === 'top', "ctx.text
 
 <!-- [[[ test_2d.transformation.order.html ]]] -->
 
 <p>Canvas test: 2d.transformation.order</p>
 <!-- Testing: Transformations are applied in the right order -->
 <canvas height="50" id="c586" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_order() {
 
 var canvas = document.getElementById('c586');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18637,17 +17865,16 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.rotate.direction.html ]]] -->
 
 <p>Canvas test: 2d.transformation.rotate.direction</p>
 <!-- Testing: rotate() is clockwise -->
 <canvas height="50" id="c587" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_rotate_direction() {
 
 var canvas = document.getElementById('c587');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18662,55 +17889,45 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.rotate.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.transformation.rotate.nonfinite</p>
 <!-- Testing: rotate() with Infinity/NaN is ignored -->
 <canvas height="50" id="c588" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_rotate_nonfinite() {
 
 var canvas = document.getElementById('c588');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
 ctx.translate(100, 10);
 ctx.rotate(Infinity);
 ctx.rotate(-Infinity);
 ctx.rotate(NaN);
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(-100, -10, 100, 50);
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.transformation.rotate.radians.html ]]] -->
 
 <p>Canvas test: 2d.transformation.rotate.radians</p>
 <!-- Testing: rotate() uses radians -->
 <canvas height="50" id="c589" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_rotate_radians() {
 
 var canvas = document.getElementById('c589');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18725,17 +17942,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.rotate.wrap.html ]]] -->
 
 <p>Canvas test: 2d.transformation.rotate.wrap</p>
 <!-- Testing: rotate() wraps large positive values correctly -->
 <canvas height="50" id="c590" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_rotate_wrap() {
 
 var canvas = document.getElementById('c590');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18755,17 +17971,16 @@ isPixel(ctx, 98,47, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.rotate.wrapnegative.html ]]] -->
 
 <p>Canvas test: 2d.transformation.rotate.wrapnegative</p>
 <!-- Testing: rotate() wraps large negative values correctly -->
 <canvas height="50" id="c591" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_rotate_wrapnegative() {
 
 var canvas = document.getElementById('c591');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18782,17 +17997,16 @@ isPixel(ctx, 98,47, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.rotate.zero.html ]]] -->
 
 <p>Canvas test: 2d.transformation.rotate.zero</p>
 <!-- Testing: rotate() by 0 does nothing -->
 <canvas height="50" id="c592" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_rotate_zero() {
 
 var canvas = document.getElementById('c592');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18807,17 +18021,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.scale.basic.html ]]] -->
 
 <p>Canvas test: 2d.transformation.scale.basic</p>
 <!-- Testing: scale() works -->
 <canvas height="50" id="c593" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_scale_basic() {
 
 var canvas = document.getElementById('c593');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18832,17 +18045,16 @@ isPixel(ctx, 90,40, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.scale.large.html ]]] -->
 
 <p>Canvas test: 2d.transformation.scale.large</p>
 <!-- Testing: scale() with large scale factors works -->
 <canvas height="50" id="c594" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_scale_large() {
 
 var canvas = document.getElementById('c594');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18857,17 +18069,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.scale.multiple.html ]]] -->
 
 <p>Canvas test: 2d.transformation.scale.multiple</p>
 <!-- Testing: Multiple scale()s combine -->
 <canvas height="50" id="c595" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_scale_multiple() {
 
 var canvas = document.getElementById('c595');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18883,17 +18094,16 @@ isPixel(ctx, 90,40, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.scale.negative.html ]]] -->
 
 <p>Canvas test: 2d.transformation.scale.negative</p>
 <!-- Testing: scale() with negative scale factors works -->
 <canvas height="50" id="c596" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_scale_negative() {
 
 var canvas = document.getElementById('c596');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18917,25 +18127,21 @@ isPixel(ctx, 75,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.scale.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.transformation.scale.nonfinite</p>
 <!-- Testing: scale() with Infinity/NaN is ignored -->
 <canvas height="50" id="c597" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_scale_nonfinite() {
 
 var canvas = document.getElementById('c597');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
 ctx.translate(100, 10);
 ctx.scale(Infinity, 0.1);
 ctx.scale(-Infinity, 0.1);
 ctx.scale(NaN, 0.1);
 ctx.scale(0.1, Infinity);
@@ -18943,33 +18149,27 @@ ctx.scale(0.1, -Infinity);
 ctx.scale(0.1, NaN);
 ctx.scale(Infinity, Infinity);
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(-100, -10, 100, 50);
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.transformation.scale.zero.html ]]] -->
 
 <p>Canvas test: 2d.transformation.scale.zero</p>
 <!-- Testing: scale() with a scale factor of zero works -->
 <canvas height="50" id="c598" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_scale_zero() {
 
 var canvas = document.getElementById('c598');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -18993,17 +18193,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 </script>
 
 <!-- [[[ test_2d.transformation.setTransform.multiple.html ]]] -->
 
 <p>Canvas test: 2d.transformation.setTransform.multiple</p>
 <canvas height="50" id="c599" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_setTransform_multiple() {
 
 var canvas = document.getElementById('c599');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -19019,25 +18218,21 @@ isPixel(ctx, 75,35, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.setTransform.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.transformation.setTransform.nonfinite</p>
 <!-- Testing: setTransform() with Infinity/NaN is ignored -->
 <canvas height="50" id="c600" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_setTransform_nonfinite() {
 
 var canvas = document.getElementById('c600');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
 ctx.translate(100, 10);
 ctx.setTransform(Infinity, 0, 0, 0, 0, 0);
 ctx.setTransform(-Infinity, 0, 0, 0, 0, 0);
 ctx.setTransform(NaN, 0, 0, 0, 0, 0);
 ctx.setTransform(0, Infinity, 0, 0, 0, 0);
@@ -19113,32 +18308,26 @@ ctx.setTransform(0, 0, 0, Infinity, Infi
 ctx.setTransform(0, 0, 0, Infinity, 0, Infinity);
 ctx.setTransform(0, 0, 0, 0, Infinity, Infinity);
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(-100, -10, 100, 50);
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.transformation.setTransform.skewed.html ]]] -->
 
 <p>Canvas test: 2d.transformation.setTransform.skewed</p>
 <canvas height="50" id="c601" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_setTransform_skewed() {
 
 var canvas = document.getElementById('c601');
 var ctx = canvas.getContext('2d');
 
 // Create green with a red square ring inside it
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -19175,17 +18364,16 @@ isPixel(ctx, 61,31, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.transform.identity.html ]]] -->
 
 <p>Canvas test: 2d.transformation.transform.identity</p>
 <!-- Testing: transform() with the identity matrix does nothing -->
 <canvas height="50" id="c602" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_transform_identity() {
 
 var canvas = document.getElementById('c602');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -19200,17 +18388,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.transform.multiply.html ]]] -->
 
 <p>Canvas test: 2d.transformation.transform.multiply</p>
 <!-- Testing: transform() multiplies the CTM -->
 <canvas height="50" id="c603" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_transform_multiply() {
 
 var canvas = document.getElementById('c603');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -19226,25 +18413,21 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.transform.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.transformation.transform.nonfinite</p>
 <!-- Testing: transform() with Infinity/NaN is ignored -->
 <canvas height="50" id="c604" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_transform_nonfinite() {
 
 var canvas = document.getElementById('c604');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
 ctx.translate(100, 10);
 ctx.transform(Infinity, 0, 0, 0, 0, 0);
 ctx.transform(-Infinity, 0, 0, 0, 0, 0);
 ctx.transform(NaN, 0, 0, 0, 0, 0);
 ctx.transform(0, Infinity, 0, 0, 0, 0);
@@ -19320,33 +18503,27 @@ ctx.transform(0, 0, 0, Infinity, Infinit
 ctx.transform(0, 0, 0, Infinity, 0, Infinity);
 ctx.transform(0, 0, 0, 0, Infinity, Infinity);
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(-100, -10, 100, 50);
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.transformation.transform.skewed.html ]]] -->
 
 <p>Canvas test: 2d.transformation.transform.skewed</p>
 <!-- Testing: transform() with skewy matrix transforms correctly -->
 <canvas height="50" id="c605" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_transform_skewed() {
 
 var canvas = document.getElementById('c605');
 var ctx = canvas.getContext('2d');
 
 // Create green with a red square ring inside it
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
@@ -19383,17 +18560,16 @@ isPixel(ctx, 61,31, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.translate.basic.html ]]] -->
 
 <p>Canvas test: 2d.transformation.translate.basic</p>
 <!-- Testing: translate() works -->
 <canvas height="50" id="c606" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_translate_basic() {
 
 var canvas = document.getElementById('c606');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
@@ -19408,25 +18584,21 @@ isPixel(ctx, 90,40, 0,255,0,255, 0);
 
 <!-- [[[ test_2d.transformation.translate.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.transformation.translate.nonfinite</p>
 <!-- Testing: translate() with Infinity/NaN is ignored -->
 <canvas height="50" id="c607" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_transformation_translate_nonfinite() {
 
 var canvas = document.getElementById('c607');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 100, 50);
 
 ctx.translate(100, 10);
 ctx.translate(Infinity, 0.1);
 ctx.translate(-Infinity, 0.1);
 ctx.translate(NaN, 0.1);
 ctx.translate(0.1, Infinity);
@@ -19434,21 +18606,16 @@ ctx.translate(0.1, -Infinity);
 ctx.translate(0.1, NaN);
 ctx.translate(Infinity, Infinity);
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(-100, -10, 100, 50);
 
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_2d.type.exists.html ]]] -->
 
 <p>Canvas test: 2d.type.exists</p>
 <!-- Testing: The 2D context interface is a property of 'window' -->
@@ -19468,17 +18635,16 @@ ok(window.CanvasRenderingContext2D, "win
 
 <!-- [[[ test_2d.type.extend.html ]]] -->
 
 <p>Canvas test: 2d.type.extend</p>
 <!-- Testing: Interface methods can be added -->
 <canvas height="50" id="c610" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_type_extend() {
 
 var canvas = document.getElementById('c610');
 var ctx = canvas.getContext('2d');
 
 window.CanvasRenderingContext2D.prototype.fillRectGreen = function (x, y, w, h)
 {
     this.fillStyle = '#0f0';
@@ -19523,17 +18689,16 @@ window.CanvasRenderingContext2D.prototyp
 
 <!-- [[[ test_2d.type.replace.html ]]] -->
 
 <p>Canvas test: 2d.type.replace</p>
 <!-- Testing: Interface methods can be overridden -->
 <canvas height="50" id="c612" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_2d_type_replace() {
 
 var canvas = document.getElementById('c612');
 var ctx = canvas.getContext('2d');
 
 var fillRect = window.CanvasRenderingContext2D.prototype.fillRect;
 window.CanvasRenderingContext2D.prototype.fillRect = function (x, y, w, h)
 {
@@ -19602,17 +18767,17 @@ ok(ctx.createLinearGradient(0, 0, 0, 0).
 <!-- [[[ test_bug397524.html ]]] -->
 
 <p>Test for Bug 397524</p>
 <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=397524" target="_blank">Mozilla Bug 397524</a>
 <p id="display">
   <canvas height="1" id="canvas1" width="1"></canvas>
   <canvas height="1" id="canvas2" width="1"></canvas>
   <canvas height="1" id="canvas3" width="1"></canvas>
-  <img ,="" id="i1" src="image_green-1x1.png">
+  <img id="i1" src="image_green-1x1.png">
   <img id="i2" src="http://example.com/tests/content/canvas/test/image_green-1x1.png">
   <img id="i3" src="image_green-redirect">
 </p>
 <div id="content" style="display: none">
   
 </div>
 <pre id="test"><script class="testbody" type="text/javascript">
 
@@ -19726,156 +18891,108 @@ var _thrown = undefined; try {
 <canvas height="50" id="c617" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_casesensitive() {
 
 var canvas = document.getElementById('c617');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ok(canvas.getContext('2D') === null, "canvas.getContext('2D') === null");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_context.emptystring.html ]]] -->
 
 <p>Canvas test: context.emptystring - bug 401788</p>
 <!-- Testing: getContext with empty string returns null -->
 <canvas height="50" id="c618" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_emptystring() {
 
 var canvas = document.getElementById('c618');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ok(canvas.getContext("") === null, "canvas.getContext(\"\") === null");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_context.unrecognised.badname.html ]]] -->
 
 <p>Canvas test: context.unrecognised.badname - bug 401788</p>
 <!-- Testing: getContext with unrecognised context name returns null -->
 <canvas height="50" id="c619" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_unrecognised_badname() {
 
 var canvas = document.getElementById('c619');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ok(canvas.getContext('This is not an implemented context in any real browser') === null, "canvas.getContext('This is not an implemented context in any real browser') === null");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_context.unrecognised.badsuffix.html ]]] -->
 
 <p>Canvas test: context.unrecognised.badsuffix - bug 401788</p>
 <!-- Testing: Context name "2d" plus a suffix is unrecognised -->
 <canvas height="50" id="c620" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_unrecognised_badsuffix() {
 
 var canvas = document.getElementById('c620');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ok(canvas.getContext("2d#") === null, "canvas.getContext(\"2d#\") === null");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_context.unrecognised.nullsuffix.html ]]] -->
 
 <p>Canvas test: context.unrecognised.nullsuffix - bug 401788</p>
 <!-- Testing: Context name "2d" plus a "\0" suffix is unrecognised -->
 <canvas height="50" id="c621" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_unrecognised_nullsuffix() {
 
 var canvas = document.getElementById('c621');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ok(canvas.getContext("2d\0") === null, "canvas.getContext(\"2d\\0\") === null");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_context.unrecognised.unicode.html ]]] -->
 
 <p>Canvas test: context.unrecognised.unicode - bug 401788</p>
 <!-- Testing: Context name which kind of looks like "2d" is unrecognised -->
 <canvas height="50" id="c622" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_unrecognised_unicode() {
 
 var canvas = document.getElementById('c622');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 ok(canvas.getContext("2\uFF44") === null, "canvas.getContext(\"2\\uFF44\") === null"); // Fullwidth Latin Small Letter D
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_fallback.basic.html ]]] -->
 
 <p>Canvas test: fallback.basic</p>
 <!-- Testing: Fallback content is inserted into the DOM -->
@@ -19931,17 +19048,16 @@ ok(canvas.childNodes.length == 2, "canva
 
 <!-- [[[ test_initial.colour.html ]]] -->
 
 <p>Canvas test: initial.colour</p>
 <!-- Testing: Initial state is transparent black -->
 <canvas height="50" id="c626" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_initial_colour() {
 
 var canvas = document.getElementById('c626');
 var ctx = canvas.getContext('2d');
 
 isPixel(ctx, 20,20, 0,0,0,0, 0);
 
 
@@ -20029,17 +19145,16 @@ ok(ctx.globalCompositeOperation === defa
 
 <!-- [[[ test_initial.reset.clip.html ]]] -->
 
 <p>Canvas test: initial.reset.clip</p>
 <!-- Testing: Resetting the canvas state resets the current clip region -->
 <canvas height="50" id="c628" style="background: #f00" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_initial_reset_clip() {
 
 var canvas = document.getElementById('c628');
 var ctx = canvas.getContext('2d');
 
 canvas.width = 100;
 ctx.rect(0, 0, 1, 1);
 ctx.clip();
@@ -20054,17 +19169,16 @@ isPixel(ctx, 20,20, 0,255,0,255, 0);
 
 <!-- [[[ test_initial.reset.different.html ]]] -->
 
 <p>Canvas test: initial.reset.different</p>
 <!-- Testing: Changing size resets canvas to transparent black -->
 <canvas height="50" id="c629" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_initial_reset_different() {
 
 var canvas = document.getElementById('c629');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 50, 50);
 isPixel(ctx, 20,20, 255,0,0,255, 0);
@@ -20077,17 +19191,16 @@ isPixel(ctx, 20,20, 0,0,0,0, 0);
 
 <!-- [[[ test_initial.reset.gradient.html ]]] -->
 
 <p>Canvas test: initial.reset.gradient</p>
 <!-- Testing: Resetting the canvas state does not invalidate any existing gradients -->
 <canvas height="50" id="c630" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_initial_reset_gradient() {
 
 var canvas = document.getElementById('c630');
 var ctx = canvas.getContext('2d');
 
 canvas.width = 50;
 var g = ctx.createLinearGradient(0, 0, 100, 0);
 g.addColorStop(0, '#0f0');
@@ -20105,17 +19218,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_initial.reset.path.html ]]] -->
 
 <p>Canvas test: initial.reset.path</p>
 <!-- Testing: Resetting the canvas state resets the current path -->
 <canvas height="50" id="c631" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_initial_reset_path() {
 
 var canvas = document.getElementById('c631');
 var ctx = canvas.getContext('2d');
 
 canvas.width = 100;
 ctx.rect(0, 0, 100, 50);
 canvas.width = 100;
@@ -20129,17 +19241,16 @@ isPixel(ctx, 20,20, 0,0,0,0, 0);
 
 <!-- [[[ test_initial.reset.pattern.html ]]] -->
 
 <p>Canvas test: initial.reset.pattern</p>
 <!-- Testing: Resetting the canvas state does not invalidate any existing patterns -->
 <canvas height="50" id="c632" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_initial_reset_pattern() {
 
 var canvas = document.getElementById('c632');
 var ctx = canvas.getContext('2d');
 
 canvas.width = 50;
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 50, 50);
@@ -20157,17 +19268,16 @@ isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 <!-- [[[ test_initial.reset.same.html ]]] -->
 
 <p>Canvas test: initial.reset.same</p>
 <!-- Testing: Setting size (not changing the value) resets canvas to transparent black -->
 <canvas height="50" id="c633" style="background: #0f0" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_initial_reset_same() {
 
 var canvas = document.getElementById('c633');
 var ctx = canvas.getContext('2d');
 
 canvas.width = 100;
 ctx.fillStyle = '#f00';
 ctx.fillRect(0, 0, 50, 50);
@@ -20181,17 +19291,16 @@ isPixel(ctx, 20,20, 0,0,0,0, 0);
 
 <!-- [[[ test_initial.reset.transform.html ]]] -->
 
 <p>Canvas test: initial.reset.transform</p>
 <!-- Testing: Resetting the canvas state resets the current transformation matrix -->
 <canvas height="50" id="c634" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-
 function test_initial_reset_transform() {
 
 var canvas = document.getElementById('c634');
 var ctx = canvas.getContext('2d');
 
 canvas.width = 100;
 ctx.scale(0, 0);
 canvas.width = 100;
@@ -20875,82 +19984,58 @@ if (!_deferred) SimpleTest.finish();
 <canvas height="50" id="c664" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_toDataURL_arguments_1() {
 
 var canvas = document.getElementById('c664');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 var data = canvas.toDataURL('image/png', 'another argument that should not raise an exception');
 ok(/^data:image\/png[;,]/.test(data), "data =~ /^data:image\\/png[;,]/");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_toDataURL.arguments.2.html ]]] -->
 
 <p>Canvas test: toDataURL.arguments.2 - bug 401795</p>
 <!-- Testing: toDataURL ignores extra arguments -->
 <canvas height="50" id="c665" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_toDataURL_arguments_2() {
 
 var canvas = document.getElementById('c665');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 var data = canvas.toDataURL('image/png', 'another argument that should not raise an exception', 'and another');
 ok(/^data:image\/png[;,]/.test(data), "data =~ /^data:image\\/png[;,]/");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_toDataURL.arguments.3.html ]]] -->
 
 <p>Canvas test: toDataURL.arguments.3 - bug 401795</p>
 <!-- Testing: toDataURL ignores extra arguments -->
 <canvas height="50" id="c666" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_toDataURL_arguments_3() {
 
 var canvas = document.getElementById('c666');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 // More arguments that should not raise exceptions
 var data = canvas.toDataURL('image/png', null, null, null);
 ok(/^data:image\/png[;,]/.test(data), "data =~ /^data:image\\/png[;,]/");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_toDataURL.complexcolours.html ]]] -->
 
 <p>Canvas test: toDataURL.complexcolours</p>
 <!-- Testing: toDataURL handles non-primary and non-solid colours correctly -->
@@ -21015,27 +20100,19 @@ ok(/^data:image\/png[;,]/.test(data), "d
 <canvas height="50" id="c669" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_toDataURL_lowercase() {
 
 var canvas = document.getElementById('c669');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 var data = canvas.toDataURL('ImAgE/PnG');
 ok(/^data:image\/png[;,]/.test(data), "data =~ /^data:image\\/png[;,]/");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_toDataURL.nocontext.html ]]] -->
 
 <p>Canvas test: toDataURL.nocontext</p>
 <!-- Testing: toDataURL works before any context has been got -->
@@ -21043,17 +20120,16 @@ ok(!_thrown_outer, ctx.canvas.id + ' sho
 <script>
 
 function test_toDataURL_nocontext() {
 
 var canvas = document.getElementById('c670');
 var ctx = canvas.getContext('2d');
 
 var canvas2 = document.createElement('canvas');
-
 var data = canvas2.toDataURL();
 ok(/^data:image\/png[;,]/.test(data), "data =~ /^data:image\\/png[;,]/");
 
 
 }
 </script>
 
 <!-- [[[ test_toDataURL.png.html ]]] -->
@@ -21122,27 +20198,19 @@ img.src = data;
 <canvas height="50" id="c673" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_toDataURL_unrecognised() {
 
 var canvas = document.getElementById('c673');
 var ctx = canvas.getContext('2d');
 
-var _thrown_outer = false;
-try {
-
 var data = canvas.toDataURL('image/example');
 ok(/^data:image\/png[;,]/.test(data), "data =~ /^data:image\\/png[;,]/");
 
-} catch (e) {
-    _thrown_outer = true;
-}
-ok(!_thrown_outer, ctx.canvas.id + ' should not throw exception');
-
 
 }
 </script>
 
 <!-- [[[ test_toDataURL.zerosize.html ]]] -->
 
 <p>Canvas test: toDataURL.zerosize</p>
 <!-- Testing: toDataURL on zero-size canvas returns 'data:,' -->
@@ -22267,27 +21335,27 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_fillStyle_parse_invalid_hsla_1");
  }
  try {
   test_2d_fillStyle_parse_invalid_hsla_2();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_fillStyle_parse_invalid_hsla_2");
  }
  try {
-   test_2d_fillStyle_parse_invalid_name_1()
+  test_2d_fillStyle_parse_invalid_name_1();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_fillStyle_parse_invalid_name_1");
  }
  try {
-   test_2d_fillStyle_parse_invalid_name_2()
+  test_2d_fillStyle_parse_invalid_name_2();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_fillStyle_parse_invalid_name_2");
  }
  try {
-   test_2d_fillStyle_parse_invalid_name_3()
+  test_2d_fillStyle_parse_invalid_name_3();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_fillStyle_parse_invalid_name_3");
  }
  try {
   test_2d_fillStyle_parse_invalid_rgb_1();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_fillStyle_parse_invalid_rgb_1");
  }
@@ -23387,17 +22455,17 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_path_isPointInPath_outside");
  }
  try {
   test_2d_path_isPointInPath_subpath();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_isPointInPath_subpath");
  }
  try {
-   test_2d_path_isPointInPath_transform_1();
+  test_2d_path_isPointInPath_transform_1();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_isPointInPath_transform_1");
  }
  try {
   test_2d_path_isPointInPath_transform_2();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_isPointInPath_transform_2");
  }
