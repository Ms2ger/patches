diff --git a/gfx/cairo/cairo/src/cairo-dwrite-font.cpp b/gfx/cairo/cairo/src/cairo-dwrite-font.cpp
--- a/gfx/cairo/cairo/src/cairo-dwrite-font.cpp
+++ b/gfx/cairo/cairo/src/cairo-dwrite-font.cpp
@@ -31,7 +31,7 @@
  * The Initial Developer of the Original Code is the Mozilla Foundation
  *
  * Contributor(s):
- *	Bas Schouten <bschouten@mozilla.com>
+ *   Bas Schouten <bschouten@mozilla.com>
  */
 
 extern "C" {
@@ -146,9 +146,9 @@
 _cairo_dwrite_font_face_destroy (void *font_face);
 
 static cairo_status_t
-_cairo_dwrite_font_face_scaled_font_create (void			*abstract_face,
-					    const cairo_matrix_t	*font_matrix,
-					    const cairo_matrix_t	*ctm,
+_cairo_dwrite_font_face_scaled_font_create (void *abstract_face,
+					    const cairo_matrix_t *font_matrix,
+					    const cairo_matrix_t *ctm,
 					    const cairo_font_options_t *options,
 					    cairo_scaled_font_t **font);
 
@@ -334,11 +334,11 @@
 }
 
 static cairo_status_t
-_cairo_dwrite_font_face_scaled_font_create (void			*abstract_face,
-					    const cairo_matrix_t	*font_matrix,
-					    const cairo_matrix_t	*ctm,
+_cairo_dwrite_font_face_scaled_font_create (void        		*abstract_face,
+					    const cairo_matrix_t        *font_matrix,
+					    const cairo_matrix_t        *ctm,
 					    const cairo_font_options_t  *options,
-					    cairo_scaled_font_t **font)
+					    cairo_scaled_font_t        **font)
 {
     cairo_dwrite_font_face_t *font_face = static_cast<cairo_dwrite_font_face_t*>(abstract_face);
 
@@ -373,8 +373,8 @@
 }
 
 static cairo_int_status_t
-_cairo_dwrite_scaled_glyph_init(void			     *scaled_font,
-				cairo_scaled_glyph_t	     *scaled_glyph,
+_cairo_dwrite_scaled_glyph_init(void    		     *scaled_font,
+				cairo_scaled_glyph_t         *scaled_glyph,
 				cairo_scaled_glyph_info_t    info)
 {
     cairo_dwrite_scaled_font_t *scaled_dwrite_font = static_cast<cairo_dwrite_scaled_font_t*>(scaled_font);
@@ -402,8 +402,8 @@
 }
 
 unsigned long
-_cairo_dwrite_ucs4_to_index(void			     *scaled_font,
-			    uint32_t		      ucs4)
+_cairo_dwrite_ucs4_to_index(void     *scaled_font,
+			    uint32_t  ucs4)
 {
     cairo_dwrite_scaled_font_t *dwritesf = static_cast<cairo_dwrite_scaled_font_t*>(scaled_font);
     cairo_dwrite_font_face_t *face = reinterpret_cast<cairo_dwrite_font_face_t*>(dwritesf->base.font_face);
diff --git a/gfx/cairo/cairo/src/cairo-dwrite-private.h b/gfx/cairo/cairo/src/cairo-dwrite-private.h
--- a/gfx/cairo/cairo/src/cairo-dwrite-private.h
+++ b/gfx/cairo/cairo/src/cairo-dwrite-private.h
@@ -1,4 +1,4 @@
-/* -*- Mode: c; tab-width: 8; c-basic-offset: 4; indent-tabs-mode: t; -*- */
+/* -*- Mode: c; tab-width: 8; c-basic-offset: 4; indent-tabs-mode: nil; -*- */
 /* Cairo - a vector graphics library with display and print output
  *
  * Copyright © 2010 Mozilla Foundation
@@ -31,7 +31,7 @@
  * The Initial Developer of the Original Code is the Mozilla Foundation
  *
  * Contributor(s):
- *	Bas Schouten <bschouten@mozilla.com>
+ *   Bas Schouten <bschouten@mozilla.com>
  */
 #include <dwrite.h>
 #include <D2d1.h>
@@ -50,46 +50,46 @@
 public:
     static IDWriteFactory *Instance()
     {
-	if (!mFactoryInstance) {
-	    DWriteCreateFactoryFunc createDWriteFactory = (DWriteCreateFactoryFunc)
-		GetProcAddress(LoadLibraryW(L"dwrite.dll"), "DWriteCreateFactory");
-	    if (createDWriteFactory) {
-		HRESULT hr = createDWriteFactory(
-		    DWRITE_FACTORY_TYPE_SHARED,
-		    __uuidof(IDWriteFactory),
-		    reinterpret_cast<IUnknown**>(&mFactoryInstance));
-		assert(SUCCEEDED(hr));
-	    }
-	}
-	return mFactoryInstance;
+        if (!mFactoryInstance) {
+            DWriteCreateFactoryFunc createDWriteFactory = (DWriteCreateFactoryFunc)
+                GetProcAddress(LoadLibraryW(L"dwrite.dll"), "DWriteCreateFactory");
+            if (createDWriteFactory) {
+                HRESULT hr = createDWriteFactory(
+                    DWRITE_FACTORY_TYPE_SHARED,
+                    __uuidof(IDWriteFactory),
+                    reinterpret_cast<IUnknown**>(&mFactoryInstance));
+                assert(SUCCEEDED(hr));
+            }
+        }
+        return mFactoryInstance;
     }
 
     static IDWriteFontCollection *SystemCollection()
     {
-	if (!mSystemCollection) {
-	    if (Instance()) {
-		HRESULT hr = Instance()->GetSystemFontCollection(&mSystemCollection);
-		assert(SUCCEEDED(hr));
-	    }
-	}
-	return mSystemCollection;
+        if (!mSystemCollection) {
+            if (Instance()) {
+                HRESULT hr = Instance()->GetSystemFontCollection(&mSystemCollection);
+                assert(SUCCEEDED(hr));
+            }
+        }
+        return mSystemCollection;
     }
 
     static IDWriteFontFamily *FindSystemFontFamily(const WCHAR *aFamilyName)
     {
-	UINT32 idx;
-	BOOL found;
-	if (!SystemCollection()) {
-	    return NULL;
-	}
-	SystemCollection()->FindFamilyName(aFamilyName, &idx, &found);
-	if (!found) {
-	    return NULL;
-	}
+        UINT32 idx;
+        BOOL found;
+        if (!SystemCollection()) {
+            return NULL;
+        }
+        SystemCollection()->FindFamilyName(aFamilyName, &idx, &found);
+        if (!found) {
+            return NULL;
+        }
 
-	IDWriteFontFamily *family;
-	SystemCollection()->GetFontFamily(idx, &family);
-	return family;
+        IDWriteFontFamily *family;
+        SystemCollection()->GetFontFamily(idx, &family);
+        return family;
     }
 
 private:
@@ -98,10 +98,10 @@
 };
 
 cairo_int_status_t
-_cairo_dwrite_show_glyphs_on_d2d_surface(void			*surface,
-					cairo_operator_t	 op,
-					const cairo_pattern_t	*source,
-					cairo_glyph_t		*glyphs,
-					int			 num_glyphs,
-					cairo_scaled_font_t	*scaled_font,
-					cairo_clip_t		*clip);
+_cairo_dwrite_show_glyphs_on_d2d_surface(void                  *surface,
+                                         cairo_operator_t       op,
+                                         const cairo_pattern_t *source,
+                                         cairo_glyph_t         *glyphs,
+                                         int                    num_glyphs,
+                                         cairo_scaled_font_t   *scaled_font,
+                                         cairo_clip_t          *clip);
