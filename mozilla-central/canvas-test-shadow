From: Ms2ger <ms2ger@gmail.com>
Bug 665345 - Update tests for attributes related to shadows

This patch reorders and adds some assertions about these
attributes, and gives the tests more useful names.

diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -13488,157 +13488,187 @@ ctx.shadowOffsetY = 50;
 ctx.fillRect(0, -50, 100, 50);
 
 isPixel(ctx, 50,25, 127,0,127,255, 2);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.shadow.attributes.shadowBlur.1.html ]]] -->
-
-<p>Canvas test: 2d.shadow.attributes.shadowBlur.1</p>
-<canvas height="50" id="c504" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_shadow_attributes_shadowBlur_1() {
-
-var canvas = document.getElementById('c504');
-var ctx = canvas.getContext('2d');
-
-ctx.shadowBlur = 1;
-ok(ctx.shadowBlur === 1, "ctx.shadowBlur === 1");
-ctx.shadowBlur = 0.5;
-ok(ctx.shadowBlur === 0.5, "ctx.shadowBlur === 0.5");
-ctx.shadowBlur = 1e6;
-ok(ctx.shadowBlur === 1e6, "ctx.shadowBlur === 1e6");
+<!-- [[[ test_2d.shadow.attributes.shadowBlur.initial.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowBlur.initial</p>
+<canvas height="50" id="c490a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowBlur_initial() {
+
+var canvas = document.getElementById('c490a');
+var ctx = canvas.getContext('2d');
+
+ok(ctx.shadowBlur === 0, "ctx.shadowBlur === 0");
+
+
+}
+</script>
+
+<!-- [[[ test_2d.shadow.attributes.shadowBlur.invalid.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowBlur.invalid</p>
+<canvas height="50" id="c491a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowBlur_invalid() {
+
+var canvas = document.getElementById('c491a');
+var ctx = canvas.getContext('2d');
+
 ctx.shadowBlur = 1;
 ctx.shadowBlur = -2;
 ok(ctx.shadowBlur === 1, "ctx.shadowBlur === 1");
-ctx.shadowBlur = 0;
-ok(ctx.shadowBlur === 0, "ctx.shadowBlur === 0");
-
-
-}
-</script>
-
-<!-- [[[ test_2d.shadow.attributes.shadowBlur.2.html ]]] -->
-
-<p>Canvas test: 2d.shadow.attributes.shadowBlur.2</p>
-<canvas height="50" id="c505" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_shadow_attributes_shadowBlur_2() {
-
-var canvas = document.getElementById('c505');
-var ctx = canvas.getContext('2d');
-
-ctx.shadowBlur = 1;
-ctx.shadowBlur = -2;
-ok(ctx.shadowBlur === 1, "ctx.shadowBlur === 1");
 
 ctx.shadowBlur = 1;
 ctx.shadowBlur = Infinity;
 ok(ctx.shadowBlur === 1, "ctx.shadowBlur === 1");
 
 ctx.shadowBlur = 1;
 ctx.shadowBlur = -Infinity;
 ok(ctx.shadowBlur === 1, "ctx.shadowBlur === 1");
 
 ctx.shadowBlur = 1;
 ctx.shadowBlur = NaN;
 ok(ctx.shadowBlur === 1, "ctx.shadowBlur === 1");
 
-}
-</script>
-
-<!-- [[[ test_2d.shadow.attributes.shadowColor.1.html ]]] -->
-
-<p>Canvas test: 2d.shadow.attributes.shadowColor.1</p>
-<canvas height="50" id="c506" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_shadow_attributes_shadowColor_1() {
-
-var canvas = document.getElementById('c506');
-var ctx = canvas.getContext('2d');
-
-ctx.shadowColor = 'lime';
-ok(ctx.shadowColor === '#00ff00', "ctx.shadowColor === '#00ff00'");
-ctx.shadowColor = 'RGBA(0,255, 0,0)';
-is(ctx.shadowColor, 'rgba(0, 255, 0, 0)', "ctx.shadowColor should be what we set it to");
-
-
-}
-</script>
-
-<!-- [[[ test_2d.shadow.attributes.shadowColor.2.html ]]] -->
-
-<p>Canvas test: 2d.shadow.attributes.shadowColor.2</p>
-<canvas height="50" id="c507" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_shadow_attributes_shadowColor_2() {
-
-var canvas = document.getElementById('c507');
+
+}
+</script>
+
+<!-- [[[ test_2d.shadow.attributes.shadowBlur.valid.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowBlur.valid</p>
+<canvas height="50" id="c492a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowBlur_valid() {
+
+var canvas = document.getElementById('c492a');
+var ctx = canvas.getContext('2d');
+
+ctx.shadowBlur = 1;
+ok(ctx.shadowBlur === 1, "ctx.shadowBlur === 1");
+
+ctx.shadowBlur = 0.5;
+ok(ctx.shadowBlur === 0.5, "ctx.shadowBlur === 0.5");
+
+ctx.shadowBlur = 1e6;
+ok(ctx.shadowBlur === 1e6, "ctx.shadowBlur === 1e6");
+
+ctx.shadowBlur = 0;
+ok(ctx.shadowBlur === 0, "ctx.shadowBlur === 0");
+
+
+}
+</script>
+
+<!-- [[[ test_2d.shadow.attributes.shadowColor.initial.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowColor.initial</p>
+<canvas height="50" id="c493a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowColor_initial() {
+
+var canvas = document.getElementById('c493a');
+var ctx = canvas.getContext('2d');
+
+ok(ctx.shadowColor === 'rgba(0, 0, 0, 0)', "ctx.shadowColor === 'rgba(0, 0, 0, 0)'");
+
+
+}
+</script>
+
+<!-- [[[ test_2d.shadow.attributes.shadowColor.invalid.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowColor.invalid</p>
+<canvas height="50" id="c494a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowColor_invalid() {
+
+var canvas = document.getElementById('c494a');
 var ctx = canvas.getContext('2d');
 
 ctx.shadowColor = '#00ff00';
 ctx.shadowColor = 'bogus';
 ok(ctx.shadowColor === '#00ff00', "ctx.shadowColor === '#00ff00'");
+
+ctx.shadowColor = '#00ff00';
+ctx.shadowColor = 'red bogus';
+ok(ctx.shadowColor === '#00ff00', "ctx.shadowColor === '#00ff00'");
+
+ctx.shadowColor = '#00ff00';
 ctx.shadowColor = ctx;
 ok(ctx.shadowColor === '#00ff00', "ctx.shadowColor === '#00ff00'");
+
+ctx.shadowColor = '#00ff00';
 ctx.shadowColor = undefined;
 ok(ctx.shadowColor === '#00ff00', "ctx.shadowColor === '#00ff00'");
 
 
 }
 </script>
 
-<!-- [[[ test_2d.shadow.attributes.shadowOffset.1.html ]]] -->
-
-<p>Canvas test: 2d.shadow.attributes.shadowOffset.1</p>
-<canvas height="50" id="c508" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_shadow_attributes_shadowOffset_1() {
-
-var canvas = document.getElementById('c508');
-var ctx = canvas.getContext('2d');
-
-ctx.shadowOffsetX = 1;
-ctx.shadowOffsetY = 2;
-ok(ctx.shadowOffsetX === 1, "ctx.shadowOffsetX === 1");
-ok(ctx.shadowOffsetY === 2, "ctx.shadowOffsetY === 2");
-ctx.shadowOffsetX = 0.5;
-ctx.shadowOffsetY = 0.25;
-ok(ctx.shadowOffsetX === 0.5, "ctx.shadowOffsetX === 0.5");
-ok(ctx.shadowOffsetY === 0.25, "ctx.shadowOffsetY === 0.25");
-ctx.shadowOffsetX = -0.5;
-ctx.shadowOffsetY = -0.25;
-ok(ctx.shadowOffsetX === -0.5, "ctx.shadowOffsetX === -0.5");
-ok(ctx.shadowOffsetY === -0.25, "ctx.shadowOffsetY === -0.25");
-ctx.shadowOffsetX = 1e6;
-ctx.shadowOffsetY = 1e6;
-ok(ctx.shadowOffsetX === 1e6, "ctx.shadowOffsetX === 1e6");
-ok(ctx.shadowOffsetY === 1e6, "ctx.shadowOffsetY === 1e6");
-
-
-}
-</script>
-
-<!-- [[[ test_2d.shadow.attributes.shadowOffset.2.html ]]] -->
-
-<p>Canvas test: 2d.shadow.attributes.shadowOffset.2</p>
-<canvas height="50" id="c509" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_2d_shadow_attributes_shadowOffset_2() {
-
-var canvas = document.getElementById('c509');
+<!-- [[[ test_2d.shadow.attributes.shadowColor.valid.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowColor.valid</p>
+<canvas height="50" id="c495a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowColor_valid() {
+
+var canvas = document.getElementById('c495a');
+var ctx = canvas.getContext('2d');
+
+ctx.shadowColor = 'lime';
+ok(ctx.shadowColor === '#00ff00', "ctx.shadowColor === '#00ff00'");
+
+ctx.shadowColor = 'RGBA(0,255, 0,0)';
+ok(ctx.shadowColor === 'rgba(0, 255, 0, 0)', "ctx.shadowColor === 'rgba(0, 255, 0, 0)'");
+
+
+}
+</script>
+
+<!-- [[[ test_2d.shadow.attributes.shadowOffset.initial.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowOffset.initial</p>
+<canvas height="50" id="c496a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowOffset_initial() {
+
+var canvas = document.getElementById('c496a');
+var ctx = canvas.getContext('2d');
+
+ok(ctx.shadowOffsetX === 0, "ctx.shadowOffsetX === 0");
+ok(ctx.shadowOffsetY === 0, "ctx.shadowOffsetY === 0");
+
+
+}
+</script>
+
+<!-- [[[ test_2d.shadow.attributes.shadowOffset.invalid.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowOffset.invalid</p>
+<canvas height="50" id="c497a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowOffset_invalid() {
+
+var canvas = document.getElementById('c497a');
 var ctx = canvas.getContext('2d');
 
 ctx.shadowOffsetX = 1;
 ctx.shadowOffsetY = 2;
 ctx.shadowOffsetX = Infinity;
 ctx.shadowOffsetY = Infinity;
 ok(ctx.shadowOffsetX === 1, "ctx.shadowOffsetX === 1");
 ok(ctx.shadowOffsetY === 2, "ctx.shadowOffsetY === 2");
@@ -13652,16 +13682,57 @@ ok(ctx.shadowOffsetY === 2, "ctx.shadowO
 
 ctx.shadowOffsetX = 1;
 ctx.shadowOffsetY = 2;
 ctx.shadowOffsetX = NaN;
 ctx.shadowOffsetY = NaN;
 ok(ctx.shadowOffsetX === 1, "ctx.shadowOffsetX === 1");
 ok(ctx.shadowOffsetY === 2, "ctx.shadowOffsetY === 2");
 
+
+}
+</script>
+
+<!-- [[[ test_2d.shadow.attributes.shadowOffset.valid.html ]]] -->
+
+<p>Canvas test: 2d.shadow.attributes.shadowOffset.valid</p>
+<canvas height="50" id="c498a" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_shadow_attributes_shadowOffset_valid() {
+
+var canvas = document.getElementById('c498a');
+var ctx = canvas.getContext('2d');
+
+ctx.shadowOffsetX = 1;
+ctx.shadowOffsetY = 2;
+ok(ctx.shadowOffsetX === 1, "ctx.shadowOffsetX === 1");
+ok(ctx.shadowOffsetY === 2, "ctx.shadowOffsetY === 2");
+
+ctx.shadowOffsetX = 0.5;
+ctx.shadowOffsetY = 0.25;
+ok(ctx.shadowOffsetX === 0.5, "ctx.shadowOffsetX === 0.5");
+ok(ctx.shadowOffsetY === 0.25, "ctx.shadowOffsetY === 0.25");
+
+ctx.shadowOffsetX = -0.5;
+ctx.shadowOffsetY = -0.25;
+ok(ctx.shadowOffsetX === -0.5, "ctx.shadowOffsetX === -0.5");
+ok(ctx.shadowOffsetY === -0.25, "ctx.shadowOffsetY === -0.25");
+
+ctx.shadowOffsetX = 0;
+ctx.shadowOffsetY = 0;
+ok(ctx.shadowOffsetX === 0, "ctx.shadowOffsetX === 0");
+ok(ctx.shadowOffsetY === 0, "ctx.shadowOffsetY === 0");
+
+ctx.shadowOffsetX = 1e6;
+ctx.shadowOffsetY = 1e6;
+ok(ctx.shadowOffsetX === 1e6, "ctx.shadowOffsetX === 1e6");
+ok(ctx.shadowOffsetY === 1e6, "ctx.shadowOffsetY === 1e6");
+
+
 }
 </script>
 
 <!-- [[[ test_2d.shadow.basic.1.html ]]] -->
 
 <p>Canvas test: 2d.shadow.basic.1</p>
 <canvas height="50" id="c510" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
@@ -20013,44 +20084,59 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_shadow_alpha_4");
  }
  try {
   test_2d_shadow_alpha_5();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_shadow_alpha_5");
  }
  try {
-  test_2d_shadow_attributes_shadowBlur_1();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowBlur_1");
- }
- try {
-  test_2d_shadow_attributes_shadowBlur_2();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowBlur_2");
- }
- try {
-  test_2d_shadow_attributes_shadowColor_1();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowColor_1");
- }
- try {
-  test_2d_shadow_attributes_shadowColor_2();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowColor_2");
- }
- try {
-  test_2d_shadow_attributes_shadowOffset_1();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowOffset_1");
- }
- try {
-  test_2d_shadow_attributes_shadowOffset_2();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowOffset_2");
+  test_2d_shadow_attributes_shadowBlur_initial();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowBlur_initial");
+ }
+ try {
+  test_2d_shadow_attributes_shadowBlur_invalid();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowBlur_invalid");
+ }
+ try {
+  test_2d_shadow_attributes_shadowBlur_valid();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowBlur_valid");
+ }
+ try {
+  test_2d_shadow_attributes_shadowColor_initial();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowColor_initial");
+ }
+ try {
+  test_2d_shadow_attributes_shadowColor_invalid();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowColor_invalid");
+ }
+ try {
+  test_2d_shadow_attributes_shadowColor_valid();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowColor_valid");
+ }
+ try {
+  test_2d_shadow_attributes_shadowOffset_initial();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowOffset_initial");
+ }
+ try {
+  test_2d_shadow_attributes_shadowOffset_invalid();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowOffset_invalid");
+ }
+ try {
+  test_2d_shadow_attributes_shadowOffset_valid();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_shadow_attributes_shadowOffset_valid");
  }
  try {
   test_2d_shadow_basic_1();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_shadow_basic_1");
  }
  try {
   test_2d_shadow_basic_2();
