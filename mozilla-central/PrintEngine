diff --git a/layout/printing/nsPrintEngine.cpp b/layout/printing/nsPrintEngine.cpp
--- a/layout/printing/nsPrintEngine.cpp
+++ b/layout/printing/nsPrintEngine.cpp
@@ -60,6 +60,7 @@
 #include "nsGkAtoms.h"
 #include "nsXPCOM.h"
 #include "nsISupportsPrimitives.h"
+#include "nsPrintObject.h"
 
 static const char sPrintSettingsServiceContractID[] = "@mozilla.org/gfx/printsettings-service;1";
 
@@ -70,10 +71,10 @@
 // Printing
 #include "nsIWebBrowserPrint.h"
 #include "nsIDOMHTMLFrameElement.h"
-#include "nsIDOMHTMLFrameSetElement.h"
-#include "nsIDOMHTMLIFrameElement.h"
-#include "nsIDOMHTMLObjectElement.h"
-#include "nsIDOMHTMLEmbedElement.h"
+//#include "nsIDOMHTMLFrameSetElement.h"
+//#include "nsIDOMHTMLIFrameElement.h"
+//#include "nsIDOMHTMLObjectElement.h"
+//#include "nsIDOMHTMLEmbedElement.h"
 
 // Print Preview
 #include "imgIContainer.h" // image animation mode constants
@@ -149,10 +150,10 @@
 #include "nsIParser.h"
 #include "nsGUIEvent.h"
 #include "nsHTMLReflowState.h"
-#include "nsIDOMHTMLAnchorElement.h"
-#include "nsIDOMHTMLAreaElement.h"
-#include "nsIDOMHTMLLinkElement.h"
-#include "nsIDOMHTMLImageElement.h"
+//#include "nsIDOMHTMLAnchorElement.h"
+//#include "nsIDOMHTMLAreaElement.h"
+//#include "nsIDOMHTMLLinkElement.h"
+//#include "nsIDOMHTMLImageElement.h"
 #include "nsIContentViewerContainer.h"
 #include "nsIContentViewer.h"
 #include "nsIDocumentViewerPrint.h"
@@ -164,7 +165,7 @@
 #include "nsIURIFixup.h"
 #include "mozilla/dom/Element.h"
 
-using namespace mozilla::dom;
+namespace dom = mozilla::dom;
 
 //-----------------------------------------------------
 // PR LOGGING
@@ -768,8 +769,8 @@
 
 NS_IMETHODIMP
 nsPrintEngine::PrintPreview(nsIPrintSettings* aPrintSettings, 
-                                 nsIDOMWindow *aChildDOMWin, 
-                                 nsIWebProgressListener* aWebProgressListener)
+                            nsIDOMWindow *aChildDOMWin, 
+                            nsIWebProgressListener* aWebProgressListener)
 {
   // Get the DocShell and see if it is busy
   // (We can't Print Preview this document if it is still busy)
@@ -1130,7 +1131,7 @@
   nsCOMPtr<nsIDOMDocument> domDoc = do_GetInterface(aParent);
   nsCOMPtr<nsIDocument> doc = do_QueryInterface(domDoc);
   if (doc) {
-    nsIContent *rootElement = doc->GetRootElement();
+    dom::Element* rootElement = doc->GetRootElement();
     if (rootElement) {
       isFrameSet = HasFramesetChild(rootElement);
     }
@@ -1253,7 +1254,7 @@
   nsCOMPtr<nsIDocument> doc = do_QueryInterface(domDoc);
   if (!doc) return;
 
-  Element* rootElement = doc->GetRootElement();
+  dom::Element* rootElement = doc->GetRootElement();
   if (rootElement) {
     MapContentForPO(aPO, rootElement);
   } else {
@@ -1402,9 +1403,7 @@
   return iFrameIsSelected;
 }
 
-//---------------------------------------------------------------------
-// Recursively sets all the PO items to be printed
-// from the given item down into the tree
+//------------------------------------------------------------------------------
 void
 nsPrintEngine::SetPrintPO(nsPrintObject* aPO, bool aPrint)
 {
@@ -1418,7 +1417,7 @@
   } 
 }
 
-//---------------------------------------------------------------------
+//------------------------------------------------------------------------------
 // This will first use a Title and/or URL from the PrintSettings
 // if one isn't set then it uses the one from the document
 // then if not title is there we will make sure we send something back
@@ -1496,7 +1495,7 @@
   }
 }
 
-//---------------------------------------------------------------------
+//------------------------------------------------------------------------------
 nsresult nsPrintEngine::DocumentReadyForPrinting()
 {
   if (mPrt->mPrintFrameType == nsIPrintSettings::kEachFrameSep) {
@@ -1515,9 +1514,7 @@
   return rv;
 }
 
-/** ---------------------------------------------------
- *  Cleans up when an error occurred
- */
+//------------------------------------------------------------------------------
 nsresult nsPrintEngine::CleanupOnFailure(nsresult aResult, bool aIsPrinting)
 {
   PR_PL(("****  Failed %s - rv 0x%X", aIsPrinting?"Printing":"Print Preview", aResult));
@@ -1881,14 +1878,13 @@
 nsPrintEngine::ReflowPrintObject(nsPrintObject * aPO)
 {
   NS_ASSERTION(aPO, "Pointer is null!");
-  if (!aPO) return NS_ERROR_FAILURE;
+
+  if (!aPO->IsPrintable())
+    return NS_OK;
 
   nsSize adjSize;
   bool documentIsTopLevel;
   nsIFrame* frame = nullptr;
-  if (!aPO->IsPrintable())
-    return NS_OK;
-
   if (aPO->mParent && aPO->mParent->IsPrintable()) {
     frame = aPO->mContent->GetPrimaryFrame();
     // Without a frame, this document can't be displayed; therefore, there is no
@@ -1932,9 +1928,8 @@
   nsIView* parentView = nullptr;
   // the top nsPrintObject's widget will always have scrollbars
   if (frame && frame->GetType() == nsGkAtoms::subDocumentFrame) {
-    nsIView* view = frame->GetView();
-    NS_ENSURE_TRUE(view, NS_ERROR_FAILURE);
-    view = view->GetFirstChild();
+    NS_ENSURE_TRUE(frame->HasView(), NS_ERROR_FAILURE);
+    nsIView* view = frame->GetView()->GetFirstChild();
     NS_ENSURE_TRUE(view, NS_ERROR_FAILURE);
     parentView = view;
     canCreateScrollbars = false;
@@ -1946,7 +1941,7 @@
   aPO->mPresContext = new nsRootPresContext(aPO->mDocument,
     mIsCreatingPrintPreview ? nsPresContext::eContext_PrintPreview:
                               nsPresContext::eContext_Print);
-  NS_ENSURE_TRUE(aPO->mPresContext, NS_ERROR_OUT_OF_MEMORY);
+  NS_ASSERTION(aPO->mPresContext, "Infallible malloc failed.");
   aPO->mPresContext->SetPrintSettings(mPrt->mPrintSettings);
 
   // set the presentation context to the value in the print settings
@@ -2009,6 +2004,7 @@
 
   // This docshell stuff is weird; will go away when we stop having multiple
   // presentations per document
+  // XXX Like now?
   nsCOMPtr<nsISupports> supps(do_QueryInterface(aPO->mDocShell));
   aPO->mPresContext->SetContainer(supps);
 
diff --git a/layout/printing/nsPrintEngine.h b/layout/printing/nsPrintEngine.h
--- a/layout/printing/nsPrintEngine.h
+++ b/layout/printing/nsPrintEngine.h
@@ -34,27 +34,27 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
-#ifndef nsPrintEngine_h___
-#define nsPrintEngine_h___
+
+#ifndef nsPrintEngine_h
+#define nsPrintEngine_h
+
+#include "nsIObserver.h"
 
 #include "nsCOMPtr.h"
 
 #include "nsPrintObject.h"
 #include "nsPrintData.h"
 
-// Interfaces
-#include "nsIDocument.h"
-#include "nsIDOMWindow.h"
-#include "nsIObserver.h"
-
 // Classes
+class nsIDeviceContext;
+class nsIDocShell;
+class nsIDocShellTreeNode;
+class nsIDocument;
+class nsIDocumentViewerPrint;
+class nsIDOMWindow;
+class nsIPageSequenceFrame;
 class nsPagePrintTimer;
-class nsIDocShellTreeNode;
-class nsIDeviceContext;
-class nsIDocumentViewerPrint;
 class nsPrintObject;
-class nsIDocShell;
-class nsIPageSequenceFrame;
 
 //------------------------------------------------------------------------
 // nsPrintEngine Class
@@ -113,44 +113,58 @@
   //
   // The following three methods are used for printing...
   //
+private:
   nsresult DocumentReadyForPrinting();
-  nsresult GetSelectionDocument(nsIDeviceContextSpec * aDevSpec,
-                                nsIDocument ** aNewDoc);
-
   nsresult SetupToPrintContent();
   nsresult EnablePOsForPrinting();
   nsPrintObject* FindSmallestSTF();
 
-  bool     PrintDocContent(nsPrintObject* aPO, nsresult& aStatus);
+  bool PrintDocContent(nsPrintObject* aPO, nsresult& aStatus);
   nsresult DoPrint(nsPrintObject * aPO);
 
+  /**
+   * Recursively sets all the PO items to be printed from the given item down
+   * into the tree.
+   *
+   * @param aPO the nsPrintObject
+   * @param aPrint whether to print
+   */
   void SetPrintPO(nsPrintObject* aPO, bool aPrint);
 
+public:
   void TurnScriptingOn(bool aDoTurnOn);
-  bool CheckDocumentForPPCaching();
+private:
   void InstallPrintPreviewListener();
 
   // nsIDocumentViewerPrint Printing Methods
-  bool     PrintPage(nsPrintObject* aPOect, bool& aInRange);
-  bool     DonePrintingPages(nsPrintObject* aPO, nsresult aResult);
+public:
+  bool PrintPage(nsPrintObject* aPOect, bool& aInRange);
+  bool DonePrintingPages(nsPrintObject* aPO, nsresult aResult);
 
+private:
   //---------------------------------------------------------------------
   void BuildDocTree(nsIDocShellTreeNode *      aParentNode,
                     nsTArray<nsPrintObject*> * aDocList,
                     nsPrintObject *            aPO);
+
   nsresult ReflowDocList(nsPrintObject * aPO, bool aSetPixelScale);
-
   nsresult ReflowPrintObject(nsPrintObject * aPO);
 
   void CheckForChildFrameSets(nsPrintObject* aPO);
 
   void CalcNumPrintablePages(int32_t& aNumPages);
   void ShowPrintProgress(bool aIsForPrinting, bool& aDoNotify);
+
+  /**
+   * Cleans up when an error occurred
+   */
   nsresult CleanupOnFailure(nsresult aResult, bool aIsPrinting);
+public:
   // If FinishPrintPreview() fails, caller may need to reset the state of the
   // object, for example by calling CleanupOnFailure().
   nsresult FinishPrintPreview();
   static void CloseProgressDialog(nsIWebProgressListener* aWebProgressListener);
+private:
   void SetDocAndURLIntoProgress(nsPrintObject* aPO,
                                 nsIPrintProgressParams* aParams);
   void ElipseLongString(PRUnichar *& aStr, const uint32_t aLen, bool aDoFront);
@@ -160,7 +174,6 @@
   bool IsThereARangeSelection(nsIDOMWindow * aDOMWin);
 
   //---------------------------------------------------------------------
-
 
   // Timer Methods
   nsresult StartPagePrintTimer(nsPrintObject* aPO);
@@ -187,12 +200,17 @@
                              PRUnichar**       aTitle,
                              PRUnichar**       aURLStr,
                              eDocTitleDefault  aDefType);
+
+public:
   static void ShowPrintErrorDialog(nsresult printerror,
                                    bool aIsPrinting = true);
 
+private:
   static bool HasFramesetChild(nsIContent* aContent);
 
+public:
   bool     CheckBeforeDestroy();
+
   nsresult Cancelled();
 
   nsIWidget* GetPrintPreviewWindow() {return mPrtPreview->mPrintObject->mWindow;}
@@ -201,9 +219,11 @@
 
   float GetPrintPreviewScale() { return mPrtPreview->mPrintObject->
                                         mPresContext->GetPrintPreviewScale(); }
-  
+
+private:
   static nsIPresShell* GetPresShellFor(nsIDocShell* aDocShell);
 
+public:
   // These calls also update the DocViewer
   void SetIsPrinting(bool aIsPrinting);
   bool GetIsPrinting()
@@ -224,8 +244,7 @@
     return mIsCreatingPrintPreview;
   }
 
-protected:
-
+private:
   nsresult CommonPrint(bool aIsPrintPreview, nsIPrintSettings* aPrintSettings,
                        nsIWebProgressListener* aWebProgressListener,
                        nsIDOMDocument* aDoc);
@@ -299,9 +318,7 @@
 
   FILE* mDebugFile;
 
-private:
   nsPrintEngine& operator=(const nsPrintEngine& aOther); // not implemented
-
 };
 
-#endif /* nsPrintEngine_h___ */
+#endif /* nsPrintEngine_h */
diff --git a/layout/printing/nsPrintObject.cpp b/layout/printing/nsPrintObject.cpp
--- a/layout/printing/nsPrintObject.cpp
+++ b/layout/printing/nsPrintObject.cpp
@@ -45,6 +45,8 @@
 #include "nsComponentManagerUtils.h"
 #include "nsIDocShellTreeOwner.h"
 #include "nsIDocShellTreeItem.h"
+#include "nsIViewManager.h"
+#include "nsIDocShell.h"
 
 //---------------------------------------------------
 //-- nsPrintObject Class Impl
diff --git a/layout/printing/nsPrintObject.h b/layout/printing/nsPrintObject.h
--- a/layout/printing/nsPrintObject.h
+++ b/layout/printing/nsPrintObject.h
@@ -39,15 +39,15 @@
 
 // Interfaces
 #include "nsCOMPtr.h"
-#include "nsIContent.h"
-#include "nsIPresShell.h"
-#include "nsStyleSet.h"
-#include "nsIViewManager.h"
-#include "nsIDocShell.h"
-#include "nsIDocument.h"
-#include "nsIWidget.h"
+#include "nsStyleSet.h"//?
 
 class nsPresContext;
+class nsIViewManager;
+class nsIDocShell;
+class nsIDocument;
+class nsIWidget;
+class nsIPresShell;
+class nsIContent;
 
 // nsPrintObject Document Type
 enum PrintObjectType  {eDoc = 0, eFrame = 1, eIFrame = 2, eFrameSet = 3};
