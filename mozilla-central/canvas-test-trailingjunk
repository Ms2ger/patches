From: Ms2ger <ms2ger@gmail.com>

diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -17161,34 +17161,16 @@ ok(canvas.width == 120, "canvas.width ==
 ok(canvas.height == 60, "canvas.height == 60");
 ok(canvas.getAttribute('width') == 120, "canvas.getAttribute('width') == 120");
 ok(canvas.getAttribute('height') == 60, "canvas.getAttribute('height') == 60");
 
 
 }
 </script>
 
-<!-- [[[ test_size.attributes.parse.badsuffix.html ]]] -->
-
-<p>Canvas test: size.attributes.parse.badsuffix</p>
-<!-- Testing: Parsing of non-negative integers -->
-<canvas height="50" id="c637" width="100foo"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_size_attributes_parse_badsuffix() {
-
-var canvas = document.getElementById('c637');
-var ctx = canvas.getContext('2d');
-
-is(canvas.width, 100, "canvas.width == 100");
-
-
-}
-</script>
-
 <!-- [[[ test_size.attributes.parse.floatsuffix.html ]]] -->
 
 <p>Canvas test: size.attributes.parse.floatsuffix</p>
 <!-- Testing: Parsing of non-negative integers -->
 <canvas height="50" id="c638" width="100.9"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_parse_floatsuffix() {
@@ -17197,16 +17179,37 @@ var canvas = document.getElementById('c6
 var ctx = canvas.getContext('2d');
 
 ok(canvas.width == 100, "canvas.width == 100");
 
 
 }
 </script>
 
+<!-- [[[ test_size.attributes.parse.junk.html ]]] -->
+
+<p>Canvas test: size.attributes.parse.junk</p>
+<!-- Testing: Parsing of non-negative integers -->
+<canvas height="#!?" id="c640" width="#!?"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_size_attributes_parse_junk() {
+
+var canvas = document.getElementById('c640');
+var ctx = canvas.getContext('2d');
+
+ok(canvas.width === 300, "canvas.width === 300");
+ok(canvas.height === 150, "canvas.height === 150");
+ok(canvas.getAttribute('width') === '#!?', "canvas.getAttribute('width') === '#!?'");
+ok(canvas.getAttribute('height') === '#!?', "canvas.getAttribute('height') === '#!?'");
+
+
+}
+</script>
+
 <!-- [[[ test_size.attributes.parse.negative.html ]]] -->
 
 <p>Canvas test: size.attributes.parse.negative</p>
 <!-- Testing: Parsing of non-negative integers -->
 <canvas height="50" id="c639" width="-100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_parse_negative() {
@@ -17215,34 +17218,16 @@ var canvas = document.getElementById('c6
 var ctx = canvas.getContext('2d');
 
 ok(canvas.width == 300, "canvas.width == 300");
 
 
 }
 </script>
 
-<!-- [[[ test_size.attributes.parse.nonnumber.html ]]] -->
-
-<p>Canvas test: size.attributes.parse.nonnumber</p>
-<!-- Testing: Parsing of non-negative integers -->
-<canvas height="50" id="c640" width="foo"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_size_attributes_parse_nonnumber() {
-
-var canvas = document.getElementById('c640');
-var ctx = canvas.getContext('2d');
-
-ok(canvas.width == 300, "canvas.width == 300");
-
-
-}
-</script>
-
 <!-- [[[ test_size.attributes.parse.percentsuffix.html ]]] -->
 
 <p>Canvas test: size.attributes.parse.percentsuffix</p>
 <!-- Testing: Parsing of non-negative integers -->
 <canvas height="50" id="c641" width="100%"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_parse_percentsuffix() {
@@ -17251,16 +17236,38 @@ var canvas = document.getElementById('c6
 var ctx = canvas.getContext('2d');
 
 ok(canvas.width == 100, "canvas.width == 100");
 
 
 }
 </script>
 
+<!-- [[[ test_size.attributes.parse.trailingjunk.html ]]] -->
+
+<p>Canvas test: size.attributes.parse.trailingjunk</p>
+<!-- Testing: Parsing of non-negative integers -->
+<canvas height="100#!?" id="c637" width="100#!?"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_size_attributes_parse_trailingjunk() {
+
+var canvas = document.getElementById('c637');
+var ctx = canvas.getContext('2d');
+
+ok(canvas.width === 100, "canvas.width === 100");
+ok(canvas.height === 100, "canvas.height === 100");
+ok(window.getComputedStyle(canvas, null).getPropertyValue("width") == "100px", "window.getComputedStyle(canvas, null).getPropertyValue(\"width\") == \"100px\"");
+ok(canvas.getAttribute('width') === '100#!?', "canvas.getAttribute('width') === '100#!?'");
+ok(canvas.getAttribute('height') === '100#!?', "canvas.getAttribute('height') === '100#!?'");
+
+
+}
+</script>
+
 <!-- [[[ test_size.attributes.parse.whitespace.html ]]] -->
 
 <p>Canvas test: size.attributes.parse.whitespace</p>
 <!-- Testing: Parsing of non-negative integers -->
 <canvas height="50" id="c642" width="   100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_parse_whitespace() {
@@ -17370,35 +17377,16 @@ var ctx = canvas.getContext('2d');
 
 canvas.removeAttribute('width');
 ok(canvas.width == 300, "canvas.width == 300");
 
 
 }
 </script>
 
-<!-- [[[ test_size.attributes.setAttribute.badsuffix.html ]]] -->
-
-<p>Canvas test: size.attributes.setAttribute.badsuffix</p>
-<!-- Testing: Parsing of non-negative integers in setAttribute -->
-<canvas height="50" id="c648" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_size_attributes_setAttribute_badsuffix() {
-
-var canvas = document.getElementById('c648');
-var ctx = canvas.getContext('2d');
-
-canvas.setAttribute('width', '100foo');
-is(canvas.width, 100, "canvas.width == 100");
-
-
-}
-</script>
-
 <!-- [[[ test_size.attributes.setAttribute.floatsuffix.html ]]] -->
 
 <p>Canvas test: size.attributes.setAttribute.floatsuffix</p>
 <!-- Testing: Parsing of non-negative integers in setAttribute -->
 <canvas height="50" id="c649" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_setAttribute_floatsuffix() {
@@ -17409,16 +17397,39 @@ var ctx = canvas.getContext('2d');
 canvas.setAttribute('width', '1');
 canvas.setAttribute('width', '100.9');
 ok(canvas.width == 100, "canvas.width == 100");
 
 
 }
 </script>
 
+<!-- [[[ test_size.attributes.setAttribute.junk.html ]]] -->
+
+<p>Canvas test: size.attributes.setAttribute.junk</p>
+<!-- Testing: Parsing of non-negative integers in setAttribute -->
+<canvas height="50" id="c651" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_size_attributes_setAttribute_junk() {
+
+var canvas = document.getElementById('c651');
+var ctx = canvas.getContext('2d');
+
+canvas.setAttribute('width', '#!?');
+canvas.setAttribute('height', '#!?');
+ok(canvas.width === 300, "canvas.width === 300");
+ok(canvas.height === 150, "canvas.height === 150");
+ok(canvas.getAttribute('width') === '#!?', "canvas.getAttribute('width') === '#!?'");
+ok(canvas.getAttribute('height') === '#!?', "canvas.getAttribute('height') === '#!?'");
+
+
+}
+</script>
+
 <!-- [[[ test_size.attributes.setAttribute.negative.html ]]] -->
 
 <p>Canvas test: size.attributes.setAttribute.negative</p>
 <!-- Testing: Parsing of non-negative integers in setAttribute -->
 <canvas height="50" id="c650" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_setAttribute_negative() {
@@ -17428,35 +17439,16 @@ var ctx = canvas.getContext('2d');
 
 canvas.setAttribute('width', '-100');
 ok(canvas.width == 300, "canvas.width == 300");
 
 
 }
 </script>
 
-<!-- [[[ test_size.attributes.setAttribute.nonnumber.html ]]] -->
-
-<p>Canvas test: size.attributes.setAttribute.nonnumber</p>
-<!-- Testing: Parsing of non-negative integers in setAttribute -->
-<canvas height="50" id="c651" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_size_attributes_setAttribute_nonnumber() {
-
-var canvas = document.getElementById('c651');
-var ctx = canvas.getContext('2d');
-
-canvas.setAttribute('width', 'foo');
-ok(canvas.width == 300, "canvas.width == 300");
-
-
-}
-</script>
-
 <!-- [[[ test_size.attributes.setAttribute.percentsuffix.html ]]] -->
 
 <p>Canvas test: size.attributes.setAttribute.percentsuffix</p>
 <!-- Testing: Parsing of non-negative integers in setAttribute -->
 <canvas height="50" id="c652" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_setAttribute_percentsuffix() {
@@ -17466,16 +17458,40 @@ var ctx = canvas.getContext('2d');
 
 canvas.setAttribute('width', '100%');
 ok(canvas.width == 100, "canvas.width == 100");
 
 
 }
 </script>
 
+<!-- [[[ test_size.attributes.setAttribute.trailingjunk.html ]]] -->
+
+<p>Canvas test: size.attributes.setAttribute.trailingjunk</p>
+<!-- Testing: Parsing of non-negative integers in setAttribute -->
+<canvas height="50" id="c648" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_size_attributes_setAttribute_trailingjunk() {
+
+var canvas = document.getElementById('c648');
+var ctx = canvas.getContext('2d');
+
+canvas.setAttribute('width', '100#!?');
+canvas.setAttribute('height', '100#!?');
+ok(canvas.width === 100, "canvas.width === 100");
+ok(canvas.height === 100, "canvas.height === 100");
+ok(window.getComputedStyle(canvas, null).getPropertyValue("width") == "100px", "window.getComputedStyle(canvas, null).getPropertyValue(\"width\") == \"100px\"");
+ok(canvas.getAttribute('width') === '100#!?', "canvas.getAttribute('width') === '100#!?'");
+ok(canvas.getAttribute('height') === '100#!?', "canvas.getAttribute('height') === '100#!?'");
+
+
+}
+</script>
+
 <!-- [[[ test_size.attributes.setAttribute.whitespace.html ]]] -->
 
 <p>Canvas test: size.attributes.setAttribute.whitespace</p>
 <!-- Testing: Parsing of non-negative integers in setAttribute -->
 <canvas height="50" id="c653" width="50"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_size_attributes_setAttribute_whitespace() {
@@ -20723,41 +20739,41 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_size_attributes_default");
  }
  try {
   test_size_attributes();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes");
  }
  try {
-  test_size_attributes_parse_badsuffix();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_size_attributes_parse_badsuffix");
- }
- try {
   test_size_attributes_parse_floatsuffix();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_floatsuffix");
  }
  try {
+  test_size_attributes_parse_junk();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_size_attributes_parse_junk");
+ }
+ try {
   test_size_attributes_parse_negative();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_negative");
  }
  try {
-  test_size_attributes_parse_nonnumber();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_size_attributes_parse_nonnumber");
- }
- try {
   test_size_attributes_parse_percentsuffix();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_percentsuffix");
  }
  try {
+  test_size_attributes_parse_trailingjunk();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_size_attributes_parse_trailingjunk");
+ }
+ try {
   test_size_attributes_parse_whitespace();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_whitespace");
  }
  try {
   test_size_attributes_parse_zero();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_parse_zero");
@@ -20778,41 +20794,41 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_size_attributes_reflect_2");
  }
  try {
   test_size_attributes_removed();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_removed");
  }
  try {
-  test_size_attributes_setAttribute_badsuffix();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_badsuffix");
- }
- try {
   test_size_attributes_setAttribute_floatsuffix();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_floatsuffix");
  }
  try {
+  test_size_attributes_setAttribute_junk();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_junk");
+ }
+ try {
   test_size_attributes_setAttribute_negative();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_negative");
  }
  try {
-  test_size_attributes_setAttribute_nonnumber();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_nonnumber");
- }
- try {
   test_size_attributes_setAttribute_percentsuffix();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_percentsuffix");
  }
  try {
+  test_size_attributes_setAttribute_trailingjunk();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_trailingjunk");
+ }
+ try {
   test_size_attributes_setAttribute_whitespace();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_whitespace");
  }
  try {
   test_size_attributes_setAttribute_zero();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_size_attributes_setAttribute_zero");
