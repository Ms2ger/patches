From: Ms2ger <ms2ger@gmail.com>

diff --git a/widget/gtk2/nsAppShell.cpp b/widget/gtk2/nsAppShell.cpp
--- a/widget/gtk2/nsAppShell.cpp
+++ b/widget/gtk2/nsAppShell.cpp
@@ -9,17 +9,21 @@
 #include <unistd.h>
 #include <fcntl.h>
 #include <errno.h>
 #include <gdk/gdk.h>
 #include "nsAppShell.h"
 #include "nsWindow.h"
 #include "prlog.h"
 #include "prenv.h"
+
 #include "mozilla/HangMonitor.h"
+#include "mozilla/unused.h"
+
+using namespace mozilla;
 
 #define NOTIFY_TOKEN 0xFA
 
 #ifdef PR_LOGGING
 PRLogModuleInfo *gWidgetLog = nullptr;
 PRLogModuleInfo *gWidgetFocusLog = nullptr;
 PRLogModuleInfo *gWidgetDragLog = nullptr;
 PRLogModuleInfo *gWidgetDrawLog = nullptr;
@@ -40,17 +44,17 @@ PollWrapper(GPollFD *ufds, guint nfsd, g
 /*static*/ gboolean
 nsAppShell::EventProcessorCallback(GIOChannel *source, 
                                    GIOCondition condition,
                                    gpointer data)
 {
     nsAppShell *self = static_cast<nsAppShell *>(data);
 
     unsigned char c;
-    read(self->mPipeFDs[0], &c, 1);
+    unused << read(self->mPipeFDs[0], &c, 1);
     NS_ASSERTION(c == (unsigned char) NOTIFY_TOKEN, "wrong token");
 
     self->NativeEventCallback();
     return TRUE;
 }
 
 nsAppShell::~nsAppShell()
 {
@@ -121,16 +125,16 @@ failed:
     mPipeFDs[0] = mPipeFDs[1] = 0;
     return NS_ERROR_FAILURE;
 }
 
 void
 nsAppShell::ScheduleNativeEventCallback()
 {
     unsigned char buf[] = { NOTIFY_TOKEN };
-    write(mPipeFDs[1], buf, 1);
+    unused << write(mPipeFDs[1], buf, 1);
 }
 
 bool
 nsAppShell::ProcessNextNativeEvent(bool mayWait)
 {
     return g_main_context_iteration(NULL, mayWait);
 }
