From: Ms2ger <ms2ger@gmail.com>
Bug 665345 - Replace 2d.path.*.emptysubpath by the two 2d.path.*.ensuresubpath tests

diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -9838,37 +9838,62 @@ ctx.arcTo(100, 25, 50, 25, 1);
 ctx.stroke();
 
 todo_isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.path.arcTo.emptysubpath.html ]]] -->
-
-<p>Canvas test: 2d.path.arcTo.emptysubpath</p>
-<!-- Testing: arcTo() does nothing if there are no subpaths -->
+<!-- [[[ test_2d.path.arcTo.ensuresubpath.1.html ]]] -->
+
+<p>Canvas test: 2d.path.arcTo.ensuresubpath.1</p>
+<!-- Testing: If there is no subpath, the first control point is added (and nothing is drawn up to it) -->
 <canvas height="50" id="c364" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-function test_2d_path_arcTo_emptysubpath() {
+function test_2d_path_arcTo_ensuresubpath_1() {
 
 var canvas = document.getElementById('c364');
 var ctx = canvas.getContext('2d');
 
 ctx.fillStyle = '#0f0';
 ctx.fillRect(0, 0, 100, 50);
 ctx.lineWidth = 50;
 ctx.strokeStyle = '#f00';
 ctx.beginPath();
-ctx.arcTo(0, 25, 0, 25, 0.1);
-ctx.arcTo(100, 25, 100, 25, 0.1);
-ctx.stroke();
-todo_isPixel(ctx, 50,25, 0,255,0,255, 0);
+ctx.arcTo(100, 50, 200, 50, 0.1);
+ctx.stroke();
+isPixel(ctx, 50,25, 0,255,0,255, 0);
+
+
+}
+</script>
+
+<!-- [[[ test_2d.path.arcTo.ensuresubpath.2.html ]]] -->
+
+<p>Canvas test: 2d.path.arcTo.ensuresubpath.2</p>
+<!-- Testing: If there is no subpath, the first control point is added -->
+<canvas height="50" id="c364b" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_path_arcTo_ensuresubpath_2() {
+
+var canvas = document.getElementById('c364b');
+var ctx = canvas.getContext('2d');
+
+ctx.fillStyle = '#f00';
+ctx.fillRect(0, 0, 100, 50);
+ctx.lineWidth = 50;
+ctx.strokeStyle = '#0f0';
+ctx.beginPath();
+ctx.arcTo(0, 25, 50, 250, 0.1); // adds (x1,y1), draws nothing
+ctx.lineTo(100, 25);
+ctx.stroke();
+isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.path.arcTo.negative.html ]]] -->
 
 <p>Canvas test: 2d.path.arcTo.negative</p>
@@ -10199,34 +10224,63 @@ ctx.moveTo(0, 25);
 ctx.bezierCurveTo(100, 25, 100, 25, 100, 25);
 ctx.stroke();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.path.bezierCurveTo.emptysubpath.html ]]] -->
-
-<p>Canvas test: 2d.path.bezierCurveTo.emptysubpath</p>
+<!-- [[[ test_2d.path.bezierCurveTo.ensuresubpath.1.html ]]] -->
+
+<p>Canvas test: 2d.path.bezierCurveTo.ensuresubpath.1</p>
+<!-- Testing: If there is no subpath, the first control point is added (and nothing is drawn up to it) -->
 <canvas height="50" id="c377" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-function test_2d_path_bezierCurveTo_emptysubpath() {
+function test_2d_path_bezierCurveTo_ensuresubpath_1() {
 
 var canvas = document.getElementById('c377');
 var ctx = canvas.getContext('2d');
 
+ctx.fillStyle = '#0f0';
+ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
 ctx.beginPath();
-ctx.bezierCurveTo(0, 25, 0, 25, 0, 25);
-ctx.bezierCurveTo(100, 25, 100, 25, 100, 25);
-ctx.stroke();
-todo_isPixel(ctx, 50,25, 0,0,0,0, 0);
+ctx.bezierCurveTo(100, 50, 200, 50, 200, 50);
+ctx.stroke();
+isPixel(ctx, 50,25, 0,255,0,255, 0);
+isPixel(ctx, 95,45, 0,255,0,255, 0);
+
+
+}
+</script>
+
+<!-- [[[ test_2d.path.bezierCurveTo.ensuresubpath.2.html ]]] -->
+
+<p>Canvas test: 2d.path.bezierCurveTo.ensuresubpath.2</p>
+<!-- Testing: If there is no subpath, the first control point is added -->
+<canvas height="50" id="c377b" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_path_bezierCurveTo_ensuresubpath_2() {
+
+var canvas = document.getElementById('c377b');
+var ctx = canvas.getContext('2d');
+
+ctx.fillStyle = '#f00';
+ctx.fillRect(0, 0, 100, 50);
+ctx.strokeStyle = '#0f0';
+ctx.lineWidth = 50;
+ctx.beginPath();
+ctx.bezierCurveTo(0, 25, 100, 25, 100, 25);
+ctx.stroke();
+isPixel(ctx, 50,25, 0,255,0,255, 0);
+isPixel(ctx, 5,45, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.path.bezierCurveTo.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.bezierCurveTo.nonfinite</p>
@@ -11314,34 +11368,62 @@ ctx.moveTo(0, 25);
 ctx.lineTo(100, 25);
 ctx.stroke();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.path.lineTo.emptysubpath.html ]]] -->
-
-<p>Canvas test: 2d.path.lineTo.emptysubpath</p>
+<!-- [[[ test_2d.path.lineTo.ensuresubpath.1.html ]]] -->
+
+<p>Canvas test: 2d.path.lineTo.ensuresubpath.1</p>
+<!-- Testing: If there is no subpath, the point is added and nothing is drawn -->
 <canvas height="50" id="c415" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-function test_2d_path_lineTo_emptysubpath() {
+function test_2d_path_lineTo_ensuresubpath_1() {
 
 var canvas = document.getElementById('c415');
 var ctx = canvas.getContext('2d');
 
-ctx.strokeStyle = '#f00';
+ctx.fillStyle = '#0f0';
+ctx.fillRect(0, 0, 100, 50);
+ctx.strokeStyle = '#f00';
+ctx.lineWidth = 50;
+ctx.beginPath();
+ctx.lineTo(100, 50);
+ctx.stroke();
+isPixel(ctx, 50,25, 0,255,0,255, 0);
+
+
+}
+</script>
+
+<!-- [[[ test_2d.path.lineTo.ensuresubpath.2.html ]]] -->
+
+<p>Canvas test: 2d.path.lineTo.ensuresubpath.2</p>
+<!-- Testing: If there is no subpath, the point is added and used for subsequent drawing -->
+<canvas height="50" id="c415b" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_path_lineTo_ensuresubpath_2() {
+
+var canvas = document.getElementById('c415b');
+var ctx = canvas.getContext('2d');
+
+ctx.fillStyle = '#f00';
+ctx.fillRect(0, 0, 100, 50);
+ctx.strokeStyle = '#0f0';
 ctx.lineWidth = 50;
 ctx.beginPath();
 ctx.lineTo(0, 25);
 ctx.lineTo(100, 25);
 ctx.stroke();
-todo_isPixel(ctx, 50,25, 0,0,0,0, 0);
+isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.path.lineTo.nextpoint.html ]]] -->
 
 <p>Canvas test: 2d.path.lineTo.nextpoint</p>
@@ -11519,34 +11601,63 @@ ctx.moveTo(0, 25);
 ctx.quadraticCurveTo(100, 25, 100, 25);
 ctx.stroke();
 isPixel(ctx, 50,25, 0,255,0,255, 0);
 
 
 }
 </script>
 
-<!-- [[[ test_2d.path.quadraticCurveTo.emptysubpath.html ]]] -->
-
-<p>Canvas test: 2d.path.quadraticCurveTo.emptysubpath</p>
+<!-- [[[ test_2d.path.quadraticCurveTo.ensuresubpath.1.html ]]] -->
+
+<p>Canvas test: 2d.path.quadraticCurveTo.ensuresubpath.1</p>
+<!-- Testing: If there is no subpath, the first control point is added (and nothing is drawn up to it) -->
 <canvas height="50" id="c423" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-function test_2d_path_quadraticCurveTo_emptysubpath() {
+function test_2d_path_quadraticCurveTo_ensuresubpath_1() {
 
 var canvas = document.getElementById('c423');
 var ctx = canvas.getContext('2d');
 
+ctx.fillStyle = '#0f0';
+ctx.fillRect(0, 0, 100, 50);
 ctx.strokeStyle = '#f00';
 ctx.lineWidth = 50;
 ctx.beginPath();
-ctx.quadraticCurveTo(0, 25, 0, 25);
-ctx.quadraticCurveTo(100, 25, 100, 25);
-ctx.stroke();
-todo_isPixel(ctx, 50,25, 0,0,0,0, 0);
+ctx.quadraticCurveTo(100, 50, 200, 50);
+ctx.stroke();
+isPixel(ctx, 50,25, 0,255,0,255, 0);
+todo_isPixel(ctx, 95,45, 0,255,0,255, 0);
+
+
+}
+</script>
+
+<!-- [[[ test_2d.path.quadraticCurveTo.ensuresubpath.2.html ]]] -->
+
+<p>Canvas test: 2d.path.quadraticCurveTo.ensuresubpath.2</p>
+<!-- Testing: If there is no subpath, the first control point is added -->
+<canvas height="50" id="c423b" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_path_quadraticCurveTo_ensuresubpath_2() {
+
+var canvas = document.getElementById('c423b');
+var ctx = canvas.getContext('2d');
+
+ctx.fillStyle = '#f00';
+ctx.fillRect(0, 0, 100, 50);
+ctx.strokeStyle = '#0f0';
+ctx.lineWidth = 50;
+ctx.beginPath();
+ctx.quadraticCurveTo(0, 25, 100, 25);
+ctx.stroke();
+isPixel(ctx, 50,25, 0,255,0,255, 0);
+todo_isPixel(ctx, 5,45, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.path.quadraticCurveTo.nonfinite.html ]]] -->
 
 <p>Canvas test: 2d.path.quadraticCurveTo.nonfinite</p>
@@ -19430,19 +19541,24 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_path_arcTo_collinear_2");
  }
  try {
   test_2d_path_arcTo_collinear_3();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_arcTo_collinear_3");
  }
  try {
-  test_2d_path_arcTo_emptysubpath();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_path_arcTo_emptysubpath");
+  test_2d_path_arcTo_ensuresubpath_1();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_path_arcTo_ensuresubpath_1");
+ }
+ try {
+  test_2d_path_arcTo_ensuresubpath_2();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_path_arcTo_ensuresubpath_2");
  }
  try {
   test_2d_path_arcTo_negative();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_arcTo_negative");
  }
  try {
   test_2d_path_arcTo_nonfinite();
@@ -19485,19 +19601,24 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_path_beginPath");
  }
  try {
   test_2d_path_bezierCurveTo_basic();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_bezierCurveTo_basic");
  }
  try {
-  test_2d_path_bezierCurveTo_emptysubpath();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_path_bezierCurveTo_emptysubpath");
+  test_2d_path_bezierCurveTo_ensuresubpath_1();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_path_bezierCurveTo_ensuresubpath_1");
+ }
+ try {
+  test_2d_path_bezierCurveTo_ensuresubpath_2();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_path_bezierCurveTo_ensuresubpath_2");
  }
  try {
   test_2d_path_bezierCurveTo_nonfinite();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_bezierCurveTo_nonfinite");
  }
  try {
   test_2d_path_bezierCurveTo_scaled();
@@ -19675,19 +19796,24 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_path_isPointInPath_winding");
  }
  try {
   test_2d_path_lineTo_basic();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_lineTo_basic");
  }
  try {
-  test_2d_path_lineTo_emptysubpath();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_path_lineTo_emptysubpath");
+  test_2d_path_lineTo_ensuresubpath_1();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_path_lineTo_ensuresubpath_1");
+ }
+ try {
+  test_2d_path_lineTo_ensuresubpath_2();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_path_lineTo_ensuresubpath_2");
  }
  try {
   test_2d_path_lineTo_nextpoint();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_lineTo_nextpoint");
  }
  try {
   test_2d_path_lineTo_nonfinite();
@@ -19715,19 +19841,24 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_path_moveTo_nonfinite");
  }
  try {
   test_2d_path_quadraticCurveTo_basic();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_quadraticCurveTo_basic");
  }
  try {
-  test_2d_path_quadraticCurveTo_emptysubpath();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_2d_path_quadraticCurveTo_emptysubpath");
+  test_2d_path_quadraticCurveTo_ensuresubpath_1();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_path_quadraticCurveTo_ensuresubpath_1");
+ }
+ try {
+  test_2d_path_quadraticCurveTo_ensuresubpath_2();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_path_quadraticCurveTo_ensuresubpath_2");
  }
  try {
   test_2d_path_quadraticCurveTo_nonfinite();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_path_quadraticCurveTo_nonfinite");
  }
  try {
   test_2d_path_quadraticCurveTo_scaled();
