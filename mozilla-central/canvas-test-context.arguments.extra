From: Ms2ger <ms2ger@gmail.com>
Bug 665345 - Move and rename 2d.getcontext.extraargs, and remove references to bug 401788

This moves us closer to upstream.

diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -997,17 +997,17 @@ isPixel(ctx, 50,25, 218,255,36,223, 5);
 
 
 }
 </script>
 <img class="resource" id="yellow75_21.png" src="image_yellow75.png">
 
 <!-- [[[ test_2d.composite.operation.casesensitive.html ]]] -->
 
-<p>Canvas test: 2d.composite.operation.casesensitive - bug 401788</p>
+<p>Canvas test: 2d.composite.operation.casesensitive</p>
 <canvas height="50" id="c54" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_operation_casesensitive() {
 
 var canvas = document.getElementById('c54');
 var ctx = canvas.getContext('2d');
 
@@ -1095,17 +1095,17 @@ for (var i = 0; i < modes.length; ++i)
 }
 
 
 }
 </script>
 
 <!-- [[[ test_2d.composite.operation.highlight.html ]]] -->
 
-<p>Canvas test: 2d.composite.operation.highlight - bug 401788</p>
+<p>Canvas test: 2d.composite.operation.highlight</p>
 <canvas height="50" id="c59" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_operation_highlight() {
 
 var canvas = document.getElementById('c59');
 var ctx = canvas.getContext('2d');
 
@@ -1114,17 +1114,17 @@ ctx.globalCompositeOperation = 'highligh
 ok(ctx.globalCompositeOperation == 'xor', "ctx.globalCompositeOperation == 'xor'");
 
 
 }
 </script>
 
 <!-- [[[ test_2d.composite.operation.nullsuffix.html ]]] -->
 
-<p>Canvas test: 2d.composite.operation.nullsuffix - bug 401788</p>
+<p>Canvas test: 2d.composite.operation.nullsuffix</p>
 <canvas height="50" id="c60" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_operation_nullsuffix() {
 
 var canvas = document.getElementById('c60');
 var ctx = canvas.getContext('2d');
 
@@ -1152,17 +1152,17 @@ ctx.globalCompositeOperation = 'over';
 ok(ctx.globalCompositeOperation == 'xor', "ctx.globalCompositeOperation == 'xor'");
 
 
 }
 </script>
 
 <!-- [[[ test_2d.composite.operation.unrecognised.html ]]] -->
 
-<p>Canvas test: 2d.composite.operation.unrecognised - bug 401788</p>
+<p>Canvas test: 2d.composite.operation.unrecognised</p>
 <canvas height="50" id="c62" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_composite_operation_unrecognised() {
 
 var canvas = document.getElementById('c62');
 var ctx = canvas.getContext('2d');
 
@@ -4490,16 +4490,34 @@ var canvas = document.getElementById('c2
 var ctx = canvas.getContext('2d');
 
 ok(canvas.getContext('2d') !== null, "canvas.getContext('2d') !== null");
 
 
 }
 </script>
 
+<!-- [[[ test_2d.getcontext.extraargs.html ]]] -->
+
+<p>Canvas test: 2d.getcontext.extraargs</p>
+<!-- Testing: The 2D context ignores extra getContext arguments -->
+<canvas height="50" id="c206b" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
+<script>
+
+function test_2d_getcontext_extraargs() {
+
+var canvas = document.getElementById('c206b');
+var ctx = canvas.getContext('2d');
+
+ok(canvas.getContext('2d', false, {}, [], 1, "2") !== null, "canvas.getContext('2d', false, {}, [], 1, \"2\") !== null");
+
+
+}
+</script>
+
 <!-- [[[ test_2d.getcontext.shared.html ]]] -->
 
 <p>Canvas test: 2d.getcontext.shared</p>
 <!-- Testing: getContext('2d') returns objects which share canvas state -->
 <canvas height="50" id="c207" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_getcontext_shared() {
@@ -7590,17 +7608,17 @@ isPixel(ctx, 75,35, 0,255,0,255, 0);
 isPixel(ctx, 75,36, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.line.cap.invalid.html ]]] -->
 
-<p>Canvas test: 2d.line.cap.invalid - bug 401788</p>
+<p>Canvas test: 2d.line.cap.invalid</p>
 <!-- Testing: Setting lineCap to invalid values is ignored -->
 <canvas height="50" id="c307" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_line_cap_invalid() {
 
 var canvas = document.getElementById('c307');
 var ctx = canvas.getContext('2d');
@@ -7950,17 +7968,17 @@ isPixel(ctx, 48,48, 0,255,0,255, 0);
 isPixel(ctx, 1,48, 0,255,0,255, 0);
 
 
 }
 </script>
 
 <!-- [[[ test_2d.line.join.invalid.html ]]] -->
 
-<p>Canvas test: 2d.line.join.invalid - bug 401788</p>
+<p>Canvas test: 2d.line.join.invalid</p>
 <!-- Testing: Setting lineJoin to invalid values is ignored -->
 <canvas height="50" id="c315" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_2d_line_join_invalid() {
 
 var canvas = document.getElementById('c315');
 var ctx = canvas.getContext('2d');
@@ -16651,33 +16669,16 @@ ok(ctx.drawImage(document.getElementById
 ok(ctx.drawImage(canvas, 0, 0, 1, 1, 0, 0, 0, 0) === undefined, "ctx.drawImage(canvas, 0, 0, 1, 1, 0, 0, 0, 0) === undefined");
 ok(ctx.createLinearGradient(0, 0, 0, 0).addColorStop(0, 'white') === undefined, "ctx.createLinearGradient(0, 0, 0, 0).addColorStop(0, 'white') === undefined");
 
 
 }
 </script>
 <img class="resource" id="yellow_11.png" src="image_yellow.png">
 
-<!-- [[[ test_context.arguments.extra.html ]]] -->
-
-<p>Canvas test: context.arguments.extra</p>
-<canvas height="50" id="c615" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-
-function test_context_arguments_extra() {
-
-var canvas = document.getElementById('c615');
-var ctx = canvas.getContext('2d');
-
-ok(canvas.getContext('2d', 'foo') !== null, "canvas.getContext('2d', 'foo') !== null");
-
-
-}
-</script>
-
 <!-- [[[ test_context.arguments.missing.html ]]] -->
 
 <p>Canvas test: context.arguments.missing</p>
 <canvas height="50" id="c616" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_arguments_missing() {
 
@@ -16689,17 +16690,17 @@ var _thrown = undefined; try {
 } catch (e) { _thrown = e }; todo(_thrown && _thrown.name == "NotSupportedError" && _thrown.code == DOMException.NOT_SUPPORTED_ERR, "should throw NotSupportedError");
 
 
 }
 </script>
 
 <!-- [[[ test_context.casesensitive.html ]]] -->
 
-<p>Canvas test: context.casesensitive - bug 401788</p>
+<p>Canvas test: context.casesensitive</p>
 <!-- Testing: Context name "2D" is unrecognised; matching is case sensitive -->
 <canvas height="50" id="c617" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_casesensitive() {
 
 var canvas = document.getElementById('c617');
 var ctx = canvas.getContext('2d');
@@ -16707,17 +16708,17 @@ var ctx = canvas.getContext('2d');
 ok(canvas.getContext('2D') === null, "canvas.getContext('2D') === null");
 
 
 }
 </script>
 
 <!-- [[[ test_context.emptystring.html ]]] -->
 
-<p>Canvas test: context.emptystring - bug 401788</p>
+<p>Canvas test: context.emptystring</p>
 <!-- Testing: getContext with empty string returns null -->
 <canvas height="50" id="c618" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_emptystring() {
 
 var canvas = document.getElementById('c618');
 var ctx = canvas.getContext('2d');
@@ -16725,17 +16726,17 @@ var ctx = canvas.getContext('2d');
 ok(canvas.getContext("") === null, "canvas.getContext(\"\") === null");
 
 
 }
 </script>
 
 <!-- [[[ test_context.unrecognised.badname.html ]]] -->
 
-<p>Canvas test: context.unrecognised.badname - bug 401788</p>
+<p>Canvas test: context.unrecognised.badname</p>
 <!-- Testing: getContext with unrecognised context name returns null -->
 <canvas height="50" id="c619" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_unrecognised_badname() {
 
 var canvas = document.getElementById('c619');
 var ctx = canvas.getContext('2d');
@@ -16743,17 +16744,17 @@ var ctx = canvas.getContext('2d');
 ok(canvas.getContext('This is not an implemented context in any real browser') === null, "canvas.getContext('This is not an implemented context in any real browser') === null");
 
 
 }
 </script>
 
 <!-- [[[ test_context.unrecognised.badsuffix.html ]]] -->
 
-<p>Canvas test: context.unrecognised.badsuffix - bug 401788</p>
+<p>Canvas test: context.unrecognised.badsuffix</p>
 <!-- Testing: Context name "2d" plus a suffix is unrecognised -->
 <canvas height="50" id="c620" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_unrecognised_badsuffix() {
 
 var canvas = document.getElementById('c620');
 var ctx = canvas.getContext('2d');
@@ -16761,17 +16762,17 @@ var ctx = canvas.getContext('2d');
 ok(canvas.getContext("2d#") === null, "canvas.getContext(\"2d#\") === null");
 
 
 }
 </script>
 
 <!-- [[[ test_context.unrecognised.nullsuffix.html ]]] -->
 
-<p>Canvas test: context.unrecognised.nullsuffix - bug 401788</p>
+<p>Canvas test: context.unrecognised.nullsuffix</p>
 <!-- Testing: Context name "2d" plus a "\0" suffix is unrecognised -->
 <canvas height="50" id="c621" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_unrecognised_nullsuffix() {
 
 var canvas = document.getElementById('c621');
 var ctx = canvas.getContext('2d');
@@ -16779,17 +16780,17 @@ var ctx = canvas.getContext('2d');
 ok(canvas.getContext("2d\0") === null, "canvas.getContext(\"2d\\0\") === null");
 
 
 }
 </script>
 
 <!-- [[[ test_context.unrecognised.unicode.html ]]] -->
 
-<p>Canvas test: context.unrecognised.unicode - bug 401788</p>
+<p>Canvas test: context.unrecognised.unicode</p>
 <!-- Testing: Context name which kind of looks like "2d" is unrecognised -->
 <canvas height="50" id="c622" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
 function test_context_unrecognised_unicode() {
 
 var canvas = document.getElementById('c622');
 var ctx = canvas.getContext('2d');
@@ -18709,16 +18710,21 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_fillStyle_parse_transparent_2");
  }
  try {
   test_2d_getcontext_exists();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_getcontext_exists");
  }
  try {
+  test_2d_getcontext_extraargs();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_2d_getcontext_extraargs");
+ }
+ try {
   test_2d_getcontext_shared();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_getcontext_shared");
  }
  try {
   test_2d_getcontext_unique();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_getcontext_unique");
@@ -20599,21 +20605,16 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_2d_type_extend");
  }
  try {
   test_2d_voidreturn();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_2d_voidreturn");
  }
  try {
-  test_context_arguments_extra();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_context_arguments_extra");
- }
- try {
   test_context_arguments_missing();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_context_arguments_missing");
  }
  try {
   test_context_casesensitive();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_context_casesensitive");
