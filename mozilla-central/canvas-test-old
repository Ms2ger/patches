From: Ms2ger <ms2ger@gmail.com>
Bug 665345 - Fix references to the 'old' variable

This was already fixed upstream.

diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -16343,17 +16343,17 @@ ctx.save();
 ctx.fillStyle = "#ff0000";
 ctx.restore();
 ok(ctx.fillStyle === old, "ctx.fillStyle === old");
 
 // Also test that save() doesn't modify the values
 ctx.fillStyle = "#ff0000";
 old = ctx.fillStyle;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against "#ff0000"
+    // from rounding), so compare against 'old' instead of against "#ff0000"
 ctx.save();
 ok(ctx.fillStyle === old, "ctx.fillStyle === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16375,17 +16375,17 @@ ctx.save();
 ctx.globalAlpha = 0.5;
 ctx.restore();
 ok(ctx.globalAlpha === old, "ctx.globalAlpha === old");
 
 // Also test that save() doesn't modify the values
 ctx.globalAlpha = 0.5;
 old = ctx.globalAlpha;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against 0.5
+    // from rounding), so compare against 'old' instead of against 0.5
 ctx.save();
 ok(ctx.globalAlpha === old, "ctx.globalAlpha === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16407,17 +16407,17 @@ ctx.save();
 ctx.globalCompositeOperation = "copy";
 ctx.restore();
 ok(ctx.globalCompositeOperation === old, "ctx.globalCompositeOperation === old");
 
 // Also test that save() doesn't modify the values
 ctx.globalCompositeOperation = "copy";
 old = ctx.globalCompositeOperation;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against "copy"
+    // from rounding), so compare against 'old' instead of against "copy"
 ctx.save();
 ok(ctx.globalCompositeOperation === old, "ctx.globalCompositeOperation === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16439,17 +16439,17 @@ ctx.save();
 ctx.lineCap = "round";
 ctx.restore();
 ok(ctx.lineCap === old, "ctx.lineCap === old");
 
 // Also test that save() doesn't modify the values
 ctx.lineCap = "round";
 old = ctx.lineCap;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against "round"
+    // from rounding), so compare against 'old' instead of against "round"
 ctx.save();
 ok(ctx.lineCap === old, "ctx.lineCap === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16471,17 +16471,17 @@ ctx.save();
 ctx.lineJoin = "round";
 ctx.restore();
 ok(ctx.lineJoin === old, "ctx.lineJoin === old");
 
 // Also test that save() doesn't modify the values
 ctx.lineJoin = "round";
 old = ctx.lineJoin;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against "round"
+    // from rounding), so compare against 'old' instead of against "round"
 ctx.save();
 ok(ctx.lineJoin === old, "ctx.lineJoin === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16503,17 +16503,17 @@ ctx.save();
 ctx.lineWidth = 0.5;
 ctx.restore();
 ok(ctx.lineWidth === old, "ctx.lineWidth === old");
 
 // Also test that save() doesn't modify the values
 ctx.lineWidth = 0.5;
 old = ctx.lineWidth;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against 0.5
+    // from rounding), so compare against 'old' instead of against 0.5
 ctx.save();
 ok(ctx.lineWidth === old, "ctx.lineWidth === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16535,17 +16535,17 @@ ctx.save();
 ctx.miterLimit = 0.5;
 ctx.restore();
 ok(ctx.miterLimit === old, "ctx.miterLimit === old");
 
 // Also test that save() doesn't modify the values
 ctx.miterLimit = 0.5;
 old = ctx.miterLimit;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against 0.5
+    // from rounding), so compare against 'old' instead of against 0.5
 ctx.save();
 ok(ctx.miterLimit === old, "ctx.miterLimit === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16592,17 +16592,17 @@ ctx.save();
 ctx.shadowBlur = 5;
 ctx.restore();
 ok(ctx.shadowBlur === old, "ctx.shadowBlur === old");
 
 // Also test that save() doesn't modify the values
 ctx.shadowBlur = 5;
 old = ctx.shadowBlur;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against 5
+    // from rounding), so compare against 'old' instead of against 5
 ctx.save();
 ok(ctx.shadowBlur === old, "ctx.shadowBlur === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16624,17 +16624,17 @@ ctx.save();
 ctx.shadowColor = "#ff0000";
 ctx.restore();
 ok(ctx.shadowColor === old, "ctx.shadowColor === old");
 
 // Also test that save() doesn't modify the values
 ctx.shadowColor = "#ff0000";
 old = ctx.shadowColor;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against "#ff0000"
+    // from rounding), so compare against 'old' instead of against "#ff0000"
 ctx.save();
 ok(ctx.shadowColor === old, "ctx.shadowColor === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16656,17 +16656,17 @@ ctx.save();
 ctx.shadowOffsetX = 5;
 ctx.restore();
 ok(ctx.shadowOffsetX === old, "ctx.shadowOffsetX === old");
 
 // Also test that save() doesn't modify the values
 ctx.shadowOffsetX = 5;
 old = ctx.shadowOffsetX;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against 5
+    // from rounding), so compare against 'old' instead of against 5
 ctx.save();
 ok(ctx.shadowOffsetX === old, "ctx.shadowOffsetX === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16688,17 +16688,17 @@ ctx.save();
 ctx.shadowOffsetY = 5;
 ctx.restore();
 ok(ctx.shadowOffsetY === old, "ctx.shadowOffsetY === old");
 
 // Also test that save() doesn't modify the values
 ctx.shadowOffsetY = 5;
 old = ctx.shadowOffsetY;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against 5
+    // from rounding), so compare against 'old' instead of against 5
 ctx.save();
 ok(ctx.shadowOffsetY === old, "ctx.shadowOffsetY === old");
 ctx.restore();
 
 
 }
 </script>
 
@@ -16775,17 +16775,17 @@ ctx.save();
 ctx.strokeStyle = "#ff0000";
 ctx.restore();
 ok(ctx.strokeStyle === old, "ctx.strokeStyle === old");
 
 // Also test that save() doesn't modify the values
 ctx.strokeStyle = "#ff0000";
 old = ctx.strokeStyle;
     // we're not interested in failures caused by get(set(x)) != x (e.g.
-    // from rounding), so compare against d instead of against "#ff0000"
+    // from rounding), so compare against 'old' instead of against "#ff0000"
 ctx.save();
 ok(ctx.strokeStyle === old, "ctx.strokeStyle === old");
 ctx.restore();
 
 
 }
 </script>
 
