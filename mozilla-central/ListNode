From: Ms2ger <ms2ger@gmail.com>

diff --git a/js/src/frontend/Parser.cpp b/js/src/frontend/Parser.cpp
--- a/js/src/frontend/Parser.cpp
+++ b/js/src/frontend/Parser.cpp
@@ -1944,23 +1944,19 @@ Parser<FullParseHandler>::finishFunction
     /*
      * If there were destructuring formal parameters, prepend the initializing
      * comma expression that we synthesized to body. If the body is a return
      * node, we must make a special PNK_SEQ node, to prepend the destructuring
      * code without bracing the decompilation of the function body.
      */
     if (prelude) {
         if (!body->isArity(PN_LIST)) {
-            ParseNode *block;
-
-            block = ListNode::create(PNK_SEQ, &handler);
+            ListNode *block = handler.new_<ListNode>(PNK_SEQ, JSOP_NOP, body);
             if (!block)
                 return false;
-            block->pn_pos = body->pn_pos;
-            block->initList(body);
 
             body = block;
         }
 
         ParseNode *item = UnaryNode::create(PNK_SEMI, &handler);
         if (!item)
             return false;
 
