From: Ms2ger <ms2ger@gmail.com>

diff --git a/content/base/test/test_bug433533.html b/content/base/test/test_bug433533.html
--- a/content/base/test/test_bug433533.html
+++ b/content/base/test/test_bug433533.html
@@ -39,21 +39,21 @@ is(td.getAttribute("colspan"), "100k", "
 td.setAttribute("colspan", " 100 ");
 is(td.getAttribute("colspan"), " 100 ", "Colspan attribute didn't store the original value");
 td.setAttribute("colspan", "100");
 is(td.getAttribute("colspan"), "100", "Colspan attribute didn't store the original value");
 
 // Note, if colspan is negative, it is set to 1, because of backwards compatibility.
 // @see nsHTMLTableCellElement::ParseAttribute
 td.setAttribute("colspan", "-100k");
-is(td.getAttribute("colspan"), "1", "Colspan attribute didn't store the original value");
+is(td.getAttribute("colspan"), "-100k", "Colspan attribute didn't store the original value");
 td.setAttribute("colspan", " -100 ");
-is(td.getAttribute("colspan"), "1", "Colspan attribute didn't store the original value");
+is(td.getAttribute("colspan"), " -100 ", "Colspan attribute didn't store the original value");
 td.setAttribute("colspan", "-100");
-is(td.getAttribute("colspan"), "1", "Colspan attribute didn't store the original value");
+is(td.getAttribute("colspan"), "-100", "Colspan attribute didn't store the original value");
 
 
 td.setAttribute("colspan", "foobar");
 is(td.getAttribute("colspan"), "foobar", "Colspan attribute didn't store the original value");
 
 var iframe = document.createElement("iframe");
 iframe.setAttribute("marginwidth", "50%");
 is(iframe.getAttribute("marginwidth"), "50%",
diff --git a/content/html/content/reftests/colspan-q-ref.html b/content/html/content/reftests/colspan-q-ref.html
new file mode 100644
--- /dev/null
+++ b/content/html/content/reftests/colspan-q-ref.html
@@ -0,0 +1,27 @@
+<style>
+table { float: left; }
+</style>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=999>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1000>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
diff --git a/content/html/content/reftests/colspan-q.html b/content/html/content/reftests/colspan-q.html
new file mode 100644
--- /dev/null
+++ b/content/html/content/reftests/colspan-q.html
@@ -0,0 +1,27 @@
+<style>
+table { float: left; }
+</style>
+<table border>
+<tr><td colspan=-1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=0>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=999>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1000>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1001>A
+<tr><td>B<td>B
+</table>
diff --git a/content/html/content/reftests/colspan-s-ref.html b/content/html/content/reftests/colspan-s-ref.html
new file mode 100644
--- /dev/null
+++ b/content/html/content/reftests/colspan-s-ref.html
@@ -0,0 +1,28 @@
+<!DOCTYPE html>
+<style>
+table { float: left; }
+</style>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=999>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1000>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
diff --git a/content/html/content/reftests/colspan-s.html b/content/html/content/reftests/colspan-s.html
new file mode 100644
--- /dev/null
+++ b/content/html/content/reftests/colspan-s.html
@@ -0,0 +1,28 @@
+<!DOCTYPE html>
+<style>
+table { float: left; }
+</style>
+<table border>
+<tr><td colspan=-1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=0>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=999>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1000>A
+<tr><td>B<td>B
+</table>
+<table border>
+<tr><td colspan=1001>A
+<tr><td>B<td>B
+</table>
diff --git a/content/html/content/reftests/reftest.list b/content/html/content/reftests/reftest.list
--- a/content/html/content/reftests/reftest.list
+++ b/content/html/content/reftests/reftest.list
@@ -19,13 +19,17 @@ skip-if(B2G) == 41464-1b.html 41464-1-re
 == 596455-1a.html 596455-ref-1.html
 == 596455-1b.html 596455-ref-1.html
 == 596455-2a.html 596455-ref-2.html
 == 596455-2b.html 596455-ref-2.html
 == 610935.html 610935-ref.html
 == 649134-1.html 649134-ref.html
 skip-if(Android||B2G) == 649134-2.html 649134-2-ref.html
 
+== colspan-s.html colspan-s-ref.html
+== colspan-q.html colspan-q-ref.html
 == href-attr-change-restyles.html href-attr-change-restyles-ref.html
 == figure.html figure-ref.html
+== rowspan-s.html rowspan-s-ref.html
+== rowspan-q.html rowspan-q-ref.html
 == table-border-1.html table-border-1-ref.html
 == table-border-2.html table-border-2-ref.html
 != table-border-2.html table-border-2-notref.html
diff --git a/content/html/content/reftests/rowspan-q-ref.html b/content/html/content/reftests/rowspan-q-ref.html
new file mode 100644
--- /dev/null
+++ b/content/html/content/reftests/rowspan-q-ref.html
@@ -0,0 +1,19 @@
+<style>
+table { float: left; }
+</style>
+<table border>
+<tr><td>B<td rowspan=2>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=2>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=1>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=2>A
+<tr><td>B
+</table>
diff --git a/content/html/content/reftests/rowspan-q.html b/content/html/content/reftests/rowspan-q.html
new file mode 100644
--- /dev/null
+++ b/content/html/content/reftests/rowspan-q.html
@@ -0,0 +1,19 @@
+<style>
+table { float: left; }
+</style>
+<table border>
+<tr><td>B<td rowspan=-1>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=0>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=1>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=2>A
+<tr><td>B
+</table>
diff --git a/content/html/content/reftests/rowspan-s-ref.html b/content/html/content/reftests/rowspan-s-ref.html
new file mode 100644
--- /dev/null
+++ b/content/html/content/reftests/rowspan-s-ref.html
@@ -0,0 +1,20 @@
+<!DOCTYPE html>
+<style>
+table { float: left; }
+</style>
+<table border>
+<tr><td>B<td rowspan=2>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=2>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=1>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=2>A
+<tr><td>B
+</table>
diff --git a/content/html/content/reftests/rowspan-s.html b/content/html/content/reftests/rowspan-s.html
new file mode 100644
--- /dev/null
+++ b/content/html/content/reftests/rowspan-s.html
@@ -0,0 +1,20 @@
+<!DOCTYPE html>
+<style>
+table { float: left; }
+</style>
+<table border>
+<tr><td>B<td rowspan=-1>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=0>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=1>A
+<tr><td>B
+</table>
+<table border>
+<tr><td>B<td rowspan=2>A
+<tr><td>B
+</table>
diff --git a/content/html/content/src/HTMLTableCellElement.cpp b/content/html/content/src/HTMLTableCellElement.cpp
--- a/content/html/content/src/HTMLTableCellElement.cpp
+++ b/content/html/content/src/HTMLTableCellElement.cpp
@@ -389,38 +389,25 @@ HTMLTableCellElement::ParseAttribute(int
     /* ignore these attributes, stored simply as strings
        abbr, axis, ch, headers
     */
     if (aAttribute == nsGkAtoms::charoff) {
       /* attributes that resolve to integers with a min of 0 */
       return aResult.ParseIntWithBounds(aValue, 0);
     }
     if (aAttribute == nsGkAtoms::colspan) {
-      bool res = aResult.ParseIntWithBounds(aValue, -1);
-      if (res) {
-        int32_t val = aResult.GetIntegerValue();
-        // reset large colspan values as IE and opera do
-        // quirks mode does not honor the special html 4 value of 0
-        if (val > MAX_COLSPAN || val < 0 ||
-            (0 == val && InNavQuirksMode(OwnerDoc()))) {
-          aResult.SetTo(1);
-        }
+      bool res = aResult.ParseIntWithBounds(aValue, 1);
+      if (res && aResult.GetIntegerValue() > MAX_COLSPAN) {
+        // Reset large colspan values as IE and Opera do.
+        aResult.SetTo(1);
       }
       return res;
     }
     if (aAttribute == nsGkAtoms::rowspan) {
-      bool res = aResult.ParseIntWithBounds(aValue, -1, MAX_ROWSPAN);
-      if (res) {
-        int32_t val = aResult.GetIntegerValue();
-        // quirks mode does not honor the special html 4 value of 0
-        if (val < 0 || (0 == val && InNavQuirksMode(OwnerDoc()))) {
-          aResult.SetTo(1);
-        }
-      }
-      return res;
+      return aResult.ParseIntWithBounds(aValue, 0, MAX_ROWSPAN);
     }
     if (aAttribute == nsGkAtoms::height) {
       return aResult.ParseSpecialIntValue(aValue);
     }
     if (aAttribute == nsGkAtoms::width) {
       return aResult.ParseSpecialIntValue(aValue);
     }
     if (aAttribute == nsGkAtoms::align) {
