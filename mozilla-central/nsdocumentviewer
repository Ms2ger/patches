* * *

diff --git a/layout/base/nsDocumentViewer.cpp b/layout/base/nsDocumentViewer.cpp
--- a/layout/base/nsDocumentViewer.cpp
+++ b/layout/base/nsDocumentViewer.cpp
@@ -69,10 +69,7 @@
 #include "nsISelectionListener.h"
 #include "nsISelectionPrivate.h"
 #include "nsIDOMHTMLDocument.h"
-#include "nsIDOMNSHTMLDocument.h"
-#include "nsIDOMHTMLCollection.h"
 #include "nsIDOMHTMLElement.h"
-#include "nsIDOMRange.h"
 #include "nsContentCID.h"
 #include "nsLayoutCID.h"
 #include "nsContentUtils.h"
@@ -374,8 +371,11 @@
   nsresult CreateDeviceContext(nsIView* aContainerView);
 
   /**
-   * If aDoCreation is true, this creates the device context, creates a
-   * prescontext if necessary, and calls MakeWindow.
+   * This method can be used to initialize the "presentation"
+   *
+   * @param aDoCreation If true, this creates the device context, creates a
+   *                    PresContext if necessary, and calls MakeWindow.
+   *                    Otherwise, just initializes the existing objects.
    */
   nsresult InitInternal(nsIWidget* aParentWidget,
                         nsISupports *aState,
@@ -393,13 +393,33 @@
   nsresult GetPopupLinkNode(nsIDOMNode** aNode);
   nsresult GetPopupImageNode(nsIImageLoadingContent** aNode);
 
-  void PrepareToStartLoad(void);
+  void PrepareToStartLoad();
 
   nsresult SyncParentSubDocMap();
 
   nsresult GetDocumentSelection(nsISelection **aSelection);
 
+  /**
+   * Destroys the PresShell.
+   * @pre mPresShell is not null.
+   * @post mPresShell is null.
+   */
   void DestroyPresShell();
+
+  /**
+   * Destroys the PresContext.
+   * @pre mPresContext is not null.
+   * @post mPresContext is null.
+   */
+  void DestroyPresContext();
+
+  /**
+   * Creates and initializes our PresContext. If this doesn't succeed, sets it
+   * null.
+   *
+   * @param aType the nsPresContextType for our PresContext.
+   */
+  nsresult CreatePresContext(nsPresContext::nsPresContextType aType);
 
 #ifdef NS_PRINTING
   // Called when the DocViewer is notified that the state
@@ -593,13 +613,6 @@
 
   NS_ASSERTION(!mPresShell && !mPresContext,
                "User did not call nsIContentViewer::Destroy");
-  if (mPresShell || mPresContext) {
-    // Make sure we don't hand out a reference to the content viewer to
-    // the SHEntry!
-    mSHEntry = nullptr;
-
-    Destroy();
-  }
 
   // XXX(?) Revoke pending invalidate events
 }
@@ -821,20 +834,6 @@
   return NS_OK;
 }
 
-static nsPresContext*
-CreatePresContext(nsIDocument* aDocument,
-                  nsPresContext::nsPresContextType aType,
-                  nsIView* aContainerView)
-{
-  if (aContainerView)
-    return new nsPresContext(aDocument, aType);
-  return new nsRootPresContext(aDocument, aType);
-}
-
-//-----------------------------------------------
-// This method can be used to initial the "presentation"
-// The aDoCreation indicates whether it should create
-// all the new objects or just initialize the existing ones
 nsresult
 DocumentViewerImpl::InitInternal(nsIWidget* aParentWidget,
                                  nsISupports *aState,
@@ -851,14 +850,14 @@
   mParentWidget = aParentWidget; // not ref counted
   mBounds = aBounds;
 
+  NS_ENSURE_TRUE(mDocument, NS_ERROR_NULL_POINTER);
+
+  nsIView* containerView = FindContainerView();
+
+  bool makeCX = false;
   nsresult rv = NS_OK;
-  NS_ENSURE_TRUE(mDocument, NS_ERROR_NULL_POINTER);
-
-  nsIView* containerView = FindContainerView();
-
-  bool makeCX = false;
   if (aDoCreation) {
-    nsresult rv = CreateDeviceContext(containerView);
+    rv = CreateDeviceContext(containerView);
     NS_ENSURE_SUCCESS(rv, rv);
 
     // XXXbz this is a nasty hack to do with the fact that we create
@@ -868,19 +867,8 @@
     if (!mPresContext &&
         (aParentWidget || containerView || mDocument->GetDisplayDocument())) {
       // Create presentation context
-      if (mIsPageMode) {
-        //Presentation context already created in SetPageMode which is calling this method
-      } else {
-        mPresContext = CreatePresContext(mDocument,
-            nsPresContext::eContext_Galley, containerView);
-      }
-      NS_ENSURE_TRUE(mPresContext, NS_ERROR_OUT_OF_MEMORY);
-
-      nsresult rv = mPresContext->Init(mDeviceContext);
-      if (NS_FAILED(rv)) {
-        mPresContext = nullptr;
-        return rv;
-      }
+      rv = CreatePresContext(nsPresContext::eContext_Galley);
+      NS_ENSURE_SUCCESS(rv, rv);
 
 #if defined(NS_PRINTING) && defined(NS_PRINT_PREVIEW)
       makeCX = !GetIsPrintPreview() && aNeedMakeCX; // needs to be true except when we are already in PP or we are enabling/disabling paginated mode.
@@ -1636,11 +1624,7 @@
     DestroyPresShell();
   }
 
-  if (mPresContext) {
-    mPresContext->SetContainer(nullptr);
-    mPresContext->SetLinkHandler(nullptr);
-    mPresContext = nullptr;
-  }
+  DestroyPresContext();
 
   mContainer = nullptr;
 
@@ -1993,15 +1977,9 @@
 
     // Create presentation context
     NS_ASSERTION(!mPresContext, "Shouldn't have a prescontext if we have no shell!");
-    mPresContext = CreatePresContext(mDocument,
-        nsPresContext::eContext_Galley, containerView);
-    NS_ENSURE_TRUE(mPresContext, NS_ERROR_OUT_OF_MEMORY);
-
-    rv = mPresContext->Init(mDeviceContext);
-    if (NS_FAILED(rv)) {
-      mPresContext = nullptr;
-      return rv;
-    }
+
+    rv = CreatePresContext(nsPresContext::eContext_Galley);
+    NS_ENSURE_SUCCESS(rv, rv);
 
     rv = MakeWindow(nsSize(mPresContext->DevPixelsToAppUnits(mBounds.width),
                            mPresContext->DevPixelsToAppUnits(mBounds.height)),
@@ -2071,12 +2049,7 @@
   }
 
   DestroyPresShell();
-
-  // Clear weak refs
-  mPresContext->SetContainer(nullptr);
-  mPresContext->SetLinkHandler(nullptr);
-
-  mPresContext   = nullptr;
+  DestroyPresContext();
   mViewManager   = nullptr;
   mWindow        = nullptr;
   mDeviceContext = nullptr;
@@ -4185,8 +4158,7 @@
     }
     mWindow = nullptr;
     mViewManager = nullptr;
-    mPresContext = nullptr;
-    mPresShell = nullptr;
+    DestroyPresContext();
   }
 }
 
@@ -4311,26 +4283,16 @@
     DestroyPresShell();
   }
 
-  if (mPresContext) {
-    mPresContext->SetContainer(nullptr);
-    mPresContext->SetLinkHandler(nullptr);
-  }
-
-  mPresShell    = nullptr;
-  mPresContext  = nullptr;
+  DestroyPresContext();
   mViewManager  = nullptr;
   mWindow       = nullptr;
 
   NS_ENSURE_STATE(mDocument);
-  if (aPageMode)
-  {
-    mPresContext = CreatePresContext(mDocument,
-        nsPresContext::eContext_PageLayout, FindContainerView());
-    NS_ENSURE_TRUE(mPresContext, NS_ERROR_OUT_OF_MEMORY);
+  if (aPageMode) {
+    nsresult rv = CreatePresContext(nsPresContext::eContext_PageLayout);
+    NS_ENSURE_SUCCESS(rv, rv);
     mPresContext->SetPaginatedScrolling(true);
     mPresContext->SetPrintSettings(aPrintSettings);
-    nsresult rv = mPresContext->Init(mDeviceContext);
-    NS_ENSURE_SUCCESS(rv, rv);
   }
   InitInternal(mParentWidget, nullptr, mBounds, true, false, false);
 
@@ -4348,18 +4310,52 @@
 void
 DocumentViewerImpl::DestroyPresShell()
 {
+  NS_ASSERTION(mPresShell, "Don't call DestroyPresShell without a PresShell.");
   // Break circular reference (or something)
   mPresShell->EndObservingDocument();
 
-  nsCOMPtr<nsISelection> selection;
-  GetDocumentSelection(getter_AddRefs(selection));
-  nsCOMPtr<nsISelectionPrivate> selPrivate = do_QueryInterface(selection);
-  if (selPrivate && mSelectionListener)
-    selPrivate->RemoveSelectionListener(mSelectionListener);
+  if (mSelectionListener) {
+    nsCOMPtr<nsISelection> selection;
+    GetDocumentSelection(getter_AddRefs(selection));
+    nsCOMPtr<nsISelectionPrivate> selPrivate = do_QueryInterface(selection);
+    if (selPrivate) {
+      selPrivate->RemoveSelectionListener(mSelectionListener);
+    }
+  }
 
   nsAutoScriptBlocker scriptBlocker;
   mPresShell->Destroy();
   mPresShell = nullptr;
+}
+
+void
+DocumentViewerImpl::DestroyPresContext()
+{
+  if (mPresContext) {
+    // Clear weak refs
+    mPresContext->SetContainer(nullptr);
+    mPresContext->SetLinkHandler(nullptr);
+
+    mPresContext = nullptr;
+  }
+}
+
+nsresult
+DocumentViewerImpl::CreatePresContext(nsPresContext::nsPresContextType aType)
+{
+  NS_ASSERTION(!mPresContext, "Overwriting mPresContext!");
+  if (FindContainerView()) {
+    mPresContext = new nsPresContext(mDocument, aType);
+  } else {
+    mPresContext = new nsRootPresContext(mDocument, aType);
+  }
+  NS_ENSURE_TRUE(mPresContext, NS_ERROR_OUT_OF_MEMORY);
+
+  nsresult rv = mPresContext->Init(mDeviceContext);
+  if (NS_FAILED(rv)) {
+    mPresContext = nullptr;
+  }
+  return rv;
 }
 
 bool
@@ -4383,6 +4379,7 @@
   if (mPresShell) {
     DestroyPresShell();
   }
+  DestroyPresContext();
 
   mWindow = aWidget;
   mViewManager = aViewManager;
