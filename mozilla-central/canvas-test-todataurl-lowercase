From: Ms2ger <ms2ger@gmail.com>
Bug 665345 - Merge toDataURL.lowercase.ascii into test_canvas.html

This patch stops us running toDataURL.lowercase and its newer
version toDataURL.lowercase.ascii in parallel.

diff --git a/content/canvas/test/Makefile.in b/content/canvas/test/Makefile.in
--- a/content/canvas/test/Makefile.in
+++ b/content/canvas/test/Makefile.in
@@ -95,17 +95,16 @@ MOCHITEST_FILES = \
 	test_2d.composite.uncovered.fill.color.html \
 	test_2d.composite.uncovered.fill.luminosity.html \
 	test_2d.drawImage.zerocanvas.html \
 	test_2d.fill.winding.html \
 	test_2d.isPointInPath.winding.html \
 	test_2d.strokeRect.zero.5.html \
 	test_toBlob.html \
 	test_toDataURL_alpha.html \
-	test_toDataURL_lowercase_ascii.html \
 	test_toDataURL_parameters.html \
 	test_mozGetAsFile.html \
 	test_canvas_strokeStyle_getter.html \
 	test_bug613794.html \
 	test_bug753758.html \
 	test_bug764125.html \
 	test_bug856472.html \
 	test_bug866575.html \
diff --git a/content/canvas/test/test_canvas.html b/content/canvas/test/test_canvas.html
--- a/content/canvas/test/test_canvas.html
+++ b/content/canvas/test/test_canvas.html
@@ -17656,30 +17656,37 @@ var ctx = canvas.getContext('2d');
 
 var data = canvas.toDataURL();
 ok(/^data:image\/png[;,]/.test(data), "data =~ /^data:image\\/png[;,]/");
 
 
 }
 </script>
 
-<!-- [[[ test_toDataURL.lowercase.html ]]] -->
-
-<p>Canvas test: toDataURL.lowercase - bug 401795</p>
-<!-- Testing: toDataURL type is case-sensitive -->
+<!-- [[[ test_toDataURL.lowercase.ascii.html ]]] -->
+
+<p>Canvas test: toDataURL.lowercase.ascii</p>
+<!-- Testing: toDataURL type is case-insensitive -->
 <canvas height="50" id="c669" width="100"><p class="fallback">FAIL (fallback content)</p></canvas>
 <script>
 
-function test_toDataURL_lowercase() {
+function test_toDataURL_lowercase_ascii() {
 
 var canvas = document.getElementById('c669');
 var ctx = canvas.getContext('2d');
 
 var data = canvas.toDataURL('ImAgE/PnG');
-ok(/^data:image\/png[;,]/.test(data), "data =~ /^data:image\\/png[;,]/");
+ok(data.match(/^data:image\/png[;,]/), "data.match(/^data:image\\/png[;,]/)");
+
+// If JPEG is supported at all, it must be supported case-insensitively
+data = canvas.toDataURL('image/jpeg');
+if (data.match(/^data:image\/jpeg[;,]/)) {
+    data = canvas.toDataURL('ImAgE/JpEg');
+    ok(data.match(/^data:image\/jpeg[;,]/), "data.match(/^data:image\\/jpeg[;,]/)");
+}
 
 
 }
 </script>
 
 <!-- [[[ test_toDataURL.nocontext.html ]]] -->
 
 <p>Canvas test: toDataURL.nocontext</p>
@@ -20870,19 +20877,19 @@ function runTests() {
   ok(false, "unexpected exception thrown in: test_toDataURL_complexcolours");
  }
  try {
   test_toDataURL_default();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_toDataURL_default");
  }
  try {
-  test_toDataURL_lowercase();
- } catch (e) {
-  ok(false, "unexpected exception thrown in: test_toDataURL_lowercase");
+  test_toDataURL_lowercase_ascii();
+ } catch (e) {
+  ok(false, "unexpected exception thrown in: test_toDataURL_lowercase_ascii");
  }
  try {
   test_toDataURL_nocontext();
  } catch (e) {
   ok(false, "unexpected exception thrown in: test_toDataURL_nocontext");
  }
  try {
   test_toDataURL_png();
diff --git a/content/canvas/test/test_toDataURL_lowercase_ascii.html b/content/canvas/test/test_toDataURL_lowercase_ascii.html
deleted file mode 100644
--- a/content/canvas/test/test_toDataURL_lowercase_ascii.html
+++ /dev/null
@@ -1,21 +0,0 @@
-<!DOCTYPE HTML>
-<title>Canvas test: toDataURL.lowercase.ascii</title>
-<script src="/MochiKit/MochiKit.js"></script>
-<script src="/tests/SimpleTest/SimpleTest.js"></script>
-<link rel="stylesheet" href="/tests/SimpleTest/test.css">
-<body>
-<canvas id="c" width="100" height="50"><p class="fallback">FAIL (fallback content)</p></canvas>
-<script>
-var canvas = document.getElementById('c');
-var ctx = canvas.getContext("2d");
-
-var data = canvas.toDataURL('ImAgE/PnG');
-ok(data.match(/^data:image\/png[;,]/), "data =~ /^data:image\\/png[;,]/");
-
-// If JPEG is supported at all, it must be supported case-insensitively
-data = canvas.toDataURL('image/jpeg');
-if (data.match(/^data:image\/jpeg[;,]/)) {
-    data = canvas.toDataURL('ImAgE/JpEg');
-    ok(data.match(/^data:image\/jpeg[;,]/), "data =~ /^data:image\\/jpeg[;,]/");
-}
-</script>
