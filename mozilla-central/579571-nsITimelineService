From: Ms2ger <ms2ger@gmail.com>

diff --git a/content/xul/content/src/nsXULElement.cpp b/content/xul/content/src/nsXULElement.cpp
--- a/content/xul/content/src/nsXULElement.cpp
+++ b/content/xul/content/src/nsXULElement.cpp
@@ -136,17 +136,16 @@
 #include "nsIDOM3EventTarget.h"
 #include "nsIDOMEventGroup.h"
 #include "nsIControllers.h"
 
 // The XUL doc interface
 #include "nsIDOMXULDocument.h"
 
 #include "nsReadableUtils.h"
-#include "nsITimelineService.h"
 #include "nsIFrame.h"
 #include "nsNodeInfoManager.h"
 #include "nsXBLBinding.h"
 #include "nsEventDispatcher.h"
 #include "mozAutoDocUpdate.h"
 #include "nsIDOMXULCommandEvent.h"
 #include "nsIDOMNSEvent.h"
 #include "nsCCUncollectableMarker.h"
diff --git a/dom/base/nsJSEnvironment.cpp b/dom/base/nsJSEnvironment.cpp
--- a/dom/base/nsJSEnvironment.cpp
+++ b/dom/base/nsJSEnvironment.cpp
@@ -84,17 +84,16 @@
 #include "nsCollationCID.h"
 #include "nsDOMClassInfo.h"
 
 #include "jsdbgapi.h"           // for JS_ClearWatchPointsForObject
 #include "jsxdrapi.h"
 #include "nsIArray.h"
 #include "nsIObjectInputStream.h"
 #include "nsIObjectOutputStream.h"
-#include "nsITimelineService.h"
 #include "nsDOMScriptObjectHolder.h"
 #include "prmem.h"
 #include "WrapperFactory.h"
 #include "nsGlobalWindow.h"
 
 #ifdef XP_MACOSX
 // AssertMacros.h defines 'check' and conflicts with AccessCheck.h
 #undef check
diff --git a/embedding/components/find/src/nsWebBrowserFind.cpp b/embedding/components/find/src/nsWebBrowserFind.cpp
--- a/embedding/components/find/src/nsWebBrowserFind.cpp
+++ b/embedding/components/find/src/nsWebBrowserFind.cpp
@@ -1,11 +1,10 @@
-/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * ***** BEGIN LICENSE BLOCK *****
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
  * The contents of this file are subject to the Mozilla Public License Version
  * 1.1 (the "License"); you may not use this file except in compliance with
  * the License. You may obtain a copy of the License at
  * http://www.mozilla.org/MPL/
  *
  * Software distributed under the License is distributed on an "AS IS" basis,
@@ -66,18 +65,16 @@
 #include "nsReadableUtils.h"
 #include "nsIDOMHTMLElement.h"
 #include "nsIDOMHTMLDocument.h"
 #include "nsIContent.h"
 #include "nsContentCID.h"
 #include "nsIServiceManager.h"
 #include "nsIObserverService.h"
 #include "nsISupportsPrimitives.h"
-#include "nsITimelineService.h"
-#include "nsFind.h"
 #include "nsDOMError.h"
 #include "nsFocusManager.h"
 #include "mozilla/Services.h"
 
 #if DEBUG
 #include "nsIWebNavigation.h"
 #include "nsXPIDLString.h"
 #endif
diff --git a/intl/strres/src/nsStringBundle.cpp b/intl/strres/src/nsStringBundle.cpp
--- a/intl/strres/src/nsStringBundle.cpp
+++ b/intl/strres/src/nsStringBundle.cpp
@@ -57,17 +57,16 @@
 #include "nsIMemory.h"
 #include "nsIObserverService.h"
 #include "pratom.h"
 #include "prmem.h"
 #include "nsCOMArray.h"
 #include "nsAutoLock.h"
 #include "nsTextFormatter.h"
 #include "nsIErrorService.h"
-#include "nsITimelineService.h"
 #include "nsICategoryManager.h"
 
 #include "nsPrintfCString.h"
 // for async loading
 #ifdef ASYNC_LOADING
 #include "nsIBinaryInputStream.h"
 #include "nsIStringStream.h"
 #endif
diff --git a/intl/uconv/src/nsCharsetAliasImp.cpp b/intl/uconv/src/nsCharsetAliasImp.cpp
--- a/intl/uconv/src/nsCharsetAliasImp.cpp
+++ b/intl/uconv/src/nsCharsetAliasImp.cpp
@@ -41,17 +41,16 @@
 
 // for NS_IMPL_IDS only
 #include "nsIPlatformCharset.h"
 
 #include "nsUConvDll.h"
 #include "nsReadableUtils.h"
 #include "nsUnicharUtils.h"
 #include "nsUConvPropertySearch.h"
-#include "nsITimelineService.h"
 #include "nsCharsetAlias.h"
 
 //--------------------------------------------------------------
 NS_IMPL_THREADSAFE_ISUPPORTS1(nsCharsetAlias2, nsICharsetAlias)
 
 //--------------------------------------------------------------
 nsCharsetAlias2::nsCharsetAlias2()
 {
diff --git a/intl/uconv/src/nsOS2Charset.cpp b/intl/uconv/src/nsOS2Charset.cpp
--- a/intl/uconv/src/nsOS2Charset.cpp
+++ b/intl/uconv/src/nsOS2Charset.cpp
@@ -1,11 +1,10 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
- *
- * ***** BEGIN LICENSE BLOCK *****
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
  * The contents of this file are subject to the Mozilla Public License Version
  * 1.1 (the "License"); you may not use this file except in compliance with
  * the License. You may obtain a copy of the License at
  * http://www.mozilla.org/MPL/
  *
  * Software distributed under the License is distributed on an "AS IS" basis,
@@ -33,28 +32,28 @@
  * under the terms of either the GPL or the LGPL, and not to allow others to
  * use your version of this file under the terms of the MPL, indicate your
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
+
 #include "nsIPlatformCharset.h"
 #include "nsUConvPropertySearch.h"
 #include "pratom.h"
 #define INCL_WIN
 #include <os2.h>
 #include "nsUConvDll.h"
 #include "nsIOS2Locale.h"
 #include "nsCOMPtr.h"
 #include "nsReadableUtils.h"
 #include "nsLocaleCID.h"
 #include "nsIServiceManager.h"
-#include "nsITimelineService.h"
 #include "nsPlatformCharset.h"
 
 static const char* kOS2Charsets[][3] = {
 #include "os2charset.properties.h"
 };
 
 NS_IMPL_ISUPPORTS1(nsPlatformCharset, nsIPlatformCharset)
 
diff --git a/intl/uconv/src/nsWinCharset.cpp b/intl/uconv/src/nsWinCharset.cpp
--- a/intl/uconv/src/nsWinCharset.cpp
+++ b/intl/uconv/src/nsWinCharset.cpp
@@ -1,9 +1,8 @@
-
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
  * The contents of this file are subject to the Mozilla Public License Version
  * 1.1 (the "License"); you may not use this file except in compliance with
  * the License. You may obtain a copy of the License at
  * http://www.mozilla.org/MPL/
  *
@@ -40,17 +39,16 @@
 #include "pratom.h"
 #include <windows.h>
 #include "nsUConvDll.h"
 #include "nsIWin32Locale.h"
 #include "nsCOMPtr.h"
 #include "nsReadableUtils.h"
 #include "nsLocaleCID.h"
 #include "nsServiceManagerUtils.h"
-#include "nsITimelineService.h"
 #include "nsPlatformCharset.h"
 
 static const char* kWinCharsets[][3] = {
 #include "wincharset.properties.h"
 };
 
 NS_IMPL_ISUPPORTS1(nsPlatformCharset, nsIPlatformCharset)
 
diff --git a/layout/base/nsDocumentViewer.cpp b/layout/base/nsDocumentViewer.cpp
--- a/layout/base/nsDocumentViewer.cpp
+++ b/layout/base/nsDocumentViewer.cpp
@@ -119,17 +119,16 @@
 
 #include "nsPIDOMWindow.h"
 #include "nsPIWindowRoot.h"
 #include "nsJSEnvironment.h"
 #include "nsFocusManager.h"
 
 #include "nsIScrollableFrame.h"
 #include "nsIHTMLDocument.h"
-#include "nsITimelineService.h"
 #include "nsGfxCIID.h"
 #include "nsStyleSheetService.h"
 #include "nsURILoader.h"
 
 #include "nsIPrompt.h"
 #include "imgIContainer.h" // image animation mode constants
 
 //--------------------------
diff --git a/layout/printing/nsPagePrintTimer.h b/layout/printing/nsPagePrintTimer.h
--- a/layout/printing/nsPagePrintTimer.h
+++ b/layout/printing/nsPagePrintTimer.h
@@ -29,22 +29,21 @@
  * under the terms of either the GPL or the LGPL, and not to allow others to
  * use your version of this file under the terms of the MPL, indicate your
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
-#ifndef nsPagePrintTimer_h___
-#define nsPagePrintTimer_h___
 
-// Timer Includes
+#ifndef nsPagePrintTimer_h
+#define nsPagePrintTimer_h
+
 #include "nsITimer.h"
-#include "nsITimelineService.h"
 
 #include "nsIDocumentViewerPrint.h"
 #include "nsPrintObject.h"
 
 class nsPrintEngine;
 
 //---------------------------------------------------
 //-- Page Timer Class
@@ -78,9 +77,9 @@ private:
   uint32_t                   mFiringCount;
   nsPrintObject *            mPrintObj;
 };
 
 
 nsresult
 NS_NewPagePrintTimer(nsPagePrintTimer **aResult);
 
-#endif /* nsPagePrintTimer_h___ */
+#endif /* nsPagePrintTimer_h */
diff --git a/layout/style/Loader.cpp b/layout/style/Loader.cpp
--- a/layout/style/Loader.cpp
+++ b/layout/style/Loader.cpp
@@ -1,12 +1,11 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
- * vim: ft=cpp tw=78 sw=2 et ts=2
- *
- * ***** BEGIN LICENSE BLOCK *****
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=2 et sw=2 tw=80: */
+/* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
  * The contents of this file are subject to the Mozilla Public License Version
  * 1.1 (the "License"); you may not use this file except in compliance with
  * the License. You may obtain a copy of the License at
  * http://www.mozilla.org/MPL/
  *
  * Software distributed under the License is distributed on an "AS IS" basis,
@@ -66,17 +65,16 @@
 #include "nsHashtable.h"
 #include "nsIURI.h"
 #include "nsIServiceManager.h"
 #include "nsNetUtil.h"
 #include "nsContentUtils.h"
 #include "nsCRT.h"
 #include "nsIScriptSecurityManager.h"
 #include "nsContentPolicyUtils.h"
-#include "nsITimelineService.h"
 #include "nsIHttpChannel.h"
 #include "nsIScriptError.h"
 #include "nsMimeTypes.h"
 #include "nsIAtom.h"
 #include "nsIDOM3Node.h"
 #include "nsCSSStyleSheet.h"
 #include "nsIStyleSheetLinkingElement.h"
 #include "nsICSSLoaderObserver.h"
diff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
@@ -89,17 +89,16 @@
 #include "nsIURL.h"
 #include "nsNetUtil.h"
 #include "nsBoxLayoutState.h"
 #include "nsIDragService.h"
 #include "nsTreeContentView.h"
 #include "nsTreeUtils.h"
 #include "nsChildIterator.h"
 #include "nsITheme.h"
-#include "nsITimelineService.h"
 #include "imgIRequest.h"
 #include "imgIContainer.h"
 #include "imgIContainerObserver.h"
 #include "imgILoader.h"
 #include "nsINodeInfo.h"
 #include "nsContentUtils.h"
 #include "nsLayoutUtils.h"
 #include "nsIScrollableFrame.h"
diff --git a/modules/libpref/src/nsPrefService.cpp b/modules/libpref/src/nsPrefService.cpp
--- a/modules/libpref/src/nsPrefService.cpp
+++ b/modules/libpref/src/nsPrefService.cpp
@@ -65,18 +65,16 @@
 #include "prmem.h"
 #include "pldhash.h"
 
 #include "prefapi.h"
 #include "prefread.h"
 #include "prefapi_private_data.h"
 #include "PrefTuple.h"
 
-#include "nsITimelineService.h"
-
 #ifdef MOZ_OMNIJAR
 #include "mozilla/Omnijar.h"
 #include "nsZipArchive.h"
 #endif
 
 // Definitions
 #define INITIAL_PREF_FILES 10
 static NS_DEFINE_CID(kZipReaderCID, NS_ZIPREADER_CID);
diff --git a/modules/plugin/base/src/nsPluginHost.cpp b/modules/plugin/base/src/nsPluginHost.cpp
--- a/modules/plugin/base/src/nsPluginHost.cpp
+++ b/modules/plugin/base/src/nsPluginHost.cpp
@@ -2263,18 +2263,16 @@ NS_IMETHODIMP nsPluginHost::LoadPlugins(
       mozilla::services::GetObserverService();
     if (obsService)
       obsService->NotifyObservers(nullptr, "plugins-list-updated", nullptr);
   }
 
   return NS_OK;
 }
 
-#include "nsITimelineService.h"
-
 // if aCreatePluginList is false we will just scan for plugins
 // and see if any changes have been made to the plugins.
 // This is needed in ReloadPlugins to prevent possible recursive reloads
 nsresult nsPluginHost::FindPlugins(bool aCreatePluginList, bool * aPluginsChanged)
 {
   // let's start timing if we are only really creating the plugin list
   if (aCreatePluginList) {
     NS_TIMELINE_START_TIMER("LoadPlugins");
diff --git a/netwerk/base/src/nsIOService.cpp b/netwerk/base/src/nsIOService.cpp
--- a/netwerk/base/src/nsIOService.cpp
+++ b/netwerk/base/src/nsIOService.cpp
@@ -56,17 +56,16 @@
 #include "nsIPrefService.h"
 #include "nsIPrefBranch2.h"
 #include "nsIPrefLocalizedString.h"
 #include "nsICategoryManager.h"
 #include "nsXPCOM.h"
 #include "nsISupportsPrimitives.h"
 #include "nsIProxiedProtocolHandler.h"
 #include "nsIProxyInfo.h"
-#include "nsITimelineService.h"
 #include "nsEscape.h"
 #include "nsNetCID.h"
 #include "nsIRecyclingAllocator.h"
 #include "nsISocketTransport.h"
 #include "nsCRT.h"
 #include "nsSimpleNestedURI.h"
 #include "nsNetUtil.h"
 #include "nsThreadUtils.h"
diff --git a/rdf/base/src/nsRDFXMLDataSource.cpp b/rdf/base/src/nsRDFXMLDataSource.cpp
--- a/rdf/base/src/nsRDFXMLDataSource.cpp
+++ b/rdf/base/src/nsRDFXMLDataSource.cpp
@@ -890,18 +890,16 @@ NS_IMETHODIMP
 RDFXMLDataSourceImpl::SetReadOnly(bool aIsReadOnly)
 {
     if (mIsWritable && aIsReadOnly)
         mIsWritable = false;
 
     return NS_OK;
 }
 
-#include "nsITimelineService.h"
-
 // nsIChannelEventSink
 
 // This code is copied from nsSameOriginChecker::OnChannelRedirect. See
 // bug 475940 on providing this code in a shared location.
 NS_IMETHODIMP
 RDFXMLDataSourceImpl::AsyncOnChannelRedirect(nsIChannel *aOldChannel,
                                              nsIChannel *aNewChannel,
                                              uint32_t aFlags,
diff --git a/rdf/base/src/nsRDFXMLSerializer.cpp b/rdf/base/src/nsRDFXMLSerializer.cpp
--- a/rdf/base/src/nsRDFXMLSerializer.cpp
+++ b/rdf/base/src/nsRDFXMLSerializer.cpp
@@ -1,12 +1,11 @@
-/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- * vim: set ts=4 sw=4 et tw=80:
- *
- * ***** BEGIN LICENSE BLOCK *****
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* vim: set ts=4 sw=4 et tw=80: */
+/* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
  * The contents of this file are subject to the Mozilla Public License Version
  * 1.1 (the "License"); you may not use this file except in compliance with
  * the License. You may obtain a copy of the License at
  * http://www.mozilla.org/MPL/
  *
  * Software distributed under the License is distributed on an "AS IS" basis,
@@ -49,18 +48,16 @@
 #include "nsString.h"
 #include "nsXPIDLString.h"
 #include "nsTArray.h"
 #include "rdf.h"
 #include "rdfutil.h"
 
 #include "rdfIDataSource.h"
 
-#include "nsITimelineService.h"
-
 int32_t nsRDFXMLSerializer::gRefCnt = 0;
 nsIRDFContainerUtils* nsRDFXMLSerializer::gRDFC;
 nsIRDFResource* nsRDFXMLSerializer::kRDF_instanceOf;
 nsIRDFResource* nsRDFXMLSerializer::kRDF_type;
 nsIRDFResource* nsRDFXMLSerializer::kRDF_nextVal;
 nsIRDFResource* nsRDFXMLSerializer::kRDF_Bag;
 nsIRDFResource* nsRDFXMLSerializer::kRDF_Seq;
 nsIRDFResource* nsRDFXMLSerializer::kRDF_Alt;
diff --git a/toolkit/components/intl/nsCharsetMenu.cpp b/toolkit/components/intl/nsCharsetMenu.cpp
--- a/toolkit/components/intl/nsCharsetMenu.cpp
+++ b/toolkit/components/intl/nsCharsetMenu.cpp
@@ -56,17 +56,16 @@
 #include "nsIPrefLocalizedString.h"
 #include "nsICurrentCharsetListener.h"
 #include "nsQuickSort.h"
 #include "nsIObserver.h"
 #include "nsStringEnumerator.h"
 #include "nsTArray.h"
 #include "nsIObserverService.h"
 #include "nsIRequestObserver.h"
-#include "nsITimelineService.h"
 #include "nsCRT.h"
 #include "prmem.h"
 #include "mozilla/ModuleUtils.h"
 #include "nsCycleCollectionParticipant.h"
 
 //----------------------------------------------------------------------------
 // Global functions and data [declaration]
 
diff --git a/toolkit/components/startup/src/nsAppStartup.cpp b/toolkit/components/startup/src/nsAppStartup.cpp
--- a/toolkit/components/startup/src/nsAppStartup.cpp
+++ b/toolkit/components/startup/src/nsAppStartup.cpp
@@ -48,17 +48,16 @@
 #include "nsILocalFile.h"
 #include "nsIObserverService.h"
 #include "nsIPrefBranch.h"
 #include "nsIPrefService.h"
 #include "nsIProfileChangeStatus.h"
 #include "nsIPromptService.h"
 #include "nsIStringBundle.h"
 #include "nsISupportsPrimitives.h"
-#include "nsITimelineService.h"
 #include "nsIWebBrowserChrome.h"
 #include "nsIWindowMediator.h"
 #include "nsIWindowWatcher.h"
 #include "nsIXULWindow.h"
 #include "nsNativeCharsetUtils.h"
 #include "nsThreadUtils.h"
 #include "nsAutoPtr.h"
 #include "nsStringGlue.h"
diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -101,17 +101,16 @@ using mozilla::dom::ContentParent;
 #include "nsIObserverService.h"
 #include "nsINativeAppSupport.h"
 #include "nsIProcess.h"
 #include "nsIProfileUnlocker.h"
 #include "nsIPromptService.h"
 #include "nsIServiceManager.h"
 #include "nsIStringBundle.h"
 #include "nsISupportsPrimitives.h"
-#include "nsITimelineService.h"
 #include "nsIToolkitChromeRegistry.h"
 #include "nsIToolkitProfile.h"
 #include "nsIToolkitProfileService.h"
 #include "nsIURI.h"
 #include "nsIWindowCreator.h"
 #include "nsIWindowMediator.h"
 #include "nsIWindowWatcher.h"
 #include "nsIXULAppInfo.h"
diff --git a/xpcom/build/XPCOM.h b/xpcom/build/XPCOM.h
--- a/xpcom/build/XPCOM.h
+++ b/xpcom/build/XPCOM.h
@@ -103,17 +103,16 @@
 #include "nsIStreamBufferAccess.h"
 #include "nsIStringEnumerator.h"
 #include "nsIStorageStream.h"
 #include "nsISupportsArray.h"
 #include "nsISupportsIterators.h"
 #include "nsISupportsPrimitives.h"
 #include "nsISupportsPriority.h"
 #include "nsIThreadManager.h"
-#include "nsITimelineService.h"
 #include "nsITimer.h"
 #include "nsITraceRefcnt.h"
 #include "nsIUUIDGenerator.h"
 #include "nsIUnicharInputStream.h"
 #include "nsIUnicharOutputStream.h"
 #include "nsIUnicharLineInputStream.h"
 #include "nsIVariant.h"
 #include "nsIVersionComparator.h"
diff --git a/xpcom/build/XPCOMModule.inc b/xpcom/build/XPCOMModule.inc
--- a/xpcom/build/XPCOMModule.inc
+++ b/xpcom/build/XPCOMModule.inc
@@ -16,19 +16,16 @@
 
     COMPONENT(PERSISTENTPROPERTIES, nsPersistentProperties::Create)
 
     COMPONENT(SUPPORTSARRAY, nsSupportsArray::Create)
     COMPONENT(ARRAY, nsArrayConstructor)
     COMPONENT(CONSOLESERVICE, nsConsoleServiceConstructor)
     COMPONENT(EXCEPTIONSERVICE, nsExceptionServiceConstructor)
     COMPONENT(ATOMSERVICE, nsAtomServiceConstructor)
-#ifdef MOZ_TIMELINE
-    COMPONENT(TIMELINESERVICE, nsTimelineServiceConstructor)
-#endif
     COMPONENT(OBSERVERSERVICE, nsObserverService::Create)
 
     COMPONENT(XPCOMPROXY, nsProxyObjectManager::Create)
 
     COMPONENT(TIMER, nsTimerImplConstructor)
 
 #define COMPONENT_SUPPORTS(TYPE, Type)                                         \
   COMPONENT(SUPPORTS_##TYPE, nsSupports##Type##ImplConstructor)
diff --git a/xpcom/build/nsXPComInit.cpp b/xpcom/build/nsXPComInit.cpp
--- a/xpcom/build/nsXPComInit.cpp
+++ b/xpcom/build/nsXPComInit.cpp
@@ -108,17 +108,16 @@
 #include "nsStringStream.h"
 extern nsresult nsStringInputStreamConstructor(nsISupports *, REFNSIID, void **);
 
 #include "nsFastLoadService.h"
 
 #include "nsAtomService.h"
 #include "nsAtomTable.h"
 #include "nsTraceRefcnt.h"
-#include "nsTimelineService.h"
 
 #include "nsHashPropertyBag.h"
 
 #include "nsUnicharInputStream.h"
 #include "nsVariant.h"
 
 #include "nsUUIDGenerator.h"
 
@@ -215,20 +214,16 @@ NS_GENERIC_FACTORY_CONSTRUCTOR(nsBinaryO
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsBinaryInputStream)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsStorageStream)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsVersionComparatorImpl)
 
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsVariant)
 
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsRecyclingAllocatorImpl)
 
-#ifdef MOZ_TIMELINE
-NS_GENERIC_FACTORY_CONSTRUCTOR(nsTimelineService)
-#endif
-
 NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsHashPropertyBag, Init)
 
 NS_GENERIC_AGGREGATED_CONSTRUCTOR_INIT(nsProperties, Init)
 
 NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsUUIDGenerator, Init)
 
 #ifdef XP_MACOSX
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsMacUtilsImpl)
diff --git a/xpcom/ds/Makefile.in b/xpcom/ds/Makefile.in
--- a/xpcom/ds/Makefile.in
+++ b/xpcom/ds/Makefile.in
@@ -130,17 +130,16 @@ XPIDLSRCS	= \
 		nsIWritablePropertyBag.idl \
 		nsIWritablePropertyBag2.idl \
 		nsIRecyclingAllocator.idl \
 		nsIVariant.idl \
 		nsISerializable.idl \
 		nsIStringEnumerator.idl \
 		nsISupportsArray.idl \
 		nsISupportsIterators.idl \
-		nsITimelineService.idl \
 		$(NULL)
 
 SDK_XPIDLSRCS   = \
 		nsIArray.idl               \
 		nsIHashable.idl            \
 		nsIMutableArray.idl        \
 		nsIObserverService.idl	   \
 		nsIObserver.idl		   \
diff --git a/xpcom/ds/nsITimelineService.idl b/xpcom/ds/nsITimelineService.idl
deleted file mode 100644
--- a/xpcom/ds/nsITimelineService.idl
+++ /dev/null
@@ -1,242 +0,0 @@
-/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
-/* ***** BEGIN LICENSE BLOCK *****
- * Version: MPL 1.1/GPL 2.0/LGPL 2.1
- *
- * The contents of this file are subject to the Mozilla Public License Version
- * 1.1 (the "License"); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
- * http://www.mozilla.org/MPL/
- *
- * Software distributed under the License is distributed on an "AS IS" basis,
- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- * for the specific language governing rights and limitations under the
- * License.
- *
- * The Original Code is mozilla.org code.
- *
- * The Initial Developer of the Original Code is
- * Netscape Communications Corporation.
- * Portions created by the Initial Developer are Copyright (C) 1998
- * the Initial Developer. All Rights Reserved.
- *
- * Contributor(s):
- *
- * Alternatively, the contents of this file may be used under the terms of
- * either of the GNU General Public License Version 2 or later (the "GPL"),
- * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
- * in which case the provisions of the GPL or the LGPL are applicable instead
- * of those above. If you wish to allow use of your version of this file only
- * under the terms of either the GPL or the LGPL, and not to allow others to
- * use your version of this file under the terms of the MPL, indicate your
- * decision by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL or the LGPL. If you do not delete
- * the provisions above, a recipient may use your version of this file under
- * the terms of any one of the MPL, the GPL or the LGPL.
- *
- * ***** END LICENSE BLOCK ***** */
-
-#include "nsISupports.idl"
-
-%{C++
-#ifdef MOZ_TIMELINE
-%}
-      
-/**
- * nsITimelineService is used to construct a timeline of program
- * execution.  The timeline is output to a file, either stderr or the
- * value of the environment variable NS_TIMELINE_LOG_FILE.  On the
- * Mac, the timeline is output to the file named "timeline.txt".  The
- * reason it's different on the Mac is that the Mac environment
- * initialization code happens after timeline initialization code.
- * 
- * If NS_TIMELINE_INIT_TIME is set in the environment, that will be
- * used as the time of startup; otherwise the current time when mark()
- * is first called will be used.
- * 
- * mark() is used to put marks on the timeline.
- * 
- * indent() and outdent() are used to format the timeline a bit to
- * show nesting.  This doesn't produce perfect results in the face of
- * asychrony and multiple threads.
- * 
- * enter() and leave() are convenience functions that add marks to the
- * timeline and do indentation.
- * 
- * startTimer() and stopTimer() control named stop watches.  If
- * startTimer() is called more than once, an equal number of
- * stopTimer() calls are needed to actually stop the timer.  This
- * makes these timers slightly useful in a threaded environment.
- * 
- * markTimer() puts a mark on the timeline containing the total for
- * the named timer.
- * 
- * Don't use nsITimelineService in C++ code; use the NS_TIMELINE
- * macros instead.  nsITimelineService exists so that JavaScript code
- * can mark the timeline.
- */
-[scriptable, uuid(93276790-3daf-11d5-b67d-000064657374)]
-interface nsITimelineService : nsISupports
-{
-    /**
-     * mark()
-     * Print "<elapsed time>: <text>\n" in the timeline log file.
-     */
-    void mark(in string text);
-
-    /**
-     * causes subsequent marks to be indented for a more readable
-     * report.
-     */
-    void indent();
-
-    /**
-     * Causes subsequent marks to be outdented.
-     */
-    void outdent();
-
-    /**
-     * enter/leave bracket code with "<text>..." and "...<text>" as
-     * well as indentation.
-     */
-    void enter(in string text);
-    void leave(in string text);
-
-    void startTimer(in string timerName);
-
-    void stopTimer(in string timerName);
-
-    void markTimer(in string timerName);
-
-    void resetTimer(in string timerName);
-
-    // Mark a timer, plus an additional comment
-    void markTimerWithComment(in string timerName, in string comment);
-};
-
-%{C++
-#endif /* MOZ_TIMELINE */
-%}
-
-
-%{C++
-
-#ifdef MOZ_TIMELINE
-
-/*
- * These are equivalent to the corresponding nsITimelineService
- * methods, and can be called before XPCOM is initialized.
- */
-extern "C" NS_COM nsresult NS_TimelineMark(const char *text, ...);
-extern "C" NS_COM nsresult NS_TimelineForceMark(const char *text, ...);
-extern "C" NS_COM nsresult NS_TimelineStartTimer(const char *timerName);
-extern "C" NS_COM nsresult NS_TimelineStopTimer(const char *timerName);
-extern "C" NS_COM nsresult NS_TimelineResetTimer(const char *timerName);
-extern "C" NS_COM nsresult NS_TimelineMarkTimer(const char *timerName, const char *str=nullptr);
-extern "C" NS_COM nsresult NS_TimelineIndent();
-extern "C" NS_COM nsresult NS_TimelineOutdent();
-extern "C" NS_COM nsresult NS_TimelineEnter(const char *text);
-extern "C" NS_COM nsresult NS_TimelineLeave(const char *text);
-
-/*
- * Use these macros for the above calls so we can easily compile them
- * out.
- */
-#define NS_TIMELINE_MARK(text) NS_TimelineMark(text)
-#define NS_TIMELINE_MARKV(args) NS_TimelineMark args
-#define NS_TIMELINE_INDENT() NS_TimelineIndent()
-#define NS_TIMELINE_OUTDENT() NS_TimelineOutdent()
-#define NS_TIMELINE_ENTER(text) NS_TimelineEnter(text)
-#define NS_TIMELINE_LEAVE(text) NS_TimelineLeave(text)
-#define NS_TIMELINE_START_TIMER(timerName) NS_TimelineStartTimer(timerName)
-#define NS_TIMELINE_STOP_TIMER(timerName) NS_TimelineStopTimer(timerName)
-#define NS_TIMELINE_MARK_TIMER(timerName) NS_TimelineMarkTimer(timerName)
-#define NS_TIMELINE_RESET_TIMER(timerName) NS_TimelineResetTimer(timerName)
-#define NS_TIMELINE_MARK_TIMER1(timerName, str) NS_TimelineMarkTimer(timerName, str)
-
-/*
- * Helper class to time functions. Use only static strings.
- */
-class nsFunctionTimer {
-public:
-    const char *mTimer;
-    bool mMark;
-    const char *mMarkStr;
-    nsFunctionTimer(const char *timer, bool mark = true, const char *markStr = nullptr)
-        : mTimer(timer), mMark(mark), mMarkStr(markStr)
-    {
-        NS_TIMELINE_START_TIMER(mTimer);
-    }
-
-    ~nsFunctionTimer()
-    {
-        NS_TIMELINE_STOP_TIMER(mTimer);
-        if (mMark)
-            if (mMarkStr)
-                NS_TIMELINE_MARK_TIMER1(mTimer, mMarkStr);
-            else
-                NS_TIMELINE_MARK_TIMER(mTimer);
-    }
-};
-
-/*
- * NS_TIMELINE_MARK_ macros for various data types.  Each of these
- * macros replaces "%s" in its "text" argument with a string
- * representation of its last argument.
- * 
- * Please feel free to add more NS_TIMELINE_MARK_ macros for
- * various data types so that code using NS_TIMELINE is uncluttered.
- * Don't forget the empty versions in the #else section below for
- * non-timeline builds.
- */
-#define NS_TIMELINE_MARK_URI(text, uri) \
-    { \
-        nsAutoCString spec; \
-        if (uri) { \
-            uri->GetSpec(spec); \
-        } \
-        if (!spec.IsEmpty()) { \
-            NS_TimelineMark(text, spec.get()); \
-        } else { \
-            NS_TimelineMark(text, "??"); \
-        } \
-    }
-
-#define NS_TIMELINE_MARK_CHANNEL(text, channel) \
-    { \
-        nsCOMPtr<nsIURI> uri; \
-        if (channel) { \
-            channel->GetURI(getter_AddRefs(uri)); \
-        } \
-        NS_TIMELINE_MARK_URI(text, uri); \
-    }
-
-#define NS_TIMELINE_MARK_LOADER(text, loader) \
-    { \
-        nsCOMPtr<nsIRequest> request; \
-        loader->GetRequest(getter_AddRefs(request)); \
-        nsCOMPtr<nsIChannel> channel(do_QueryInterface(request)); \
-        NS_TIMELINE_MARK_CHANNEL(text, channel); \
-    }
-#define NS_TIMELINE_MARK_FUNCTION(timer) nsFunctionTimer functionTimer(timer)
-#define NS_TIMELINE_MARK_FUNCTION1(timer, str) nsFunctionTimer functionTimer(timer, true, str)
-#define NS_TIMELINE_TIME_FUNCTION(timer) nsFunctionTimer functionTimer(timer, false) /* no mark, only time */
-
-#else /* !defined(MOZ_TIMELINE) */
-#define NS_TIMELINE_MARK(text)
-#define NS_TIMELINE_MARKV(args)
-#define NS_TIMELINE_INDENT()
-#define NS_TIMELINE_OUTDENT()
-#define NS_TIMELINE_START_TIMER(timerName)
-#define NS_TIMELINE_STOP_TIMER(timerName)
-#define NS_TIMELINE_MARK_TIMER(timerName)
-#define NS_TIMELINE_RESET_TIMER(timerName)
-#define NS_TIMELINE_MARK_TIMER1(timerName, str)
-#define NS_TIMELINE_ENTER(text)
-#define NS_TIMELINE_LEAVE(text)
-#define NS_TIMELINE_MARK_URI(text, uri)
-#define NS_TIMELINE_MARK_FUNCTION(timer)
-#define NS_TIMELINE_TIME_FUNCTION(timer)
-#define NS_TIMELINE_MARK_CHANNEL(text, channel)
-#define NS_TIMELINE_MARK_LOADER(text, loader);
-#endif /* defined(MOZ_TIMELINE) */ 
-%}
diff --git a/xpcom/ds/nsTimelineService.cpp b/xpcom/ds/nsTimelineService.cpp
deleted file mode 100644
--- a/xpcom/ds/nsTimelineService.cpp
+++ /dev/null
@@ -1,574 +0,0 @@
-/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
-/* ***** BEGIN LICENSE BLOCK *****
- * Version: MPL 1.1/GPL 2.0/LGPL 2.1
- *
- * The contents of this file are subject to the Mozilla Public License Version
- * 1.1 (the "License"); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
- * http://www.mozilla.org/MPL/
- *
- * Software distributed under the License is distributed on an "AS IS" basis,
- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- * for the specific language governing rights and limitations under the
- * License.
- *
- * The Original Code is mozilla.org code.
- *
- * The Initial Developer of the Original Code is
- * Netscape Communications Corporation.
- * Portions created by the Initial Developer are Copyright (C) 1998
- * the Initial Developer. All Rights Reserved.
- *
- * Contributor(s):
- *
- * Alternatively, the contents of this file may be used under the terms of
- * either of the GNU General Public License Version 2 or later (the "GPL"),
- * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
- * in which case the provisions of the GPL or the LGPL are applicable instead
- * of those above. If you wish to allow use of your version of this file only
- * under the terms of either the GPL or the LGPL, and not to allow others to
- * use your version of this file under the terms of the MPL, indicate your
- * decision by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL or the LGPL. If you do not delete
- * the provisions above, a recipient may use your version of this file under
- * the terms of any one of the MPL, the GPL or the LGPL.
- *
- * ***** END LICENSE BLOCK ***** */
-
-#include "nsTimelineService.h"
-#include "prlong.h"
-#include "prprf.h"
-#include "prenv.h"
-#include "plhash.h"
-#include "prlock.h"
-#include "prinit.h"
-#include "prinrval.h"
-#include "prthread.h"
-
-#ifdef MOZ_TIMELINE
-
-#define MAXINDENT 20
-
-static PRFileDesc *timelineFD = PR_STDERR;
-static bool gTimelineDisabled = true;
-
-// Notes about threading:
-// We avoid locks as we always use thread-local-storage.
-// This means every other thread has its own private copy of
-// data, and this thread can't re-enter (as our implemenation
-// doesn't call back out anywhere).  Thus, we can avoid locks!
-// TLS index
-static const unsigned BAD_TLS_INDEX = (unsigned) -1;
-static unsigned gTLSIndex = BAD_TLS_INDEX;
-
-class TimelineThreadData {
-public:
-    TimelineThreadData() : initTime(0), indent(0),
-                           disabled(true), timers(nullptr) {}
-    ~TimelineThreadData() {if (timers) PL_HashTableDestroy(timers);}
-    PRTime initTime;
-    PRHashTable *timers;
-    int indent;
-    bool disabled;
-};
-
-/* Implementation file */
-NS_IMPL_THREADSAFE_ISUPPORTS1(nsTimelineService, nsITimelineService)
-
-/*
- * Timer structure stored in a hash table to keep track of named
- * timers.
- */
-class nsTimelineServiceTimer {
-  public:
-    nsTimelineServiceTimer();
-    ~nsTimelineServiceTimer();
-    void start();
-    
-    /*
-     * Caller passes in "now" rather than having us calculate it so
-     * that we can avoid including timer overhead in the time being
-     * measured.
-     */
-    void stop(PRTime now);
-    void reset();
-    PRTime getAccum();
-    PRTime getAccum(PRTime now);
-
-  private:
-    PRTime mAccum;
-    PRTime mStart;
-    int32_t mRunning;
-    PRThread *mOwnerThread; // only used for asserts - could be #if MOZ_DEBUG
-};
-
-#define TIMER_CHECK_OWNER() \
-    NS_ABORT_IF_FALSE(PR_GetCurrentThread() == mOwnerThread, \
-                      "Timer used by non-owning thread")
-
-
-nsTimelineServiceTimer::nsTimelineServiceTimer()
-: mAccum(LL_ZERO), mStart(LL_ZERO), mRunning(0),
-  mOwnerThread(PR_GetCurrentThread())
-{
-}
-
-nsTimelineServiceTimer::~nsTimelineServiceTimer()
-{
-}
-
-void nsTimelineServiceTimer::start()
-{
-    TIMER_CHECK_OWNER();
-    if (!mRunning) {
-        mStart = PR_Now();
-    }
-    mRunning++;
-}
-
-void nsTimelineServiceTimer::stop(PRTime now)
-{
-    TIMER_CHECK_OWNER();
-    mRunning--;
-    if (mRunning == 0) {
-        PRTime delta, accum;
-        LL_SUB(delta, now, mStart);
-        LL_ADD(accum, mAccum, delta);
-        mAccum = accum;
-    }
-}
-
-void nsTimelineServiceTimer::reset()
-{
-  TIMER_CHECK_OWNER();
-  mStart = 0;
-  mAccum = 0;
-}
-
-PRTime nsTimelineServiceTimer::getAccum()
-{
-    TIMER_CHECK_OWNER();
-    PRTime accum;
-
-    if (!mRunning) {
-        accum = mAccum;
-    } else {
-        PRTime delta;
-        LL_SUB(delta, PR_Now(), mStart);
-        LL_ADD(accum, mAccum, delta);
-    }
-    return accum;
-}
-
-PRTime nsTimelineServiceTimer::getAccum(PRTime now)
-{
-    TIMER_CHECK_OWNER();
-    PRTime accum;
-
-    if (!mRunning) {
-        accum = mAccum;
-    } else {
-        PRTime delta;
-        LL_SUB(delta, now, mStart);
-        LL_ADD(accum, mAccum, delta);
-    }
-    return accum;
-}
-
-static TimelineThreadData *GetThisThreadData()
-{
-    NS_ABORT_IF_FALSE(gTLSIndex!=BAD_TLS_INDEX, "Our TLS not initialized");
-    TimelineThreadData *new_data = nullptr;
-    TimelineThreadData *data = (TimelineThreadData *)PR_GetThreadPrivate(gTLSIndex);
-    if (data == nullptr) {
-        // First request for this thread - allocate it.
-        new_data = new TimelineThreadData();
-        if (!new_data)
-            goto done;
-
-        // Fill it
-        new_data->timers = PL_NewHashTable(100, PL_HashString, PL_CompareStrings,
-                                 PL_CompareValues, NULL, NULL);
-        if (new_data->timers==NULL)
-            goto done;
-        new_data->initTime = PR_Now();
-        NS_ASSERTION(!gTimelineDisabled,
-                         "Why are we creating new state when disabled?");
-        new_data->disabled = false;
-        data = new_data;
-        new_data = nullptr;
-        PR_SetThreadPrivate(gTLSIndex, data);
-    }
-done:
-    if (new_data) // eeek - error during creation!
-        delete new_data;
-    NS_ASSERTION(data, "TimelineService could not get thread-local data");
-    return data;
-}
-
-extern "C" {
-  static void ThreadDestruct (void *data);
-  static PRStatus TimelineInit(void);
-}
-
-void ThreadDestruct( void *data )
-{
-    if (data)
-        delete (TimelineThreadData *)data;
-}
-
-/*
-* PRCallOnceFN that initializes stuff for the timing service.
-*/
-static PRCallOnceType initonce;
-
-PRStatus TimelineInit(void)
-{
-    char *timeStr;
-    char *fileName;
-    const char *timelineEnable;
-    int32_t secs, msecs;
-    PRFileDesc *fd;
-    int64_t tmp1, tmp2;
-
-    PRStatus status = PR_NewThreadPrivateIndex( &gTLSIndex, ThreadDestruct );
-    NS_ASSERTION(status==0, "TimelineService could not allocate TLS storage.");
-
-    timeStr = PR_GetEnv("NS_TIMELINE_INIT_TIME");
-    // NS_TIMELINE_INIT_TIME only makes sense for the main thread, so if it
-    // exists, set it there.  If not, let normal thread management code take
-    // care of setting the init time.
-    if (timeStr && *timeStr && (2 == PR_sscanf(timeStr, "%d.%d", &secs, &msecs))) {
-        PRTime &initTime = GetThisThreadData()->initTime;
-        LL_MUL(tmp1, (int64_t)secs, 1000000);
-        LL_MUL(tmp2, (int64_t)msecs, 1000);
-        LL_ADD(initTime, tmp1, tmp2);
-    }
-
-    // Get the log file.
-    fileName = PR_GetEnv("NS_TIMELINE_LOG_FILE");
-    if (fileName && *fileName
-        && (fd = PR_Open(fileName, PR_WRONLY | PR_CREATE_FILE | PR_TRUNCATE,
-                         0666)) != NULL) {
-        timelineFD = fd;
-        PR_fprintf(fd,
-                   "NOTE: due to asynchrony, the indentation that you see does"
-                   " not necessarily correspond to nesting in the code.\n\n");
-    }
-
-    // Runtime disable of timeline
-    timelineEnable = PR_GetEnv("NS_TIMELINE_ENABLE");
-    if (timelineEnable && *timelineEnable)
-        gTimelineDisabled = false;
-    return PR_SUCCESS;
-}
-
-static void ParseTime(PRTime tm, int32_t& secs, int32_t& msecs)
-{
-    PRTime llsecs, llmsecs, tmp;
-
-    LL_DIV(llsecs, tm, 1000000);
-    LL_MOD(tmp, tm, 1000000);
-    LL_DIV(llmsecs, tmp, 1000);
-
-    LL_L2I(secs, llsecs);
-    LL_L2I(msecs, llmsecs);
-}
-
-static char *Indent(char *buf)
-{
-    int &indent = GetThisThreadData()->indent;
-    int amount = indent;
-    if (amount > MAXINDENT) {
-        amount = MAXINDENT;
-    }
-    if (amount < 0) {
-        amount = 0;
-        indent = 0;
-        PR_Write(timelineFD, "indent underflow!\n", 18);
-    }
-    while (amount--) {
-        *buf++ = ' ';
-    }
-    return buf;
-}
-
-static void PrintTime(PRTime tm, const char *text, va_list args)
-{
-    int32_t secs, msecs;
-    char pbuf[550], *pc, tbuf[550];
-
-    ParseTime(tm, secs, msecs);
-
-    // snprintf/write rather than fprintf because we don't want
-    // messages from multiple threads to garble one another.
-    pc = Indent(pbuf);
-    PR_vsnprintf(pc, sizeof pbuf - (pc - pbuf), text, args);
-    PR_snprintf(tbuf, sizeof tbuf, "%05d.%03d (%08p): %s\n",
-                secs, msecs, PR_GetCurrentThread(), pbuf);
-    PR_Write(timelineFD, tbuf, strlen(tbuf));
-}
-
-/*
- * Make this public if we need it.
- */
-static nsresult NS_TimelineMarkV(const char *text, va_list args)
-{
-    PRTime elapsed,tmp;
-
-    PR_CallOnce(&initonce, TimelineInit);
-
-    TimelineThreadData *thread = GetThisThreadData();
-
-    tmp = PR_Now();
-    LL_SUB(elapsed, tmp, thread->initTime);
-
-    PrintTime(elapsed, text, args);
-
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineForceMark(const char *text, ...)
-{
-    va_list args;
-    va_start(args, text);
-    NS_TimelineMarkV(text, args);
-
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineMark(const char *text, ...)
-{
-    va_list args;
-    va_start(args, text);
-
-    PR_CallOnce(&initonce, TimelineInit);
-
-    if (gTimelineDisabled)
-        return NS_ERROR_NOT_AVAILABLE;
-
-    TimelineThreadData *thread = GetThisThreadData();
-
-    if (thread->disabled)
-        return NS_ERROR_NOT_AVAILABLE;
-
-    NS_TimelineMarkV(text, args);
-
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineStartTimer(const char *timerName)
-{
-    PR_CallOnce(&initonce, TimelineInit);
-
-    if (gTimelineDisabled)
-        return NS_ERROR_NOT_AVAILABLE;
-
-    TimelineThreadData *thread = GetThisThreadData();
-
-    if (thread->timers == NULL)
-        return NS_ERROR_FAILURE;
-    if (thread->disabled)
-        return NS_ERROR_NOT_AVAILABLE;
-
-    nsTimelineServiceTimer *timer
-        = (nsTimelineServiceTimer *)PL_HashTableLookup(thread->timers, timerName);
-    if (timer == NULL) {
-        timer = new nsTimelineServiceTimer;
-        if (!timer)
-            return NS_ERROR_OUT_OF_MEMORY;
-
-        PL_HashTableAdd(thread->timers, timerName, timer);
-    }
-    timer->start();
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineStopTimer(const char *timerName)
-{
-    if (gTimelineDisabled)
-        return NS_ERROR_NOT_AVAILABLE;
-    /*
-     * Strange-looking now/timer->stop() interaction is to avoid
-     * including time spent in TLS and PL_HashTableLookup in the
-     * timer.
-     */
-    PRTime now = PR_Now();
-
-    TimelineThreadData *thread = GetThisThreadData();
-    if (thread->timers == NULL)
-        return NS_ERROR_FAILURE;
-    if (thread->disabled)
-        return NS_ERROR_NOT_AVAILABLE;
-    nsTimelineServiceTimer *timer
-        = (nsTimelineServiceTimer *)PL_HashTableLookup(thread->timers, timerName);
-    if (timer == NULL) {
-        return NS_ERROR_FAILURE;
-    }
-
-    timer->stop(now);
-
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineMarkTimer(const char *timerName, const char *str)
-{
-    PR_CallOnce(&initonce, TimelineInit);
-
-    if (gTimelineDisabled)
-        return NS_ERROR_NOT_AVAILABLE;
-
-    TimelineThreadData *thread = GetThisThreadData();
-    if (thread->timers == NULL)
-        return NS_ERROR_FAILURE;
-    if (thread->disabled)
-        return NS_ERROR_NOT_AVAILABLE;
-    nsTimelineServiceTimer *timer
-        = (nsTimelineServiceTimer *)PL_HashTableLookup(thread->timers, timerName);
-    if (timer == NULL) {
-        return NS_ERROR_FAILURE;
-    }
-    PRTime accum = timer->getAccum();
-
-    char buf[500];
-    int32_t sec, msec;
-    ParseTime(accum, sec, msec);
-    if (!str)
-        PR_snprintf(buf, sizeof buf, "%s total: %d.%03d",
-                    timerName, sec, msec);
-    else
-        PR_snprintf(buf, sizeof buf, "%s total: %d.%03d (%s)",
-                    timerName, sec, msec, str);
-    NS_TimelineMark(buf);
-
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineResetTimer(const char *timerName)
-{
-    if (gTimelineDisabled)
-        return NS_ERROR_NOT_AVAILABLE;
-
-    TimelineThreadData *thread = GetThisThreadData();
-    if (thread->timers == NULL)
-        return NS_ERROR_FAILURE;
-    if (thread->disabled)
-        return NS_ERROR_NOT_AVAILABLE;
-    nsTimelineServiceTimer *timer
-        = (nsTimelineServiceTimer *)PL_HashTableLookup(thread->timers, timerName);
-    if (timer == NULL) {
-        return NS_ERROR_FAILURE;
-    }
-
-    timer->reset();
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineIndent()
-{
-    if (gTimelineDisabled)
-        return NS_ERROR_NOT_AVAILABLE;
-
-    TimelineThreadData *thread = GetThisThreadData();
-    if (thread->disabled)
-        return NS_ERROR_NOT_AVAILABLE;
-    thread->indent++;
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineOutdent()
-{
-    if (gTimelineDisabled)
-        return NS_ERROR_NOT_AVAILABLE;
-
-    TimelineThreadData *thread = GetThisThreadData();
-    if (thread->disabled)
-        return NS_ERROR_NOT_AVAILABLE;
-    thread->indent--;
-    return NS_OK;
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineEnter(const char *text)
-{
-    nsresult rv = NS_TimelineMark("%s...", text);
-    if (NS_FAILED(rv)) {
-        return rv;
-    }
-    return NS_TimelineIndent();
-}
-
-PR_IMPLEMENT(nsresult) NS_TimelineLeave(const char *text)
-{
-    nsresult rv = NS_TimelineOutdent();
-    if (NS_FAILED(rv)) {
-        return rv;
-    }
-    return NS_TimelineMark("...%s", text);
-}
-
-nsTimelineService::nsTimelineService()
-{
-  /* member initializers and constructor code */
-}
-
-/* void mark (in string text); */
-NS_IMETHODIMP nsTimelineService::Mark(const char *text)
-{
-    return NS_TimelineMark(text);
-}
-
-/* void startTimer (in string timerName); */
-NS_IMETHODIMP nsTimelineService::StartTimer(const char *timerName)
-{
-    return NS_TimelineStartTimer(timerName);
-}
-
-/* void stopTimer (in string timerName); */
-NS_IMETHODIMP nsTimelineService::StopTimer(const char *timerName)
-{
-    return NS_TimelineStopTimer(timerName);
-}
-
-/* void markTimer (in string timerName); */
-NS_IMETHODIMP nsTimelineService::MarkTimer(const char *timerName)
-{
-    return NS_TimelineMarkTimer(timerName);
-}
-
-/* void markTimerWithComment(in string timerName, in string comment); */
-NS_IMETHODIMP nsTimelineService::MarkTimerWithComment(const char *timerName, const char *comment)
-{
-    return NS_TimelineMarkTimer(timerName, comment);
-}
-
-/* void resetTimer (in string timerName); */
-NS_IMETHODIMP nsTimelineService::ResetTimer(const char *timerName)
-{
-    return NS_TimelineResetTimer(timerName);
-}
-
-/* void indent (); */
-NS_IMETHODIMP nsTimelineService::Indent()
-{
-    return NS_TimelineIndent();
-}
-
-/* void outdent (); */
-NS_IMETHODIMP nsTimelineService::Outdent()
-{
-    return NS_TimelineOutdent();
-}
-
-/* void enter (in string text); */
-NS_IMETHODIMP nsTimelineService::Enter(const char *text)
-{
-    return NS_TimelineEnter(text);
-}
-
-/* void leave (in string text); */
-NS_IMETHODIMP nsTimelineService::Leave(const char *text)
-{
-    return NS_TimelineLeave(text);
-}
-
-#endif /* MOZ_TIMELINE */
diff --git a/xpcom/ds/nsTimelineService.h b/xpcom/ds/nsTimelineService.h
deleted file mode 100644
--- a/xpcom/ds/nsTimelineService.h
+++ /dev/null
@@ -1,64 +0,0 @@
-/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
-/* ***** BEGIN LICENSE BLOCK *****
- * Version: MPL 1.1/GPL 2.0/LGPL 2.1
- *
- * The contents of this file are subject to the Mozilla Public License Version
- * 1.1 (the "License"); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
- * http://www.mozilla.org/MPL/
- *
- * Software distributed under the License is distributed on an "AS IS" basis,
- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- * for the specific language governing rights and limitations under the
- * License.
- *
- * The Original Code is mozilla.org code.
- *
- * The Initial Developer of the Original Code is
- * Netscape Communications Corporation.
- * Portions created by the Initial Developer are Copyright (C) 1998
- * the Initial Developer. All Rights Reserved.
- *
- * Contributor(s):
- *
- * Alternatively, the contents of this file may be used under the terms of
- * either of the GNU General Public License Version 2 or later (the "GPL"),
- * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
- * in which case the provisions of the GPL or the LGPL are applicable instead
- * of those above. If you wish to allow use of your version of this file only
- * under the terms of either the GPL or the LGPL, and not to allow others to
- * use your version of this file under the terms of the MPL, indicate your
- * decision by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL or the LGPL. If you do not delete
- * the provisions above, a recipient may use your version of this file under
- * the terms of any one of the MPL, the GPL or the LGPL.
- *
- * ***** END LICENSE BLOCK ***** */
-
-#include "nsITimelineService.h"
-
-#ifdef MOZ_TIMELINE
-
-#define NS_TIMELINESERVICE_CID \
-{ /* a335edf0-3daf-11d5-b67d-000064657374 */ \
-    0xa335edf0, \
-        0x3daf, \
-        0x11d5, \
-        {0xb6, 0x7d, 0x00, 0x00, 0x64, 0x65, 0x73, 0x74}}
-
-#define NS_TIMELINESERVICE_CONTRACTID "@mozilla.org;timeline-service;1"
-#define NS_TIMELINESERVICE_CLASSNAME "Timeline Service"
-
-class nsTimelineService : public nsITimelineService
-{
-public:
-  NS_DECL_ISUPPORTS
-  NS_DECL_NSITIMELINESERVICE
-
-  nsTimelineService();
-
-private:
-  ~nsTimelineService() {}
-};
-
-#endif
diff --git a/xpcom/io/nsLocalFileUnix.cpp b/xpcom/io/nsLocalFileUnix.cpp
--- a/xpcom/io/nsLocalFileUnix.cpp
+++ b/xpcom/io/nsLocalFileUnix.cpp
@@ -86,17 +86,16 @@
 #include "nsString.h"
 #include "nsReadableUtils.h"
 #include "nsLocalFile.h"
 #include "nsIComponentManager.h"
 #include "nsXPIDLString.h"
 #include "prproces.h"
 #include "nsIDirectoryEnumerator.h"
 #include "nsISimpleEnumerator.h"
-#include "nsITimelineService.h"
 
 #ifdef MOZ_WIDGET_GTK2
 #include "nsIGIOService.h"
 #include "nsIGnomeVFSService.h"
 #endif
 
 #ifdef XP_MACOSX
 #include <Carbon/Carbon.h>
diff --git a/xpcom/io/nsLocalFileWin.cpp b/xpcom/io/nsLocalFileWin.cpp
--- a/xpcom/io/nsLocalFileWin.cpp
+++ b/xpcom/io/nsLocalFileWin.cpp
@@ -72,17 +72,16 @@
 
 #include  <io.h>
 #include  <stdio.h>
 #include  <stdlib.h>
 #include  <mbstring.h>
 
 #include "nsXPIDLString.h"
 #include "prproces.h"
-#include "nsITimelineService.h"
 
 #include "nsAutoLock.h"
 #include "SpecialSystemDirectory.h"
 
 #include "nsTraceRefcntImpl.h"
 
 #define CHECK_mWorkingPath()                    \
     PR_BEGIN_MACRO                              \
diff --git a/xpfe/appshell/src/nsAppShellService.cpp b/xpfe/appshell/src/nsAppShellService.cpp
--- a/xpfe/appshell/src/nsAppShellService.cpp
+++ b/xpfe/appshell/src/nsAppShellService.cpp
@@ -54,17 +54,16 @@
 #include "nsIWindowMediator.h"
 #include "nsIWindowWatcher.h"
 #include "nsPIWindowWatcher.h"
 #include "nsIDOMWindowInternal.h"
 #include "nsWebShellWindow.h"
 
 #include "nsIEnumerator.h"
 #include "nsCRT.h"
-#include "nsITimelineService.h"
 #include "prprf.h"    
 
 #include "nsWidgetsCID.h"
 #include "nsIRequestObserver.h"
 
 /* For implementing GetHiddenWindowAndJSContext */
 #include "nsIScriptGlobalObject.h"
 #include "nsIScriptContext.h"
diff --git a/xpfe/appshell/src/nsXULWindow.cpp b/xpfe/appshell/src/nsXULWindow.cpp
--- a/xpfe/appshell/src/nsXULWindow.cpp
+++ b/xpfe/appshell/src/nsXULWindow.cpp
@@ -79,17 +79,16 @@
 #include "nsIScreen.h"
 #include "nsIScrollable.h"
 #include "nsIPrefService.h"
 #include "nsIPrefBranch.h"
 #include "nsIScriptSecurityManager.h"
 #include "nsIWindowWatcher.h"
 #include "nsIURI.h"
 #include "nsIDOMCSSStyleDeclaration.h"
-#include "nsITimelineService.h"
 #include "nsAppShellCID.h"
 #include "nsReadableUtils.h"
 #include "nsStyleConsts.h"
 #include "nsPresContext.h"
 #include "nsIContentUtils.h"
 
 #include "nsWebShellWindow.h" // get rid of this one, too...
 
