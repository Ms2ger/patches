# HG changeset patch
# Parent 8290dc16260fc42bcb1137c8b6825c0ee5d67812
# User Blake Kaplan <mrbkap@gmail.com>
Fix bug 860123.

diff --git a/layout/generic/nsSelection.cpp b/layout/generic/nsSelection.cpp
--- a/layout/generic/nsSelection.cpp
+++ b/layout/generic/nsSelection.cpp
@@ -4383,18 +4383,22 @@ Selection::Collapse(nsINode* aParentNode
     return NS_ERROR_NOT_INITIALIZED; // Can't do selection
 
   nsCOMPtr<nsINode> kungfuDeathGrip = aParentNode;
 
   mFrameSelection->InvalidateDesiredX();
   if (!IsValidSelectionPoint(mFrameSelection, aParentNode))
     return NS_ERROR_FAILURE;
   nsresult result;
+
+  nsRefPtr<nsPresContext> presContext = GetPresContext();
+  if (presContext->Document() != aParentNode->OwnerDoc())
+    return NS_ERROR_FAILURE;
+
   // Delete all of the current ranges
-  nsRefPtr<nsPresContext>  presContext = GetPresContext();
   Clear(presContext);
 
   // Turn off signal for table selection
   mFrameSelection->ClearTableCellSelection();
 
   nsRefPtr<nsRange> range = new nsRange(aParentNode);
   result = range->SetEnd(aParentNode, aOffset);
   if (NS_FAILED(result))
@@ -4611,16 +4615,20 @@ Selection::Extend(nsINode* aParentNode, 
 
   if (!mFrameSelection)
     return NS_ERROR_NOT_INITIALIZED; // Can't do selection
 
   nsresult res;
   if (!IsValidSelectionPoint(mFrameSelection, aParentNode))
     return NS_ERROR_FAILURE;
 
+  nsRefPtr<nsPresContext> presContext = GetPresContext();
+  if (presContext->Document() != aParentNode->OwnerDoc())
+    return NS_ERROR_FAILURE;
+
   //mFrameSelection->InvalidateDesiredX();
 
   nsINode* anchorNode = GetAnchorNode();
   nsINode* focusNode = GetFocusNode();
   int32_t anchorOffset = GetAnchorOffset();
   int32_t focusOffset = GetFocusOffset();
 
   nsRefPtr<nsRange> range = mAnchorFocusRange->CloneRange();
@@ -4645,17 +4653,16 @@ Selection::Extend(nsINode* aParentNode, 
   int32_t result2 = nsContentUtils::ComparePoints(focusNode, focusOffset,
                                                   aParentNode, aOffset,
                                                   &disconnected);
   //compare anchor to new cursor
   int32_t result3 = nsContentUtils::ComparePoints(anchorNode, anchorOffset,
                                                   aParentNode, aOffset,
                                                   &disconnected);
 
-  nsRefPtr<nsPresContext>  presContext = GetPresContext();
   nsRefPtr<nsRange> difRange = new nsRange(aParentNode);
   if ((result1 == 0 && result3 < 0) || (result1 <= 0 && result2 < 0)){//a1,2  a,1,2
     //select from 1 to 2 unless they are collapsed
     res = range->SetEnd(aParentNode, aOffset);
     if (NS_FAILED(res))
       return res;
     dir = eDirNext;
     res = difRange->SetEnd(range->GetEndParent(), range->EndOffset());
